[
  {
    "control_title": "CIS Control: 0.0 Explicitly Not Mapped (Version 8)",
    "section_id": 2841875,
    "recommendation_id": 4666880,
    "view_level": "2.7.2",
    "title": "Audit iPhone Mirroring",
    "pivot_control_id": 534,
    "pivot_recommendation_id": 4666880,
    "url": "https://workbench.cisecurity.org/sections/2841875/recommendations/4666880",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "iPhone Mirroring is a new feature offered in iOS 18 and macOS 15.0 Sequoia. It allows a macOS device to remotely access an iOS device connected to the same Apple Account. If a user has different Apple Accounts signed into iOS and macOS (ex. a managed Apple Account on macOS and a personal Apple Account on iOS), the feature is not available.",
    "rationale_statement": "Enabling iPhone Mirroring may allow a macOS device to capture data from an iOS device (ex Image Capture). This would occur where the macOS device has not been approved to access that information by your organization's policies and the iOS device has been approved (or vice-versa).\nIf iPhone Mirroring is currently in use on an iOS device, the lock screen will have a notification that states iPhone in Use and state what device is using it. If iPhone Mirroring was in use on an iOS device but is no longer in use, the first time the user unlocks the iOS device it will notify the user that iPhone was used from Mac.",
    "impact_statement": "If iPhone Mirroring is disabled, it would stop a user from accessing information on their iOS device while using their macOS device.",
    "audit_procedure": "Perform the following to if the system is configured for iPhone Mirroring:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow iPhone Mirroring set to True or False based on your organization's requirements\n\nTerminal Method:\nRun the following command to verify the configuration for iPhone mirroring:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple. applicationaccess')\\\n.objectForKey('allowiPhoneMirroring').js\nEOS\n\nThe output will be either true, allow iPhone mirroring, or false, disable iPhone mirroring.",
    "remediation_procedure": "Perform the following to configure iPhone Mirroring:\nGraphical Method:\n\nOpen System Settings\nSelect Desktop & Dock\nUnder the Widgets sub-header, verify iPhone is configured to your organization's requirements\n\nNote: The iPhone setting will only show up if there are multiple iPhones being connected to the user's Apple Account and setup with iPhone mirroring.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess \nThe key to include is allowiPhoneMirroring \nThe key must be set to either <true/> or <false/> depending on your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 0.0 Explicitly Not Mapped (Version 8)",
    "section_id": 2841886,
    "recommendation_id": 4596729,
    "view_level": "2.14.1",
    "title": "Audit Game Center Settings",
    "pivot_control_id": 534,
    "pivot_recommendation_id": 4596729,
    "url": "https://workbench.cisecurity.org/sections/2841886/recommendations/4596729",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With macOS 10.13, Apple has introduced a separate section for Game Center in System Settings. It is possible to log in with the Apple Account and use the iCloud-based Game Center services.\nGame Center is a feature from Apple that allows users to engage in game-related activities with friends when playing multiplayer games online on the Game Center social network. User profile data such as nickname, contact discovery, and also nearby players may be shared through iCloud.\nApple collects information here, such as the games users play and when they play them, all scores and achievements, and the challenges users send and receive. This information is used to track users' high scores, achievements, and challenges and to improve Game Center.\nThe automatic sign in to Game Center with AppleID should be disabled if not aligned with organizational rules\nPersonal profile visibility, Finding by Friends, requests from Contacts, Nearby Player detection and Connecting with Friends are all visibility options that should be risk accepted through an organizational policy before use.\nUsers should not sign in to Game Center on organizational managed devices if not covered under acceptable use. For personal devices Game Center should not be signed in if the user is not using Apple's gaming service.",
    "rationale_statement": "Ensure Game Center service is used consistently with organizational requirements.",
    "impact_statement": "Game Center is designed as a social network to use Apple's gaming service and includes capabilities to discover players in the service as through local network discovery. If the Apple feature is not needed it should not be on, and should not be signed in.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the status of iCloud Game Center service:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow GameCenter set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud allow GameCenter setting to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowGameCenter').js\nEOS\n\nIf the output is false, Game Center is disabled. If the output is true Game Center is enabled.\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowGameCenter\nThe key should be set <true/>, to allow Game Center, or <false/>, to disable it, based on your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 0.0 Explicitly Not Mapped (Version 8)",
    "section_id": 2841888,
    "recommendation_id": 4596731,
    "view_level": "2.16.1",
    "title": "Audit Wallet & Apple Pay Settings",
    "pivot_control_id": 534,
    "pivot_recommendation_id": 4596731,
    "url": "https://workbench.cisecurity.org/sections/2841888/recommendations/4596731",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Touch ID is a prerequisite for using Apple Pay and Wallet on macOS. Apple Pay allows an Apple account holder to enroll their credit cards in Apple Pay and pay enrolled vendors without using the physical card or number. Apple's service eliminates the requirement to send the credit card number itself to the vendor. Apple Pay on a Mac allows the use of credit cards the user has already enrolled and reduces user risk for credit card purchases.",
    "rationale_statement": "Some environments may have rules around purchases from organizationally managed computers and may want to discourage shopping from them. It is difficult to block access to websites that allow purchases, and Apple Pay has more controls for user protection than the manual entry of credit card information.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following to verify Wallet & Apple Pay settings:\n\nOpen System Settings\nSelect Wallet & Apple Pay\nVerify the Wallet & Apple Pay settings match your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Wallet & Apple Pay to your organization's settings:\n\nOpen System Settings\nSelect Wallet & Apple Pay\nSet the Wallet & Apple Pay settings to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 1.1 Establish and Maintain Detailed Enterprise Asset Inventory (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596657,
    "view_level": "2.3.3.12",
    "title": "Ensure Computer Name Does Not Contain PII or Protected Organizational Information",
    "pivot_control_id": 363,
    "pivot_recommendation_id": 4596657,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596657",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "If the computer is used in an organization that assigns host names, it is a good idea to change the computer name to the host name. This is more of a best practice than a security measure. If the host name and the computer name are the same, computer support may be able to track problems down more easily.\nFor organizations or for users that self-administer their own computers, it is important to not use sensitive or personal information in computer names. The name of a computer that uses untrusted networks will be exposed at a minimum to the responsible network team of that network. For instance, having your name as your hostname can provide useful knowledge to an attacker monitoring the network you may be connected to.\nExamples of possibly inappropriate content in computer names include:\n\nUser directory account names\nComputer directory account names where machine accounts exist\nContact phone numbers\nPhysical locations of offices or residences\nPersonal information that can be augmented with Facebook data to assist social engineering attacks\n\nStandard naming patterns avoid collisions and mitigate risk for computer users.\nWith mobile devices, using DHCP IP tracking has serious drawbacks. Hostname or computer name tracking makes much more sense for those organizations that can implement it. If the computer is using different names for the \"Computer Name\" DNS and Directory environments, it can be difficult to manage Macs in an Enterprise asset inventory.",
    "rationale_statement": "Part of IT security is having visibility into all of the devices for which an organization is responsible. Without a complete inventory, it is impossible to ensure all security controls are met on all organizational devices.\nDefault macOS naming deconfliction controls can create issues for appropriate management and tracking as well as privacy exposure. By default, the name of a macOS computer is derived from the first user created. If the user has multiple computers or an image is used without an appropriate name change, there will be multiple computers with names derived from the same user for discovery deconfliction. How many \"Ron Colvin's MacBook Pro\" should there be, and are any missing?\nLocal network auto renaming to avoid collisions also allows for the enumeration of local computer names. Computers should not be named after their users, especially on untrusted networks. For social engineering purposes, the computer name should not provide a full name of the user or an identifiable name that might be used to assist in targeted user attacks.\nA documented plan to better enable a complete device inventory without exposing user or organizational information is part of mature security.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the computer name:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Hostname is set to your organization's parameters",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set the computer name:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSelect Edit...\nSet Hostname to your organization's parameters",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.1 Establish and Maintain a Software Inventory (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596652,
    "view_level": "3.6",
    "title": "Audit Software Inventory",
    "pivot_control_id": 369,
    "pivot_recommendation_id": 4596652,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596652",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With the introduction of Mac OS X 10.6.6, Apple added a new application, App Store, which resides in the Applications directory. This application allows a user with admin privileges and an Apple Account to browse Apple's online App Store, purchase (including no-cost purchases), and install new applications, bypassing Enterprise software inventory controls. Any admin user can install software in the /Applications directory whether from internet downloads, thumb drives, optical media, cloud storage, or even binaries through email. Even standard users can run executables downloaded to their home folder by default. The source of the software is not nearly as important as a consistent audit of all installed software for patch compliance and appropriateness.\nA single user desktop where the user, administrator, and the person approving software are all the same person probably does not need to audit software inventory to this extent. It is helpful in the case of stability problems or malware, however.\nScan systems on a monthly basis and determine the number of unauthorized pieces of software that are installed. Verify that if an unauthorized piece of software is found one month, it is removed from the system the next.\nExport System Information through the built-in System Information Application or other third-party tools on an organizationally defined timetable.",
    "rationale_statement": "Part of comprehensive IT security involves device management and ensuring that all software is authorized and patched. Checking for macOS updates and app updates are relatively simple for the end user, and can even be updated with minimal privileges from trusted sources, if enabled. Remote monitoring of the patch status for software maintained through Apple is very well supported by management applications. Neither Apple capabilities nor third-party patch management solutions will cover all mission-necessary software for most organizations. Full visibility into software present on the system enables vulnerability and risk management.\nP.S. Don't forget about browser plugins/extensions for all installed software.",
    "impact_statement": "",
    "audit_procedure": "Graphical Mode:\nPerform the following steps to access System Information:\n\nOpen /Applications/Utilities/System Information\nSelect Software\nSelect System Report\nSelect Applications\nVerify that no Applications listed are against your organization's requirements\nSelect Installations\nVerify that no Installations listed are against your organization's requirements\n\nTerminal Method:\nRun the following command to view all System Profiler details\n% /usr/bin/sudo /usr/sbin/system_profiler SPApplicationsDataType",
    "remediation_procedure": "Delete any unnecessary applications from the system.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.3 Address Unauthorized Software (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596678,
    "view_level": "2.6.1.3",
    "title": "Audit Location Services Access",
    "pivot_control_id": 371,
    "pivot_recommendation_id": 4596678,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596678",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. While Location Services may be very useful, it may not be desirable to allow all applications that can use Location Services to use your location for Internet queries in order to provide tailored content based on your current location.\nEnsure applications that can use Location Services are authorized and provide that information where the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to supply information on the menu bar when Location Services are used.\nSafari can deny access from websites or prompt for access.\nApplications that support Location Services can be individually controlled in the Privacy tab in Security & Privacy under System Preferences.\nAccess should be evaluated to ensure that privacy controls are as expected.",
    "rationale_statement": "Privacy controls should be monitored for appropriate settings.",
    "impact_statement": "Many macOS features rely on Location Services for tailored information. Users expect their time zone and weather to be relevant to where they are without manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility locations are not public, location information should be tightly controlled.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what applications are enabled for Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nVerify that the applications allowed to access Location Services are set to your organization's requirements\n\nPerform the following steps to verify what websites are enabled to ask for access to Location Services:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Location\nVerify that When visiting other websites is set to your organization's requirements\n\nTerminal Method:\nRun the following command to evaluate the applications that are enabled to use Location Services:\n% /usr/bin/sudo /usr/bin/defaults read /var/db/locationd/clients.plist\n\nEnsure that all applications listed have been authorized to access location information.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable unnecessary applications from accessing Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSet any applications listed to your organization's requirements\n\nPerform the following steps to set websites to ask for permission to access Location Services:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Location\nSet When visiting other websites to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.3 Address Unauthorized Software (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596662,
    "view_level": "5.1.2",
    "title": "Ensure System Integrity Protection Status (SIP) Is Enabled",
    "pivot_control_id": 371,
    "pivot_recommendation_id": 4596662,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596662",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. System Integrity Protection restricts access to System domain locations and restricts runtime attachment to system processes. Any attempt to inspect or attach to a system process will fail. Kernel Extensions are now restricted to /Library/Extensions and are required to be signed with a Developer ID.",
    "rationale_statement": "Running without System Integrity Protection on a production system runs the risk of the modification of system binaries or code injection of system processes that would otherwise be protected by SIP.",
    "impact_statement": "System binaries and processes could become compromised.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that System Integrity Protection is enabled:\n% /usr/bin/sudo /usr/bin/csrutil status\n\n`System Integrity Protection status: enabled.`",
    "remediation_procedure": "Terminal Method:\nPerform the following steps to enable System Integrity Protection:\n\nReboot into the Recovery Partition (reboot and hold down Command (\u2318) + R)\nSelect Utilities\nSelect Terminal\nRun the following command:\n\n# /usr/bin/sudo /usr/bin/csrutil enable\n\nSuccessfully enabled System Integrity Protection. Please restart the machine for the changes to take effect.\n\n\nReboot the computer\n\nNote: You should research why the system had SIP disabled. It might be a better option to erase the Mac and reinstall the operating system. That is at your discretion.\nNote: You cannot enable System Integrity Protection from the booted operating system. If the remediation is attempted in the booted OS and not the Recovery Partition the output will give the error csrutil: failed to modify system integrity configuration. This tool needs to be executed from the Recovery OS.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.3 Address Unauthorized Software (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596663,
    "view_level": "5.1.3",
    "title": "Ensure Apple Mobile File Integrity (AMFI) Is Enabled",
    "pivot_control_id": 371,
    "pivot_recommendation_id": 4596663,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596663",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple Mobile File Integrity (AMFI) was first released in macOS 10.12. The daemon and service block attempts to run unsigned code. AMFI uses launchd, code signatures, certificates, entitlements, and provisioning profiles to create a filtered entitlement dictionary for an app. AMFI is the macOS kernel module that enforces code-signing and library validation.",
    "rationale_statement": "Apple Mobile File Integrity validates that application code is validated.",
    "impact_statement": "Applications could be compromised with malicious code.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that Apple Mobile File Integrity is enabled:\n% /usr/bin/sudo /usr/sbin/nvram -p | /usr/bin/grep -c \"amfi_get_out_of_my_way=1\"\n\n0\n\nNote: AMFI cannot be disabled with SIP enabled, but a change attempt can be made that will appear successful, and report incorrectly as successful. If the AMFI audit fails, and the SIP audit passes, this is still an issue the admin should research.",
    "remediation_procedure": "Terminal Method:\nRun the following command to enable the Apple Mobile File Integrity service:\n% /usr/bin/sudo /usr/sbin/nvram boot-args=\"\"",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.3 Address Unauthorized Software (Version 8)",
    "section_id": 2841873,
    "recommendation_id": 4596688,
    "view_level": "6.1.1",
    "title": "Ensure Show All Filename Extensions Setting is Enabled",
    "pivot_control_id": 371,
    "pivot_recommendation_id": 4596688,
    "url": "https://workbench.cisecurity.org/sections/2841873/recommendations/4596688",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A filename extension is a suffix added to a base filename that indicates the base filename's file format.",
    "rationale_statement": "Visible filename extensions allow the user to identify the file type and the application it is associated with which leads to quick identification of misrepresented malicious files.",
    "impact_statement": "The user of the system can open files of unknown or unexpected filetypes if the extension is not visible.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that file extensions are shown:\n\nOpen Finder\nSelect Finder in the menu bar\nSelect Settings\nSelect Advanced\nVerify that Show all filename extensions is set\n\nTerminal Method:\nRun the following command to verify that displaying of file extensions is enabled:\n% /usr/bin/sudo -u <username> /usr/bin/defaults read /Users/<username>/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions\n\n1\n\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/defaults read /Users/firstuser/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions\n\n1\n\n% /usr/bin/sudo -u seconduser /usr/bin/defaults read /Users/secondname/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions\n\nThe domain/default pair of (/Users/secondname/Library/Preferences/.GlobalPreferences.plist, AppleShowAllExtensions) does not exist\n\n\nIn this example, firstuser is in compliance and seconduser is not.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to ensure file extensions are shown:\n\nOpen Finder\nSelect Finder in the menu bar\nSelect Settings\nSelect Advanced\nSet Show all filename extensions to enabled\n\nTerminal Method:\nRun the following command to enable displaying of file extensions:\n% /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions -bool true\n\n% /usr/bin/sudo killall Finder\n\nexample:\n% /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/secondname/Library/Preferences/.GlobalPreferences.plist AppleShowAllExtensions -bool true\n\n% /usr/bin/sudo killall Finder",
    "default_value": "Filename extensions are turned off by default."
  },
  {
    "control_title": "CIS Control: 2.6 Allowlist Authorized Libraries (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596662,
    "view_level": "5.1.2",
    "title": "Ensure System Integrity Protection Status (SIP) Is Enabled",
    "pivot_control_id": 374,
    "pivot_recommendation_id": 4596662,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596662",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. System Integrity Protection restricts access to System domain locations and restricts runtime attachment to system processes. Any attempt to inspect or attach to a system process will fail. Kernel Extensions are now restricted to /Library/Extensions and are required to be signed with a Developer ID.",
    "rationale_statement": "Running without System Integrity Protection on a production system runs the risk of the modification of system binaries or code injection of system processes that would otherwise be protected by SIP.",
    "impact_statement": "System binaries and processes could become compromised.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that System Integrity Protection is enabled:\n% /usr/bin/sudo /usr/bin/csrutil status\n\n`System Integrity Protection status: enabled.`",
    "remediation_procedure": "Terminal Method:\nPerform the following steps to enable System Integrity Protection:\n\nReboot into the Recovery Partition (reboot and hold down Command (\u2318) + R)\nSelect Utilities\nSelect Terminal\nRun the following command:\n\n# /usr/bin/sudo /usr/bin/csrutil enable\n\nSuccessfully enabled System Integrity Protection. Please restart the machine for the changes to take effect.\n\n\nReboot the computer\n\nNote: You should research why the system had SIP disabled. It might be a better option to erase the Mac and reinstall the operating system. That is at your discretion.\nNote: You cannot enable System Integrity Protection from the booted operating system. If the remediation is attempted in the booted OS and not the Recovery Partition the output will give the error csrutil: failed to modify system integrity configuration. This tool needs to be executed from the Recovery OS.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 2.6 Allowlist Authorized Libraries (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596663,
    "view_level": "5.1.3",
    "title": "Ensure Apple Mobile File Integrity (AMFI) Is Enabled",
    "pivot_control_id": 374,
    "pivot_recommendation_id": 4596663,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596663",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple Mobile File Integrity (AMFI) was first released in macOS 10.12. The daemon and service block attempts to run unsigned code. AMFI uses launchd, code signatures, certificates, entitlements, and provisioning profiles to create a filtered entitlement dictionary for an app. AMFI is the macOS kernel module that enforces code-signing and library validation.",
    "rationale_statement": "Apple Mobile File Integrity validates that application code is validated.",
    "impact_statement": "Applications could be compromised with malicious code.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that Apple Mobile File Integrity is enabled:\n% /usr/bin/sudo /usr/sbin/nvram -p | /usr/bin/grep -c \"amfi_get_out_of_my_way=1\"\n\n0\n\nNote: AMFI cannot be disabled with SIP enabled, but a change attempt can be made that will appear successful, and report incorrectly as successful. If the AMFI audit fails, and the SIP audit passes, this is still an issue the admin should research.",
    "remediation_procedure": "Terminal Method:\nRun the following command to enable the Apple Mobile File Integrity service:\n% /usr/bin/sudo /usr/sbin/nvram boot-args=\"\"",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596655,
    "view_level": "2.3.3.11",
    "title": "Ensure Bluetooth Sharing Is Disabled",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596655,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596655",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Bluetooth Sharing allows files to be exchanged with Bluetooth-enabled devices.",
    "rationale_statement": "Disabling Bluetooth Sharing minimizes the risk of an attacker using Bluetooth to remotely attack the system.",
    "impact_statement": "There is a general expectation that Bluetooth peripherals will be used by most users in Apple's ecosystem. Disabling sharing should have no impact on the use of Bluetooth peripherals.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Bluetooth Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Bluetooth Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that Bluetooth Sharing is disabled:\n% /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost read com.apple.Bluetooth PrefKeyServicesEnabled\n\n0\n\n% /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read com.apple.Bluetooth PrefKeyServicesEnabled\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Bluetooth Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Bluetooth Sharing to disabled\n\nTerminal Method:\nRun the following command to disable Bluetooth Sharing is disabled:\n% /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false\n\n% /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841884,
    "recommendation_id": 4596726,
    "view_level": "2.12.2",
    "title": "Ensure Guest Access to Shared Folders Is Disabled",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596726,
    "url": "https://workbench.cisecurity.org/sections/2841884/recommendations/4596726",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Allowing guests to connect to shared folders enables users to access selected shared folders and their contents from different computers on a network.",
    "rationale_statement": "Not allowing guests to connect to shared folders mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system.",
    "impact_statement": "Unauthorized users could access shared files on the system.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that guests cannot connect to shared folders:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nVerify that Allow guests to connect to shared folders is disabled\n\nTerminal Method:\nRun the following commands to verify that shared folders are not accessible to guest users:\n% /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess status\n\nThe output should include SMB guest access disabled.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to no longer allow guest user access to shared folders:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nSet Allow guests to connect to shared folders to disabled\n\nTerminal Method:\nRun the following commands to verify that shared folders are not accessible to guest users:\n% /usr/bin/sudo /usr/sbin/sysadminctl -smbGuestAccess off",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596648,
    "view_level": "3.5",
    "title": "Ensure Access to Audit Records Is Controlled",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596648,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596648",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The audit system on macOS writes important operational and security information that can be both useful for an attacker and a place for an attacker to attempt to obfuscate unwanted changes that were recorded. As part of defense-in-depth, the /etc/security/audit_control configuration and the files in /var/audit should be owned only by root with group wheel with read-only rights and no other access allowed. macOS ACLs should not be used for these files.\nThe default folder for storing logs is /var/audit, but it can be changed. This recommendation will ensure that any target directory has appropriate access control in place even if the target directory is not the default of /var/audit.",
    "rationale_statement": "Audit records should never be changed except by the system daemon posting events. Records may be viewed or extracts manipulated, but the authoritative files should be protected from unauthorized changes.",
    "impact_statement": "This control is only checking the default configuration to ensure that unwanted access to audit records is not available.",
    "audit_procedure": "Terminal Method:\nRun the following commands to check file access rights:\n% /usr/bin/sudo /bin/ls -n /etc/security/audit_control | /usr/bin/awk '{s+=$3} END {print s}'\n\n0\n\n% /usr/bin/sudo /bin/ls -n /etc/security/audit_control | /usr/bin/awk '{s+=$4} END {print s}'\n\n0\n\n% /usr/bin/sudo /bin/ls -n /etc/security/audit_control | /usr/bin/awk '!/-r--r-----|current|total/{print $1}' | /usr/bin/wc -l | /usr/bin/tr -d ' '\n\n0\n\n% /usr/bin/sudo /bin/ls -n $(/usr/bin/grep '^dir' /etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk '{s+=$3} END {print s}'\n\n0\n\n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/grep '^dir' /etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk '{s+=$4} END {print s}'\n\n0\n\n$ /usr/bin/sudo /bin/ls -n $(/usr/bin/grep '^dir' /etc/security/audit_control | /usr/bin/awk -F: '{print $2}') | /usr/bin/awk '!/-r--r-----|current|total/{print $1}' | /usr/bin/wc -l | /usr/bin/tr -d ' '\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following to commands to set the audit records to the root user and wheel group:\n% /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/security/audit_control\n\n% /usr/bin/sudo /bin/chmod -R 440 /etc/security/audit_control\n\n% /usr/bin/sudo /usr/sbin/chown -R root:wheel $(/usr/bin/sudo /usr/bin/grep '^dir' /etc/security/audit_control | /usr/bin/awk -F: '{print $2}')\n\n% /usr/bin/sudo /bin/chmod -R 440 $(/usr/bin/grep '^dir' /etc/security/audit_control | /usr/bin/awk -F: '{print $2}')\n\nNote: It is recommended to do a thorough verification process on why the audit logs have been changed before following the remediation steps. If the system has different access controls on the audit logs, and the changes cannot be traced, a new install may be prudent. Check for signs of file tampering as well as unapproved OS changes.\nNote: In macOS 14, and versions going forward, Apple disabled auditd by default. Since that is the default, the /etc/security/audit_control does not exist. If this remediation is ran without copying the /etc/security/audit_control.example to /etc/security/audit_control then it can cause a recursive permissions issue and can cause an unsupported state (undesired results) and booting anomalies.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596660,
    "view_level": "5.1.1",
    "title": "Ensure Home Folders Are Secure",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596660,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596660",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "By default, macOS allows all valid users into the top level of every other user's home folder and restricts access to the Apple default folders within. Another user on the same system can see you have a \"Documents\" folder but cannot see inside it. This configuration does work for personal file sharing but can expose user files to standard accounts on the system.\nThe best parallel for Enterprise environments is that everyone who has a Dropbox account can see everything that is at the top level but can't see your pictures. Similarly with macOS, users can see into every new Directory that is created because of the default permissions.\nHome folders should be restricted to access only by the user. Sharing should be used on dedicated servers or cloud instances that are managing access controls. Some environments may encounter problems if execute rights are removed as well as read and write. Either no access or execute only for group or others is acceptable.",
    "rationale_statement": "Allowing all users to view the top level of all networked users' home folder may not be desirable since it may lead to the revelation of sensitive information.",
    "impact_statement": "If implemented, users will not be able to use the \"Public\" folders in other users' home folders. \"Public\" folders with appropriate permissions would need to be set up in the /Shared folder.",
    "audit_procedure": "Terminal Method:\nRun the following command to ensure that all home folders are secure:\n% /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Users -mindepth 1 -maxdepth 1 -type d -not -perm 700 | /usr/bin/grep -v \"Shared\" | /usr/bin/grep -v \"Guest\"\n\nThe output will show what user folders are not secure.\nexample:\n% /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Users -mindepth 1 -maxdepth 1 -type d -not -perm 700 | /usr/bin/grep -v \"Shared\" | /usr/bin/grep -v \"Guest\" \n\n/System/Volumes/Data/Users/firstuser\n/System/Volumes/Data/Users/thirduser",
    "remediation_procedure": "Terminal Method:\nFor each user, run the following command to secure all home folders:\n% /usr/bin/sudo /bin/chmod -R og-rwx /Users/<username>\n\nAlternately, run the following command if there needs to be executable access for a home folder:\n% /usr/bin/sudo /bin/chmod -R og-rw /Users/<username>\n\nexample:\n% /usr/bin/sudo /bin/chmod -R og-rw /Users/firstuser/\n\n% /usr/bin/sudo /bin/chmod -R og-rwx /Users/thirduser/",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596666,
    "view_level": "5.1.5",
    "title": "Ensure Appropriate Permissions Are Enabled for System Wide Applications",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596666,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596666",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Applications in the System Applications Directory (/Applications) should be world-executable since that is their reason to be on the system. They should not be world-writable and allow any process or user to alter them for other processes or users to then execute modified versions.",
    "rationale_statement": "Unauthorized modifications of applications could lead to the execution of malicious code.",
    "impact_statement": "Applications changed will no longer be world-writable. Depending on the environment, there will be different risk tolerances on each non-conforming application. Global changes should not be performed where mission-critical applications are misconfigured.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that all applications have the correct permissions:\n% /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Applications -iname \"*\\.app\" -type d -perm -2 -ls | grep -v Xcode.app | /usr/bin/wc -l | /usr/bin/xargs\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following command to change the permissions for each application that does not meet the requirements:\n% /usr/bin/sudo IFS=$'\\n'\nfor apps in $( /usr/bin/find /System/Volumes/Data/Applications -iname \"*\\.app\" -type d -perm -2 | grep -v Xcode.app ); do\n  /bin/chmod -R o-w \"$apps\"\ndone\n\nNote: Global changes should not be performed where mission-critical applications are part of the improperly permissioned applications.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596668,
    "view_level": "5.1.6",
    "title": "Ensure No World Writable Folders Exist in the System Folder",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596668,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596668",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Software sometimes insists on being installed in the /System/Volumes/Data/System Directory and has inappropriate world-writable permissions.\nMacs with writable files in System should be investigated forensically. A file with open writable permissions is a sign of at best a rogue application.  It could also be a sign of a computer compromise and a persistent presence on the system.",
    "rationale_statement": "Folders in /System/Volumes/Data/System should not be world-writable. The audit check excludes the downloadDir and locks folders that are part of Apple's default user template.",
    "impact_statement": "Changing file permissions could disrupt the use of applications that rely on files in the System Folder with vulnerable permissions.",
    "audit_procedure": "Terminal Method:\nRun the following command to check for directories in the /System folder that are world-writable:\n% /usr/bin/sudo /usr/bin/find /System/Volumes/Data/System -type d -perm -2 -ls | /usr/bin/grep -vE \"downloadDir|locks\" | /usr/bin/wc -l | /usr/bin/xargs\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following command to set permissions so that folders are not world-writable in the /System folder:\n% /usr/bin/sudo IFS=$'\\n'\n  for sysPermissions in $( /usr/bin/find /System/Volumes/Data/System -type d -perm -2 | /usr/bin/grep -vE \"downloadDir|locks\" ); do\n    /bin/chmod -R o-w \"$sysPermissions\"\n  done",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.3 Configure Data Access Control Lists (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596670,
    "view_level": "5.1.7",
    "title": "Ensure No World Writable Folders Exist in the Library Folder",
    "pivot_control_id": 379,
    "pivot_recommendation_id": 4596670,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596670",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Software sometimes insists on being installed in the /System/Volumes/Data/Library Directory and has inappropriate world-writable permissions.",
    "rationale_statement": "Folders in /System/Volumes/Data/Library should not be world-writable. The audit check excludes the /System/Volumes/Data/Library/Caches and /System/Volumes/Data/Library/Preferences/Audio/Data folders where the sticky bit is set.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nRun the following to verify that no directories in the /System/Volumes/Data/Library folder are world-writable:\n% /usr/bin/sudo /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 -ls 2>&1 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data | /usr/bin/wc -l | /usr/bin/xargs\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following command to set permissions so that folders are not world-writable in the /System/Volumes/Data/Library folder:\n% /usr/bin/sudo IFS=$'\\n'\nfor libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 2>&1 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data ); do\n  /bin/chmod -R o-w \"$libPermissions\"\ndone",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.6 Encrypt Data on End-User Devices (Version 8)",
    "section_id": 2841863,
    "recommendation_id": 4596661,
    "view_level": "2.3.4.2",
    "title": "Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled",
    "pivot_control_id": 382,
    "pivot_recommendation_id": 4596661,
    "url": "https://workbench.cisecurity.org/sections/2841863/recommendations/4596661",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "One of the most important security tools for data protection on macOS is FileVault. With encryption in place, it makes it difficult for an outside party to access your data if they get physical possession of the computer. One very large weakness in data protection with FileVault is the level of protection on backup volumes. If the internal drive is encrypted but the external backup volume that goes home in the same laptop bag is not, it is self-defeating. Apple tries to make this mistake easily avoided by providing a checkbox to enable encryption when setting up a Time Machine backup. Using this option does require some password management, particularly if a large drive is used with multiple computers. A unique, complex password to unlock the drive can be stored in keychains on multiple systems for ease of use.\nWhile some portable drives may contain non-sensitive data and encryption may make interoperability with other systems difficult, backup volumes should be protected just like boot volumes.\nNote: This recommendation needs to be set on devices where Time Machine is enabled. If Time Machine is disabled, the audit is passed by default.",
    "rationale_statement": "Backup volumes need to be encrypted.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the drive used for Time Machine is encrypted:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nVerify that every drive setup for Time Machine states Encrypted\n\nTerminal Method:\nRun the following command to verify if the Time Machine disk encryption is enabled:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/com.apple.TimeMachine.plist | grep -c NotEncrypted\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable encryption on the Time Machine drive:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nSelect the unencrypted drive\nSelect - to forget that drive as a destination\nSelect + to add a different drive as the destination\nSelect Set Up Disk...\nSet Encrypt Backup to enabled\nEnter a password in the New Password and the same password in the Re-enter Password fields\nA password hint is required, but it is recommended that you do not use any identifying information for the password\n\nNote: In macOS 12.0 Monterey and previous, the existing Time Machine drive could have encryption added without formatting it. This is no longer possible in macOS 13.0 Ventura. If you wish to keep previous backups from the unencrypted volume, you will need to manually move those files over to the new encrypted drive.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.6 Encrypt Data on End-User Devices (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596687,
    "view_level": "2.6.6",
    "title": "Ensure FileVault Is Enabled",
    "pivot_control_id": 382,
    "pivot_recommendation_id": 4596687,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596687",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "FileVault secures a system's data by automatically encrypting its boot volume and requiring a password or recovery key to access it.\nFileVault should be used with a saved escrow key to ensure that the owner can decrypt their data if the password is lost.\nFileVault may also be enabled using command line using the fdesetup command. To use this functionality, consult the Der Flounder blog for more details (see link below under References).",
    "rationale_statement": "Encrypting sensitive data minimizes the likelihood of unauthorized users gaining access to it.",
    "impact_statement": "Mounting a FileVault encrypted volume from an alternate boot source will require a valid password to decrypt it. Apple has also implemented an escalating policy for failed passwords. To find out more about that, read here: Passcodes and passwords",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that FileVault is enabled:\n\nOpen System Settings\nSelect Privacy & Privacy\nVerify that FileVault states FileVault is turned on for the disk \"<disk name>\"\nSelect General\nSelect Device Management\nVerify that an installed profile has FileVault Can't Disable set to True\n\nTerminal Method:\nRun the following command to verify that FileVault is enabled and cannot be disabled:\n% /usr/bin/sudo /usr/bin/fdesetup status\n\nFileVault is On\n\n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n.objectForKey('dontAllowFDEDisable').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable FileVault:\n\nOpen System Settings\nSelect Security & Privacy\nSelect Turn On...\n\nNote: This will allow you to create a recovery key for FileVault. Keep the key saved securely in case it is needed at a later date.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is dontAllowFDEDisable\nThe key must be set to <true/>\n\nNote: This profile is required to pass the audit.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.6 Encrypt Data on End-User Devices (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596665,
    "view_level": "5.1.4",
    "title": "Ensure Signed System Volume (SSV) Is Enabled",
    "pivot_control_id": 382,
    "pivot_recommendation_id": 4596665,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596665",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Signed System Volume is a security feature introduced in macOS 11.0 Big Sur.\nDuring system installation, a SHA-256 cryptographic hash is calculated for all immutable system files and stored in a Merkle tree which itself is hashed as the Seal. Both are stored in the metadata of the snapshot created of the System volume.\nThe seal is verified by the boot loader at startup. macOS will not boot if system files have been tampered with. If validation fails, the user will be instructed to reinstall the operating system.\nDuring read operations for files located in the Signed System Volume, a hash is calculated and compared to the value stored in the Merkle tree.",
    "rationale_statement": "Running without Signed System Volume on a production system could run the risk of Apple software that integrates directly with macOS being modified.",
    "impact_statement": "Apple Software that integrates with the operating system could become compromised.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that Signed System Volume is enabled:\n% /usr/bin/sudo /usr/bin/csrutil authenticated-root status\n\nAuthenticated Root status: enabled",
    "remediation_procedure": "If SSV has been disabled, assume that the operating system has been compromised. Back up any files, and do a clean install to a known good Operating System.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.6 Encrypt Data on End-User Devices (Version 8)",
    "section_id": 2841874,
    "recommendation_id": 4596689,
    "view_level": "5.3.1",
    "title": "Ensure all user storage APFS volumes are encrypted",
    "pivot_control_id": 382,
    "pivot_recommendation_id": 4596689,
    "url": "https://workbench.cisecurity.org/sections/2841874/recommendations/4596689",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple developed a new file system which was first made available in 10.12 and then became the default in 10.13. The file system is optimized for Flash and Solid-State storage and encryption.\nhttps://en.wikipedia.org/wiki/Apple_File_System\nmacOS computers generally have several volumes created as part of APFS formatting, including Preboot, Recovery and Virtual Memory (VM), as well as traditional user disks.\nAll APFS volumes that do not have specific roles and do not require encryption should be encrypted. \"Role\" disks include Preboot, Recovery and VM. User disks are labelled with \"(No specific role)\" by default.",
    "rationale_statement": "In order to protect user data from loss or tampering volumes, carrying data should be encrypted.",
    "impact_statement": "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data.",
    "audit_procedure": "Terminal Method:\nRun the following command to list the APFS Volumes:\n% /usr/bin/sudo /usr/sbin/diskutil ap list\n\nEnsure all user data disks are encrypted.\nexample:\n% /usr/bin/sudo /usr/sbin/diskutil ap list\n\nAPFS Volume Disk (Role):   disk1s1 (No specific role)\nName:                      Macintosh HD (Case-insensitive)\nMount Point:               /\nCapacity Consumed:         188514598912 B (188.5 GB)\nFileVault:                 Yes (Unlocked)\n\nAPFS Containers (2 found)\n|\n+-- Container disk1 XXXX\n|   ====================================================\n|   APFS Container Reference:     disk1\n|   Size (Capacity Ceiling):      249152200704 B (249.2 GB)\n|   Minimum Size:                 249152200704 B (249.2 GB)\n|   Capacity In Use By Volumes:   195635597312 B (195.6 GB) (78.5% used)\n|   Capacity Not Allocated:       53516603392 B (53.5 GB) (21.5% free)\n|   |\n|   +-< Physical Store disk0s4 XXXXXY\n|   |   -----------------------------------------------------------\n|   |   APFS Physical Store Disk:   disk0s4\n|   |   Size:                       249152200704 B (249.2 GB)\n|   |\n|   +-> Volume disk1s1 XXXXXZ\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s1 (No specific role)\n|   |   Name:                      HighSierra (Case-insensitive)\n|   |   Mount Point:               /\n|   |   Capacity Consumed:         188514598912 B (188.5 GB)\n|   |   FileVault:                 Yes (Unlocked)\n|   |\n|   +-> Volume disk1s2 XXXXXZZ\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s2 (Preboot)\n|   |   Name:                      Preboot (Case-insensitive)\n|   |   Mount Point:               Not Mounted\n|   |   Capacity Consumed:         23961600 B (24.0 MB)\n|   |   FileVault:                 No\n|   |\n|   +-> Volume disk1s3 XXXXXYY\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s3 (Recovery)\n|   |   Name:                      Recovery (Case-insensitive)\n|   |   Mount Point:               Not Mounted\n|   |   Capacity Consumed:         518127616 B (518.1 MB)\n|   |   FileVault:                 No\n|   |\n|   +-> Volume disk1s4 XXXXXYYY\n|       ---------------------------------------------------\n|       APFS Volume Disk (Role):   disk1s4 (VM)\n|       Name:                      VM (Case-insensitive)\n|       Mount Point:               /private/var/vm\n|       Capacity Consumed:         6442704896 B (6.4 GB)\n|       FileVault:                 No\n|\n+-- Container disk4 XXXXXYYYY\n    ====================================================\n    APFS Container Reference:     disk4\n    Size (Capacity Ceiling):      119824367616 B (119.8 GB)\n    Minimum Size:                 143192064 B (143.2 MB)\n    Capacity In Use By Volumes:   126492672 B (126.5 MB) (0.1% used)\n    Capacity Not Allocated:       119697874944 B (119.7 GB) (99.9% free)\n    |\n    +-< Physical Store disk3s2 XXXXXYYYYYY\n    |   -----------------------------------------------------------\n    |   APFS Physical Store Disk:   disk3s2\n    |   Size:                       119824371200 B (119.8 GB)\n    |\n    +-> Volume disk4s1 C4D99580-1FDA-43BF-BB62-B21BF7EE568C\n        ---------------------------------------------------\n        APFS Volume Disk (Role):   disk4s1 (No specific role)\n        Name:                      Passport (Case-insensitive)\n        Mount Point:               /Volumes/Passport\n        Capacity Consumed:         839680 B (839.7 KB)\n        FileVault:                 Yes (Unlocked)",
    "remediation_procedure": "Use Disk Utility to erase a user disk and format as APFS (Encrypted).\nNote: APFS Encrypted disks will be described as \"FileVault\" whether they are the boot volume or not in the ap list.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.9 Encrypt Data on Removable Media (Version 8)",
    "section_id": 2841874,
    "recommendation_id": 4596691,
    "view_level": "5.3.2",
    "title": "Ensure all user storage CoreStorage volumes are encrypted",
    "pivot_control_id": 385,
    "pivot_recommendation_id": 4596691,
    "url": "https://workbench.cisecurity.org/sections/2841874/recommendations/4596691",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple introduced CoreStorage with 10.7. It is used as the default for formatting on macOS volumes prior to 10.13.\nAll HFS and CoreStorage Volumes should be encrypted.",
    "rationale_statement": "In order to protect user data from loss or tampering, volumes carrying data should be encrypted.",
    "impact_statement": "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data.",
    "audit_procedure": "Terminal Method:\nRun the following command to list the CoreStorage Volumes:\n% /usr/bin/sudo /usr/sbin/diskutil cs list\n\nEnsure all \"Logical Volume Family\" disks are encrypted\nexample:\n% /usr/bin/sudo /usr/sbin/diskutil cs list\n\nCoreStorage logical volume groups (2 found)\n|\n+-- Logical Volume Group XXXXX\n|   =========================================================\n|   Name:         Macintosh HD\n|   Status:       Online\n|   Size:         250160967680 B (250.2 GB)\n|   Free Space:   6516736 B (6.5 MB)\n|   |\n|   +-< Physical Volume XXXXXY\n|   |   ----------------------------------------------------\n|   |   Index:    0\n|   |   Disk:     disk0s2\n|   |   Status:   Online\n|   |   Size:     250160967680 B (250.2 GB)\n|   |\n|   +-> Logical Volume Family XXXXXYY\n|       ----------------------------------------------------------\n|       Encryption Type:         AES-XTS\n|       Encryption Status:       Unlocked\n|       Conversion Status:       Complete\n|       High Level Queries:      Fully Secure\n|       |                        Passphrase Required\n|       |                        Accepts New Users\n|       |                        Has Visible Users\n|       |                        Has Volume Key\n|       |\n|       +-> Logical Volume XXXXXYYY\n|           ---------------------------------------------------\n|           Disk:                  disk2\n|           Status:                Online\n|           Size (Total):          249802129408 B (249.8 GB)\n|           Revertible:            Yes (unlock and decryption required)\n|           LV Name:               Macintosh HD\n|           Volume Name:           Macintosh HD\n|           Content Hint:          Apple_HFS\n|\n+-- Logical Volume Group XXXXXYYYY\n    =========================================================\n    Name:         Passport\n    Status:       Online\n    Size:         119690149888 B (119.7 GB)\n    Free Space:   1486848 B (1.5 MB)\n    |\n    +-< Physical Volume XXXXXYYY\n    |   ----------------------------------------------------\n    |   Index:    0\n    |   Disk:     disk3s2\n    |   Status:   Online\n    |   Size:     119690149888 B (119.7 GB)\n    |\n    +-> Logical Volume Family XXXXXYYYYY\n        ----------------------------------------------------------\n        Encryption Type:         AES-XTS\n        Encryption Status:       Unlocked\n        Conversion Status:       Complete\n        High Level Queries:      Fully Secure\n        |                        Passphrase Required\n        |                        Accepts New Users\n        |                        Has Visible Users\n        |                        Has Volume Key\n        |\n        +-> Logical Volume XXXXXYYYYYY\n            ---------------------------------------------------\n            Disk:                  disk4\n            Status:                Online\n            Size (Total):          119336337408 B (119.3 GB)\n            Revertible:            No\n            LV Name:               Passport\n            Volume Name:           Passport\n            Content Hint:          Apple_HFS",
    "remediation_procedure": "Use Disk Utility to erase a disk and format as macOS Extended (Journaled, Encrypted).",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.11 Encrypt Sensitive Data at Rest (Version 8)",
    "section_id": 2841863,
    "recommendation_id": 4596661,
    "view_level": "2.3.4.2",
    "title": "Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled",
    "pivot_control_id": 386,
    "pivot_recommendation_id": 4596661,
    "url": "https://workbench.cisecurity.org/sections/2841863/recommendations/4596661",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "One of the most important security tools for data protection on macOS is FileVault. With encryption in place, it makes it difficult for an outside party to access your data if they get physical possession of the computer. One very large weakness in data protection with FileVault is the level of protection on backup volumes. If the internal drive is encrypted but the external backup volume that goes home in the same laptop bag is not, it is self-defeating. Apple tries to make this mistake easily avoided by providing a checkbox to enable encryption when setting up a Time Machine backup. Using this option does require some password management, particularly if a large drive is used with multiple computers. A unique, complex password to unlock the drive can be stored in keychains on multiple systems for ease of use.\nWhile some portable drives may contain non-sensitive data and encryption may make interoperability with other systems difficult, backup volumes should be protected just like boot volumes.\nNote: This recommendation needs to be set on devices where Time Machine is enabled. If Time Machine is disabled, the audit is passed by default.",
    "rationale_statement": "Backup volumes need to be encrypted.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the drive used for Time Machine is encrypted:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nVerify that every drive setup for Time Machine states Encrypted\n\nTerminal Method:\nRun the following command to verify if the Time Machine disk encryption is enabled:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/com.apple.TimeMachine.plist | grep -c NotEncrypted\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable encryption on the Time Machine drive:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nSelect the unencrypted drive\nSelect - to forget that drive as a destination\nSelect + to add a different drive as the destination\nSelect Set Up Disk...\nSet Encrypt Backup to enabled\nEnter a password in the New Password and the same password in the Re-enter Password fields\nA password hint is required, but it is recommended that you do not use any identifying information for the password\n\nNote: In macOS 12.0 Monterey and previous, the existing Time Machine drive could have encryption added without formatting it. This is no longer possible in macOS 13.0 Ventura. If you wish to keep previous backups from the unencrypted volume, you will need to manually move those files over to the new encrypted drive.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.11 Encrypt Sensitive Data at Rest (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596687,
    "view_level": "2.6.6",
    "title": "Ensure FileVault Is Enabled",
    "pivot_control_id": 386,
    "pivot_recommendation_id": 4596687,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596687",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "FileVault secures a system's data by automatically encrypting its boot volume and requiring a password or recovery key to access it.\nFileVault should be used with a saved escrow key to ensure that the owner can decrypt their data if the password is lost.\nFileVault may also be enabled using command line using the fdesetup command. To use this functionality, consult the Der Flounder blog for more details (see link below under References).",
    "rationale_statement": "Encrypting sensitive data minimizes the likelihood of unauthorized users gaining access to it.",
    "impact_statement": "Mounting a FileVault encrypted volume from an alternate boot source will require a valid password to decrypt it. Apple has also implemented an escalating policy for failed passwords. To find out more about that, read here: Passcodes and passwords",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that FileVault is enabled:\n\nOpen System Settings\nSelect Privacy & Privacy\nVerify that FileVault states FileVault is turned on for the disk \"<disk name>\"\nSelect General\nSelect Device Management\nVerify that an installed profile has FileVault Can't Disable set to True\n\nTerminal Method:\nRun the following command to verify that FileVault is enabled and cannot be disabled:\n% /usr/bin/sudo /usr/bin/fdesetup status\n\nFileVault is On\n\n$ /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n.objectForKey('dontAllowFDEDisable').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable FileVault:\n\nOpen System Settings\nSelect Security & Privacy\nSelect Turn On...\n\nNote: This will allow you to create a recovery key for FileVault. Keep the key saved securely in case it is needed at a later date.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is dontAllowFDEDisable\nThe key must be set to <true/>\n\nNote: This profile is required to pass the audit.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.11 Encrypt Sensitive Data at Rest (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596665,
    "view_level": "5.1.4",
    "title": "Ensure Signed System Volume (SSV) Is Enabled",
    "pivot_control_id": 386,
    "pivot_recommendation_id": 4596665,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596665",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Signed System Volume is a security feature introduced in macOS 11.0 Big Sur.\nDuring system installation, a SHA-256 cryptographic hash is calculated for all immutable system files and stored in a Merkle tree which itself is hashed as the Seal. Both are stored in the metadata of the snapshot created of the System volume.\nThe seal is verified by the boot loader at startup. macOS will not boot if system files have been tampered with. If validation fails, the user will be instructed to reinstall the operating system.\nDuring read operations for files located in the Signed System Volume, a hash is calculated and compared to the value stored in the Merkle tree.",
    "rationale_statement": "Running without Signed System Volume on a production system could run the risk of Apple software that integrates directly with macOS being modified.",
    "impact_statement": "Apple Software that integrates with the operating system could become compromised.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that Signed System Volume is enabled:\n% /usr/bin/sudo /usr/bin/csrutil authenticated-root status\n\nAuthenticated Root status: enabled",
    "remediation_procedure": "If SSV has been disabled, assume that the operating system has been compromised. Back up any files, and do a clean install to a known good Operating System.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.11 Encrypt Sensitive Data at Rest (Version 8)",
    "section_id": 2841874,
    "recommendation_id": 4596689,
    "view_level": "5.3.1",
    "title": "Ensure all user storage APFS volumes are encrypted",
    "pivot_control_id": 386,
    "pivot_recommendation_id": 4596689,
    "url": "https://workbench.cisecurity.org/sections/2841874/recommendations/4596689",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple developed a new file system which was first made available in 10.12 and then became the default in 10.13. The file system is optimized for Flash and Solid-State storage and encryption.\nhttps://en.wikipedia.org/wiki/Apple_File_System\nmacOS computers generally have several volumes created as part of APFS formatting, including Preboot, Recovery and Virtual Memory (VM), as well as traditional user disks.\nAll APFS volumes that do not have specific roles and do not require encryption should be encrypted. \"Role\" disks include Preboot, Recovery and VM. User disks are labelled with \"(No specific role)\" by default.",
    "rationale_statement": "In order to protect user data from loss or tampering volumes, carrying data should be encrypted.",
    "impact_statement": "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data.",
    "audit_procedure": "Terminal Method:\nRun the following command to list the APFS Volumes:\n% /usr/bin/sudo /usr/sbin/diskutil ap list\n\nEnsure all user data disks are encrypted.\nexample:\n% /usr/bin/sudo /usr/sbin/diskutil ap list\n\nAPFS Volume Disk (Role):   disk1s1 (No specific role)\nName:                      Macintosh HD (Case-insensitive)\nMount Point:               /\nCapacity Consumed:         188514598912 B (188.5 GB)\nFileVault:                 Yes (Unlocked)\n\nAPFS Containers (2 found)\n|\n+-- Container disk1 XXXX\n|   ====================================================\n|   APFS Container Reference:     disk1\n|   Size (Capacity Ceiling):      249152200704 B (249.2 GB)\n|   Minimum Size:                 249152200704 B (249.2 GB)\n|   Capacity In Use By Volumes:   195635597312 B (195.6 GB) (78.5% used)\n|   Capacity Not Allocated:       53516603392 B (53.5 GB) (21.5% free)\n|   |\n|   +-< Physical Store disk0s4 XXXXXY\n|   |   -----------------------------------------------------------\n|   |   APFS Physical Store Disk:   disk0s4\n|   |   Size:                       249152200704 B (249.2 GB)\n|   |\n|   +-> Volume disk1s1 XXXXXZ\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s1 (No specific role)\n|   |   Name:                      HighSierra (Case-insensitive)\n|   |   Mount Point:               /\n|   |   Capacity Consumed:         188514598912 B (188.5 GB)\n|   |   FileVault:                 Yes (Unlocked)\n|   |\n|   +-> Volume disk1s2 XXXXXZZ\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s2 (Preboot)\n|   |   Name:                      Preboot (Case-insensitive)\n|   |   Mount Point:               Not Mounted\n|   |   Capacity Consumed:         23961600 B (24.0 MB)\n|   |   FileVault:                 No\n|   |\n|   +-> Volume disk1s3 XXXXXYY\n|   |   ---------------------------------------------------\n|   |   APFS Volume Disk (Role):   disk1s3 (Recovery)\n|   |   Name:                      Recovery (Case-insensitive)\n|   |   Mount Point:               Not Mounted\n|   |   Capacity Consumed:         518127616 B (518.1 MB)\n|   |   FileVault:                 No\n|   |\n|   +-> Volume disk1s4 XXXXXYYY\n|       ---------------------------------------------------\n|       APFS Volume Disk (Role):   disk1s4 (VM)\n|       Name:                      VM (Case-insensitive)\n|       Mount Point:               /private/var/vm\n|       Capacity Consumed:         6442704896 B (6.4 GB)\n|       FileVault:                 No\n|\n+-- Container disk4 XXXXXYYYY\n    ====================================================\n    APFS Container Reference:     disk4\n    Size (Capacity Ceiling):      119824367616 B (119.8 GB)\n    Minimum Size:                 143192064 B (143.2 MB)\n    Capacity In Use By Volumes:   126492672 B (126.5 MB) (0.1% used)\n    Capacity Not Allocated:       119697874944 B (119.7 GB) (99.9% free)\n    |\n    +-< Physical Store disk3s2 XXXXXYYYYYY\n    |   -----------------------------------------------------------\n    |   APFS Physical Store Disk:   disk3s2\n    |   Size:                       119824371200 B (119.8 GB)\n    |\n    +-> Volume disk4s1 C4D99580-1FDA-43BF-BB62-B21BF7EE568C\n        ---------------------------------------------------\n        APFS Volume Disk (Role):   disk4s1 (No specific role)\n        Name:                      Passport (Case-insensitive)\n        Mount Point:               /Volumes/Passport\n        Capacity Consumed:         839680 B (839.7 KB)\n        FileVault:                 Yes (Unlocked)",
    "remediation_procedure": "Use Disk Utility to erase a user disk and format as APFS (Encrypted).\nNote: APFS Encrypted disks will be described as \"FileVault\" whether they are the boot volume or not in the ap list.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.11 Encrypt Sensitive Data at Rest (Version 8)",
    "section_id": 2841874,
    "recommendation_id": 4596691,
    "view_level": "5.3.2",
    "title": "Ensure all user storage CoreStorage volumes are encrypted",
    "pivot_control_id": 386,
    "pivot_recommendation_id": 4596691,
    "url": "https://workbench.cisecurity.org/sections/2841874/recommendations/4596691",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple introduced CoreStorage with 10.7. It is used as the default for formatting on macOS volumes prior to 10.13.\nAll HFS and CoreStorage Volumes should be encrypted.",
    "rationale_statement": "In order to protect user data from loss or tampering, volumes carrying data should be encrypted.",
    "impact_statement": "While FileVault protects the boot volume, data may be copied to other attached storage and reduce the protection afforded by FileVault. Ensure all user volumes are encrypted to protect data.",
    "audit_procedure": "Terminal Method:\nRun the following command to list the CoreStorage Volumes:\n% /usr/bin/sudo /usr/sbin/diskutil cs list\n\nEnsure all \"Logical Volume Family\" disks are encrypted\nexample:\n% /usr/bin/sudo /usr/sbin/diskutil cs list\n\nCoreStorage logical volume groups (2 found)\n|\n+-- Logical Volume Group XXXXX\n|   =========================================================\n|   Name:         Macintosh HD\n|   Status:       Online\n|   Size:         250160967680 B (250.2 GB)\n|   Free Space:   6516736 B (6.5 MB)\n|   |\n|   +-< Physical Volume XXXXXY\n|   |   ----------------------------------------------------\n|   |   Index:    0\n|   |   Disk:     disk0s2\n|   |   Status:   Online\n|   |   Size:     250160967680 B (250.2 GB)\n|   |\n|   +-> Logical Volume Family XXXXXYY\n|       ----------------------------------------------------------\n|       Encryption Type:         AES-XTS\n|       Encryption Status:       Unlocked\n|       Conversion Status:       Complete\n|       High Level Queries:      Fully Secure\n|       |                        Passphrase Required\n|       |                        Accepts New Users\n|       |                        Has Visible Users\n|       |                        Has Volume Key\n|       |\n|       +-> Logical Volume XXXXXYYY\n|           ---------------------------------------------------\n|           Disk:                  disk2\n|           Status:                Online\n|           Size (Total):          249802129408 B (249.8 GB)\n|           Revertible:            Yes (unlock and decryption required)\n|           LV Name:               Macintosh HD\n|           Volume Name:           Macintosh HD\n|           Content Hint:          Apple_HFS\n|\n+-- Logical Volume Group XXXXXYYYY\n    =========================================================\n    Name:         Passport\n    Status:       Online\n    Size:         119690149888 B (119.7 GB)\n    Free Space:   1486848 B (1.5 MB)\n    |\n    +-< Physical Volume XXXXXYYY\n    |   ----------------------------------------------------\n    |   Index:    0\n    |   Disk:     disk3s2\n    |   Status:   Online\n    |   Size:     119690149888 B (119.7 GB)\n    |\n    +-> Logical Volume Family XXXXXYYYYY\n        ----------------------------------------------------------\n        Encryption Type:         AES-XTS\n        Encryption Status:       Unlocked\n        Conversion Status:       Complete\n        High Level Queries:      Fully Secure\n        |                        Passphrase Required\n        |                        Accepts New Users\n        |                        Has Visible Users\n        |                        Has Volume Key\n        |\n        +-> Logical Volume XXXXXYYYYYY\n            ---------------------------------------------------\n            Disk:                  disk4\n            Status:                Online\n            Size (Total):          119336337408 B (119.3 GB)\n            Revertible:            No\n            LV Name:               Passport\n            Volume Name:           Passport\n            Content Hint:          Apple_HFS",
    "remediation_procedure": "Use Disk Utility to erase a disk and format as macOS Extended (Journaled, Encrypted).",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 3.14 Log Sensitive Data Access (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596642,
    "view_level": "3.2",
    "title": "Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements",
    "pivot_control_id": 389,
    "pivot_recommendation_id": 4596642,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596642",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements.",
    "rationale_statement": "Maintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised.\nDepending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nRun the following command to verify the Security Auditing Flags that are enabled:\n% /usr/bin/sudo /usr/bin/grep -e \"^flags:\" /etc/security/audit_control\n\nThe output should include the following flags:\n\n-fm - audit failed file attribute modification events\nad - audit successful/failed administrative events\n-ex - audit failed program execution\naa - audit all authorization and authentication events\n-fr - audit all failed read actions where enforcement stops a read of a file\nlo - audit successful/failed login/logout events\n-fw - audit all failed write actions where enforcement stopped a file write\n\nThe -all flag will capture all failed events across all audit classes and can be used to supersede the individual flags for failed events.\nNote: Excluding potentially noisy audit events may be ideal, depending on your use-case.\nNote: Historical audit flags are listed below as preliminary guidance.",
    "remediation_procedure": "Terminal Method:\nPerform the following to set the required Security Auditing Flags:\nEdit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596638,
    "view_level": "1.8",
    "title": "Ensure the System is Managed by a Mobile Device Management (MDM) Software",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596638,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596638",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides the capability to manage macOS, iOS, and iPadOS using Mobile Device Management (MDM). Profiles are used to configure devices to enforce security controls as well as to configure the devices for authorized access. Many security controls available on Apple devices are only available through the use of profile settings using MDM. This capability is also misused by attackers who have added rogue profiles to the list of unwanted software and fake software updates to induce users to approve the installation of malicious content. Organizations should have Mobile Device Management software in place to harden organizationally managed devices and take advantage of additional Apple controls, as well as to make the devices more resistant to attackers enticing users to install unwanted content from rogue MDMs.",
    "rationale_statement": "Mobile Device Management is the preferred Apple method to manage Apple devices. Some capability in this technology is a requirement for the enforcement of some controls. Users with managed devices should be trained and familiar with authorized content provided through the organization's MDM.",
    "impact_statement": "An MDM is yet another additional tool that requires technically adept personnel to manage correctly. In theory, proper use of an MDM can make services provisioning simpler with configuration profiles to reach authorized services.",
    "audit_procedure": "Terminal Method:\nRun the following to verify the system is enrolled in a Mobile Device Management software:\n% sudo /usr/bin/profiles status -type enrollment | /usr/bin/awk -F: '/MDM enrollment/ {print $2}' | /usr/bin/grep -c \"Yes (User Approved)\"\n\n1",
    "remediation_procedure": "Enroll the system in a Mobile Device Management software.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596616,
    "view_level": "2.1.1.1",
    "title": "Audit iCloud Keychain",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596616,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596616",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts.\nIf passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage.",
    "rationale_statement": "Ensure that the iCloud keychain is used consistently with organizational requirements.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify a profile is installed for the iCloud keychain sync service:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Keychain Sync set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Keychain sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudKeychainSync').js\nEOS\n\nIf the output is false, iCloud Keychain Sync is disabled. If the output is true, iCloud Keychain sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudKeychainSync\nThe key should be set <true/>, to allow iCloud keychain syncing, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596617,
    "view_level": "2.1.1.2",
    "title": "Audit iCloud Drive",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596617,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596617",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.\nOne of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information.",
    "rationale_statement": "Organizations should review third party storage solutions pertaining to existing data confidentiality and integrity requirements.",
    "impact_statement": "Users will not be able to use continuity on macOS to resume the use of newly composed but unsaved files.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if a profile is installed to configure iCloud Drive:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Drive set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Drive sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDocumentSync').js\nEOS             \n\nIf the output is false, iCloud Drive Sync is disabled. If the output is true, iCloud Drive sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDocumentSync\nThe key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596618,
    "view_level": "2.1.1.3",
    "title": "Ensure iCloud Drive Document and Desktop Sync Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596618,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596618",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.\nThe storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.\nEnterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.\nThe automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.\nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/",
    "rationale_statement": "Automated Document synchronization should be planned and controlled to approved storage.",
    "impact_statement": "Users will not be able to use iCloud for the automatic sync of the Desktop and Documents folders.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Desktop and Documents in iCloud Drive is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Desktop & Documents Sync set to True\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables iCloud Document and Desktop Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDesktopAndDocuments').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDesktopAndDocuments\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596620,
    "view_level": "2.1.1.5",
    "title": "Audit Freeform Sync to iCloud",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596620,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596620",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 13.1 (Ventura) Apple has made a collaboration tool (Freeform) available on macOS, iOS and iPadOS. This application allows for extensive whiteboard creation and sharing using iCloud. Organizations may want to audit the use of Freeform iCloud sharing of internally created boards.",
    "rationale_statement": "Internally created whiteboards may not be authorized to share to external contacts through iCloud.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if iCloud Freeform sync is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Freeform Sync set to your organization's requirement\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables Freeform Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudFreeform').js\nEOS\n\nThe output should match your organization's requirement",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudFreeform\nThe key must be set to <<true/false>/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596621,
    "view_level": "2.1.1.6",
    "title": "Audit Find My Mac",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596621,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596621",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Find My is Apple's consumer solution for device tracking of your devices. This allows a user to track the location of devices associated with their Apple Account. This is a great solution for consumer or user device management and tracking, but it is not meant to be an enterprise management solution to device tracking and information management on enterprise managed devices. There are multiple enterprise MDM solutions for managing organizational devices.",
    "rationale_statement": "An enterprise solution should be used for tracking and information management of all devices, including Apple devices. Apple's Find My solution only handles Apple devices. If no enterprise solution is available, Find My provides capabilities for a user to manage and track Apple devices. It is not designed as an enterprise solution, and should not be used as one. It is better to allow the user to track devices that use their Apple Account than to have no tracking at all.",
    "impact_statement": "There should be no impact on the user while using the device. If someone other than the user has access to tracking information, this can impact the user and needs to be researched. Users should audit to ensure that only authorized people have access to your location. Using multiple solutions for device tracking can add unnecessary complexity.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nVerify that Find My Mac is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nSet Find My Mac is set to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841853,
    "recommendation_id": 4596622,
    "view_level": "2.1.2",
    "title": "Audit App Store Password Settings",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596622,
    "url": "https://workbench.cisecurity.org/sections/2841853/recommendations/4596622",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a 15-minute grace period, and whether or not to require a password for free purchases. The response to this setting is stored in a cookie and processed by iCloud.\nThere is plenty of risk information on the wisdom of this setting for parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users who are not authorized to download software may have physical access to an unlocked computer where someone who is authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store access in the Password Settings controls.",
    "rationale_statement": "",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that App Store Passwords are set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Media & Purchases\nVerify that Free Downloads is set to your organization's requirements\nVerify that Purchases and In-App Purchases is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set App Store Passwords to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Media & Purchases\nSet Free Downloads to your organization's requirements\nSet Purchases and In-App Purchases to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596623,
    "view_level": "2.2.1",
    "title": "Ensure Firewall Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596623,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596623",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A firewall is a piece of software that blocks unwanted incoming connections to a system. The socketfilter Firewall is what is used when the Firewall is turned on in the Security & Privacy Preference Pane. Logging is required to appropriately monitor what access is allowed and denied. The logs can be viewed in the macOS Unified Logs.\nIn previous versions of macOS (prior to macOS 15 Sequoia) there was an additional step to turn on firewall logging after enabling the firewall. As of macOS 15 logging is turned on automatically without user interaction. The logging recommendation has been removed in the macOS 15 benchmark and will not be included going forward. If your organization is looking for more detailed information about network security, you will need a third-party solution.",
    "rationale_statement": "A firewall minimizes the threat of unauthorized users gaining access to your system while connected to a network or the Internet.",
    "impact_statement": "The firewall may block legitimate traffic. Applications that are unsigned will require special handling.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the firewall is enabled:\n\nOpen System Settings\nSelect Network\nVerify that the Firewall is Active\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Firewall set to Enabled\n\nTerminal Method:\nRun the following command to verify that the firewall is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableFirewall').js\nEOS\n\ntrue\n\nAlso, the status of the firewall can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate\n\nThe output will either be Firewall is enabled. (State = 1) or Firewall is enabled. (State = 2) if the firewall is enabled. If the firewall is disabled, the output will be Firewall is disabled. (State = 0)",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to turn the firewall on:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSet Firewall to enabled\n\nTerminal Method:\nRun the following command to enable the firewall:\n% /usr/libexec/ApplicationFirewall/socketfilterfw  --setglobalstate on \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableFirewall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596625,
    "view_level": "2.2.2",
    "title": "Ensure Firewall Stealth Mode Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596625,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596625",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "While in Stealth mode, the computer will not respond to unsolicited probes, dropping that traffic.",
    "rationale_statement": "Stealth mode on the firewall minimizes the threat of system discovery tools while connected to a network or the Internet.",
    "impact_statement": "Traditional network discovery tools like ping will not succeed. Other network tools that measure activity and approved applications will work as expected.\nThis control aligns with the primary macOS use case of a laptop that is often connected to untrusted networks where host segregation may be non-existent. In that use case, hiding from the other inmates is likely more than desirable. In use cases where use is only on trusted LANs with static IP addresses, stealth mode may not be desirable.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the firewall has stealth mode enabled:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Option\nVerify that Enable stealth mode is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Stealth Mode set to Enabled\n\nTerminal Method:\nRun the following command to verify that stealth mode is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableStealthMode').js\nEOS\n\ntrue\n\nAlso, the status of the stealth mode can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getstealthmode\n\nFirewall stealth mode is on",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable firewall stealth mode:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Options...\nSet Enabled stealth mode to enabled\n\nTerminal Method:\nRun the following command to enable stealth mode:\n% /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on\n\nStealth mode enabled\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableStealthMode\nThe key must be set to <true/>\n\nNote: This key must be set in the same configuration profile with EnableFirewall set to <true/>. If it is set in its own configuration profile, it will fail.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841858,
    "recommendation_id": 4596626,
    "view_level": "2.3.1.1",
    "title": "Ensure AirDrop Is Disabled When Not Actively Transferring Files",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596626,
    "url": "https://workbench.cisecurity.org/sections/2841858/recommendations/4596626",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "AirDrop is Apple's built-in, on-demand, ad hoc file exchange system that is compatible with both macOS and iOS. It uses Bluetooth LE for discovery that limits connectivity to Mac or iOS users that are in close proximity. Depending on the setting, it allows everyone or only Contacts to share files when they are near each other.\nIn many ways, this technology is far superior to the alternatives. The file transfer is done over a TLS encrypted session, does not require any open ports that are required for file sharing, does not leave file copies on email servers or within cloud storage, and allows for the service to be mitigated so that only people already trusted and added to contacts can interact with you.\nWhile there are positives to AirDrop, there are privacy concerns that could expose personal information. For that reason, AirDrop should be disabled, and should only be enabled when needed and disabled afterwards. The recommendation against enabling the sharing is not based on any known lack of security in the protocol, but for specific user operational concerns.\n\nIf AirDrop is enabled, the Mac is advertising that a Mac is addressable on the local network and open to either unwanted AirDrop upload requests or for a negotiation on whether the remote user is in the user's contacts list. Neither process is desirable.\nIn most known use cases, AirDrop use qualifies as ad hoc networking when it involves Apple device users deciding to exchange a file using the service. AirDrop can thus be enabled on the fly for that exchange.\n\nFor organizations concerned about any use of AirDrop because of Digital Loss Prevention (DLP) monitoring on other protocols, JAMF has an article on reviewing AirDrop logs.\nDetecting outbound AirDrop transfers and logging them",
    "rationale_statement": "AirDrop can allow malicious files to be downloaded from unknown sources. Contacts Only limits may expose personal information to devices in the same area.",
    "impact_statement": "Disabling AirDrop can limit the ability to move files quickly over the network without using file shares.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that AirDrop is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow AirDrop set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disabled AirDrop:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowAirDrop').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAirDrop\nThe key must be set to <false/>\n\nNote: AirDrop can only be enabled or disabled through configuration profiles. If your organization wants to use AirDrop, it would need to be set through Terminal or the GUI. Please see the Additional Information for assistance with those options, but those system will not technically be in compliance.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841858,
    "recommendation_id": 4596628,
    "view_level": "2.3.1.2",
    "title": "Ensure AirPlay Receiver Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596628,
    "url": "https://workbench.cisecurity.org/sections/2841858/recommendations/4596628",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In macOS Monterey (12.0), Apple has added the capability to share content from another Apple device to the screen of a host Mac. While there are many valuable uses of this capability, such sharing on a standard Mac user workstation should be enabled ad hoc as required rather than allowing a continuous sharing service. The feature can be restricted by Apple Account or network and is configured to use by accepting the connection on the Mac. Part of the concern is frequent connection requests may function as a denial-of-service and access control limits may provide too much information to an attacker.\nhttps://macmost.com/how-to-use-a-mac-as-an-airplay-receiver.html\nhttps://support.apple.com/guide/mac-pro-rack/use-airplay-apdf1417128d/mac",
    "rationale_statement": "This capability appears very useful for kiosk and shared work spaces. The ability to allow by network could be especially useful on segregated guest networks where visitors could share their screens on computers with bigger monitors, including computers connected to projectors.",
    "impact_statement": "Turning off AirPlay sharing by default will not allow users to share without turning the service on. The service should be enabled as needed rather than left on.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that AirPlay Receiver is Disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow AirPlay Incoming Requests set to False\n\nTerminal Method:\nFor each user, run the following command to verify that AirPlay Receiver is disabled:\nRun the following command to verify that a profile is installed that disables the ability to use the computer as an AirPlay Receiver:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowAirPlayIncomingRequests').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAirPlayIncomingRequests\nThe key must be set to <false/>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": "AirPlay Receiver is enabled by default."
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596635,
    "view_level": "2.3.3.1",
    "title": "Ensure DVD or CD Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596635,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596635",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "DVD or CD Sharing allows users to remotely access the system's optical drive. While Apple does not ship Macs with built-in optical drives any longer, external optical drives are still recognized when they are connected. In testing, the sharing of an external optical drive persists when a drive is reconnected.",
    "rationale_statement": "Disabling DVD or CD Sharing minimizes the risk of an attacker using the optical drive as a vector for attack and exposure of sensitive data.",
    "impact_statement": "Many Apple devices are now sold without optical drives, however drive sharing may be needed for legacy optical media. The media should be explicitly re-shared as needed rather than using a persistent share. Optical drives should not be used for long-term storage. To store necessary data from an optical drive it should be copied to another form of external storage. Optionally, an image can be made of the optical drive so that it is stored in its original form on another form of external storage.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that DVD or CD Sharing is disabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that DVD or CD sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that DVD or CD Sharing is disabled\n% /usr/bin/sudo /bin/launchctl list | grep -c com.apple.ODSAgent\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable DVD or CD Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet DVD or CD sharing to disabled\n\nTerminal Method:\nRun the following command to disable DVD or CD Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.ODSAgent \n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.ODSAgent\n\nNote: If using the Terminal method, the GUI will still show the service checked until after a reboot.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596637,
    "view_level": "2.3.3.2",
    "title": "Ensure Screen Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596637,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596637",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Screen Sharing allows a computer to connect to another computer on a network and display the computer\u2019s screen. While sharing the computer\u2019s screen, the user can control what happens on that computer, such as opening documents or applications, opening, moving, or closing windows, and even shutting down the computer.\nWhile mature administration and management does not use graphical connections for standard maintenance, most help desks have capabilities to assist users in performing their work when they have technical issues and need support. Help desks use graphical remote tools to understand what the user sees and assist them so they can get back to work. For MacOS, some of these remote capabilities can use Apple's OS tools. Control is therefore not meant to prohibit the use of a just-in-time graphical view from authorized personnel with authentication controls. Sharing should not be enabled except in narrow windows when help desk support is required.\nScreen Sharing on macOS can allow the use of the insecure VNC protocol. VNC is a clear text protocol that should not be used on macOS.",
    "rationale_statement": "Disabling Screen Sharing mitigates the risk of remote connections being made without the user of the console knowing that they are sharing the computer.",
    "impact_statement": "Help desks may require the periodic use of a graphical connection mechanism to assist users. Any support that relies on native MacOS components will not work unless a scripted solution to enable and disable sharing is used, as necessary.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure Screen Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Screen Sharing is not enabled\n\nTerminal Method:\nRun the following commands to verify that Screen Sharing is not set:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -E \"com.apple.screensharing$\"\n\nThere will be no output if the service is disabled. If there is an output, then that is a finding.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Screen Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Screen Sharing to disabled\n\nTerminal Method:\nRun the following command to turn off Screen Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.screensharing\n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.screensharing",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596639,
    "view_level": "2.3.3.3",
    "title": "Ensure File Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596639,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596639",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "File sharing from a user workstation creates additional risks, such as:\n\nOpen ports are created that can be probed and attacked\nPasswords are attached to user accounts for access that may be exposed and endanger other parts of the organizational environment, including directory accounts\nIncreased complexity makes security more difficult and may expose additional attack vectors\n\nApple's File Sharing uses the Server Message Block (SMB) protocol to share to other computers that can mount SMB shares. This includes other macOS computers.\nApple warns that SMB sharing stored passwords is less secure, and anyone with system access can gain access to the password for that account. When sharing with SMB, each user accessing the Mac must have SMB enabled. Storing passwords, especially copies of valid directory passwords, decreases security for the directory account and should not be used.",
    "rationale_statement": "By disabling File Sharing, the remote attack surface and risk of unauthorized access to files stored on the system is reduced.",
    "impact_statement": "File Sharing can be used to share documents with other users, but hardened servers should be used rather than user endpoints. Turning on File Sharing increases the visibility and attack surface of a system unnecessarily.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that File Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that File Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that File Sharing is not enabled:\n% /usr/bin/sudo /bin/launchctl list | grep -c \"com.apple.smbd\"\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable File Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet File Sharing to disabled\n\nTerminal Method:\nRun the following command to disable File Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd\n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.smbd",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596641,
    "view_level": "2.3.3.4",
    "title": "Ensure Printer Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596641,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596641",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "By enabling Printer Sharing, the computer is set up as a print server to accept print jobs from other computers. Dedicated print servers or direct IP printing should be used instead.",
    "rationale_statement": "Disabling Printer Sharing mitigates the risk of attackers attempting to exploit the print server to gain access to the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Printer Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Printer Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that Printer Sharing is not enabled:\n% /usr/bin/sudo /usr/sbin/cupsctl | grep -c \"_share_printers=0\"                               \n\n1",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Printer Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Printer Sharing to disabled\n\nTerminal Method:\nRun the following command to disable Printer Sharing:\n% /usr/bin/sudo /usr/sbin/cupsctl --no-share-printers",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596643,
    "view_level": "2.3.3.5",
    "title": "Ensure Remote Login Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596643,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596643",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Remote Login allows an interactive terminal connection to a computer.",
    "rationale_statement": "Disabling Remote Login mitigates the risk of an unauthorized person gaining access to the system via Secure Shell (SSH). While SSH is an industry standard to connect to posix servers, the scope of the benchmark is for Apple macOS clients, not servers.\nmacOS does have an IP-based firewall available (pf, ipfw has been deprecated) that is not enabled or configured. There are more details and links in the Network sub-section. macOS no longer has TCP Wrappers support built in and does not have strong Brute-Force password guessing mitigations, or frequent patching of openssh by Apple. Since most macOS computers are mobile workstations, managing IP-based firewall rules on mobile devices can be very resource intensive. All of these factors can be parts of running a hardened SSH server.",
    "impact_statement": "The SSH server built into macOS should not be enabled on a standard user computer, particularly one that changes locations and IP addresses. A standard user that runs local applications, including email, web browser, and productivity tools, should not use the same device as a server. There are Enterprise management toolsets that do utilize SSH. If they are in use, the computer should be locked down to only respond to known, trusted IP addresses and appropriate administrator service accounts.\nFor macOS computers that are being used for specialized functions, there are several options to harden the SSH server to protect against unauthorized access, including brute force attacks. There are some basic criteria that need to be considered:\n\nDo not open an SSH server to the internet without controls in place to mitigate SSH brute force attacks. This is particularly important for systems bound to Directory environments. It is great to have controls in place to protect the system, but if they trigger after the user is already locked out of their account, they are not optimal. If authorization happens after authentication, directory accounts for users that don't even use the system can be locked out.\nDo not use SSH key pairs when there is no insight to the security on the client system that will authenticate into the server with a private key. If an attacker gets access to the remote system and can find the key, they may not need a password or a key logger to access the SSH server.\nDetailed instructions on hardening an SSH server, if needed, are available in the CIS Linux Benchmarks, but it is beyond the scope of this benchmark.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Remote Login is disabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Login is not enabled\n\nTerminal Method:\nRun the following command to verify that Remote Login is disabled:\n% /usr/bin/sudo /usr/sbin/systemsetup -getremotelogin\n\nRemote Login: Off",
    "remediation_procedure": "Perform the following to disable Remote Login:\nGraphical Method:\nPerform the following steps to disable Remote Login:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Login to disabled\n\nTerminal Method:\nRun the following command to disable Remote Login:\n% /usr/bin/sudo /usr/sbin/systemsetup -setremotelogin off\n\nDo you really want to turn remote login off? If you do, you will lose this connection and can only turn it back on locally at the server (yes/no)?\n\nEntering yes will disable remote login.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596645,
    "view_level": "2.3.3.6",
    "title": "Ensure Remote Management Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596645,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596645",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Remote Management is the client portion of Apple Remote Desktop (ARD). Remote Management can be used by remote administrators to view the current screen, install software, report on, and generally manage client Macs.\nThe screen sharing options in Remote Management are identical to those in the Screen Sharing section. In fact, only one of the two can be configured. If Remote Management is used, refer to the Screen Sharing section above on issues regarding screen sharing.\nRemote Management should only be enabled when a Directory is in place to manage the accounts with access. Computers will be available on port 5900 on a macOS System and could accept connections from untrusted hosts depending on the configuration, which is a major concern for mobile systems. As with other sharing options, an open port even for authorized management functions can be attacked, and both unauthorized access and Denial-of-Service vulnerabilities could be exploited. If remote management is required, the pf firewall should restrict access only to known, trusted management consoles. Remote management should not be used across the Internet without the use of a VPN tunnel.",
    "rationale_statement": "Remote Management should only be enabled on trusted networks with strong user controls present in a Directory system. Mobile devices without strict controls are vulnerable to exploitation and monitoring.",
    "impact_statement": "Many organizations utilize ARD for client management.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Remote Management is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Management is not enabled\n\nTerminal Method:\nRun the following command to verify that Remote Management is not enabled:\n% /usr/bin/sudo /bin/ps -ef | /usr/bin/grep -e ARDAgent\n\n0  9233  8630   0  3:32pm ttys001    0:00.00 grep -e ARDAgent",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Remote Management:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Management to disabled\n\nTerminal Method:\nRun the following command to disable Remote Management:\n% /usr/bin/sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -stop\n\nStarting...\nRemoved preference to start ARD after reboot.\nDone.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596647,
    "view_level": "2.3.3.7",
    "title": "Ensure Remote Apple Events Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596647,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596647",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple Events is a technology that allows one program to communicate with other programs. Remote Apple Events allows a program on one computer to communicate with a program on a different computer.",
    "rationale_statement": "Disabling Remote Apple Events mitigates the risk of an unauthorized program gaining access to the system.",
    "impact_statement": "With remote Apple events turned on, an AppleScript program running on another Mac can interact with the local computer.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Remote Apple Events is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Apple Events is not enabled\n\nTerminal Method:\nRun the following commands to verify that Remote Apple Events is not set\n% /usr/bin/sudo /usr/sbin/systemsetup -getremoteappleevents \n\nRemote Apple Events: Off",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Remote Apple Events:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Apple Events to disabled\n\nTerminal Method:\nRun the following commands to set Remote Apple Events to Off:\n% /usr/bin/sudo /usr/sbin/systemsetup -setremoteappleevents off \n\nsetremoteappleevents: Off",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596649,
    "view_level": "2.3.3.8",
    "title": "Ensure Internet Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596649,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596649",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Internet Sharing uses the open source natd process to share an internet connection with other computers and devices on a local network. This allows the Mac to function as a router and share the connection to other, possibly unauthorized, devices.",
    "rationale_statement": "Disabling Internet Sharing reduces the remote attack surface of the system.",
    "impact_statement": "Internet Sharing allows the computer to function as a router and other computers to use it for access. This can expose both the computer itself and the networks it is accessing to unacceptable access from unapproved devices.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure Internet Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Internet Sharing is not enabled\n\nTerminal Method:\nRun the following commands to verify that Internet Sharing is not set:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/SystemConfiguration/com.apple.nat >nul 2>&1 | grep -c \"Enabled = 1;\"\n\n0\n\nor\nRun the following command to verify that a profile is installed that automatically disables internet sharing:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n.objectForKey('forceInternetSharingOff').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Internet Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Internet Sharing to disabled\n\nTerminal Method:\nRun the following command to turn off Internet Sharing:\n% usr/bin/sudo /usr/bin/defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0\n\nNote: Using the Terminal Method will not be reflected in the GUI, but will disable the underlying service.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is forceInternetSharingOff\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596653,
    "view_level": "2.3.3.10",
    "title": "Ensure Media Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596653,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596653",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all Apple devices that are signed in with the same Apple Account. This allows users to share downloaded Movies, Music, or TV shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs.\nWith this capability, guest users can also use media downloaded on the computer.\nThe recommended best practice is not to use the computer as a server, but to utilize Apple's cloud storage in order to download and use content stored there if content stored with Apple is used on multiple devices.\nhttps://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-mchlp13371337/mac\nNote: In macOS 15.0 Sequoia, Apple added a supported profile key for Media Sharing that replaces the keys in the benchmarks in previous versions.",
    "rationale_statement": "Disabling Media Sharing reduces the remote attack surface of the system.",
    "impact_statement": "Media Sharing allows for pre-downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized devices on the same network media access.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that a profile is installed that disables Media Sharing:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n  .objectForKey('allowMediaSharing'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n  .objectForKey('allowMediaSharingModification'))\n  if ( pref1 == 0 && pref2 == 0 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.\nNote: If a user has media sharing enabled when installing the profile it will not disable media sharing, but will instead lock it as enabled. To verify that no users have media sharing enabled before installing the profile, run the following command for each user on the system:\n% /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.amp.mediasharingd home-sharing-enabled",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowMediaSharing\nThe key must be set to <false/>\nThe key to also include is allowMediaSharingModification\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596655,
    "view_level": "2.3.3.11",
    "title": "Ensure Bluetooth Sharing Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596655,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596655",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Bluetooth Sharing allows files to be exchanged with Bluetooth-enabled devices.",
    "rationale_statement": "Disabling Bluetooth Sharing minimizes the risk of an attacker using Bluetooth to remotely attack the system.",
    "impact_statement": "There is a general expectation that Bluetooth peripherals will be used by most users in Apple's ecosystem. Disabling sharing should have no impact on the use of Bluetooth peripherals.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Bluetooth Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Bluetooth Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that Bluetooth Sharing is disabled:\n% /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost read com.apple.Bluetooth PrefKeyServicesEnabled\n\n0\n\n% /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost read com.apple.Bluetooth PrefKeyServicesEnabled\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Bluetooth Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Bluetooth Sharing to disabled\n\nTerminal Method:\nRun the following command to disable Bluetooth Sharing is disabled:\n% /usr/bin/sudo -u <username> /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false\n\n% /usr/bin/sudo -u firstuser /usr/bin/defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841867,
    "recommendation_id": 4596669,
    "view_level": "2.5.1",
    "title": "Audit Siri Settings",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596669,
    "url": "https://workbench.cisecurity.org/sections/2841867/recommendations/4596669",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "With macOS 10.12 Sierra, Apple has introduced Siri from iOS to macOS. While there are data spillage concerns with the use of data-gathering personal assistant software, the risk here does not seem greater in sending queries to Apple through Siri than in sending search terms in a browser to Google or Microsoft. While it is possible that Siri will be used for local actions rather than Internet searches, Siri could, in theory, tell Apple about confidential Programs and Projects that should not be revealed. This appears to be a usage edge case.\nIn cases where sensitive or protected data is processed and Siri could expose that information through assisting a user in navigating their machine, it should be disabled. Siri does need to phone home to Apple, so it should not be available from air-gapped networks as part of its requirements.\nMost of the use case data published has shown that Siri is a tremendous time saver on iOS where multiple screens and menus need to be navigated through. Information like sports scores, weather, movie times, and simple to-do items on existing calendars can be easily found with Siri. None of the standard use cases should be more risky than already approved activity.\nFor information on Apple's privacy policy for Siri, click here.",
    "rationale_statement": "Where \"normal\" user activity is already limited, Siri use should be controlled as well.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify Siri settings:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow Assistant is to your organization's parameters\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets Siri to your organization's setting:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                       \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ .objectForKey('allowAssistant').js         \nEOS\n\nor\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                       \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.ironwood.support')\\ .objectForKey('Ironwood Allowed').js         \nEOS\n\nThe output will be true if Siri is enabled with either installed profile or false if is disabled with either installed profile.\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. We have included the individual user information in the additional information.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAssistant\nSet the key to <true/> or <false/> based on your organization's requirements\n\nOR\n\nThe PayloadType string is com.apple.ironwood.support\nThe key to include is Ironwood Allowed\nSet the key to <true/> or <false/> based on your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841867,
    "recommendation_id": 4596671,
    "view_level": "2.5.2",
    "title": "Ensure Listen for (Siri) Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596671,
    "url": "https://workbench.cisecurity.org/sections/2841867/recommendations/4596671",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS includes the Siri digital assistant and if enabled it is always listening in case it is needed. In Sonoma a user may choose either \"Hey Siri\" or either \"Siri\" and \"Hey Siri.\" In either case, Siri is using the microphone at all times to listen for instructions and then can record questions once activated. In an organizational environment where people are talking and listening on video/voice calls, there are too many opportunities for unauthorized information disclosure to have a live microphone at all times. If Siri will be used it may be on, with \"Listen for\" Off and a keyboard shortcut selected.",
    "rationale_statement": "In most environments there is too much unbounded risk of data spillage with a microphone always on, listening for instruction, and listening for questions if attention is obtained, relying on cloud compute to answer them. There are many examples of data leakage for technology in this space, and future vulnerabilities and bugs are certainly possible.",
    "impact_statement": "Siri will not be available for hands-free usage, or not available at all if turned off completely.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that \"Hey Siri\" is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has VoiceTriggerUserEnabled set to 0\n\nTerminal Method:\nRun the following command to verify that \"Hey Siri\" is disabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Siri')\\\n.objectForKey('VoiceTriggerUserEnabled').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Siri\nThe key to include is set to VoiceTriggerUserEnabled\nThe key must be set to <false/>\n\nNote: After testing, this profile will disable Hey Siri only for the first input but not additional inputs. This issues seems to only occur using the Apple Studio Display (and possibly the Pro Display XDR, but no testing has occurred with that device) and it is not the primary input source. We are going to continue testing, but this seems to be an edge case.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596673,
    "view_level": "2.6.1.1",
    "title": "Ensure Location Services Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596673,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596673",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointments where location information is supplied.\nLocation Services simplify some processes with mobile computers, such as asset management and time or log management.\nThere are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge.",
    "rationale_statement": "Location Services are helpful in most use cases and can simplify log and time management where computers change time zones.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Location Services is enabled:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nVerify Location Services is enabled\n\nTerminal Method:\nRun the following command to verify that Location Services are enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.locationd\n\n1\n\n% /usr/bin/sudo -u _locationd /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationd').objectForKey('LocationServicesEnabled').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSet Location Services to enabled\n\nTerminal Method:\nRun the following command to enable Location Services:\n% /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist\n\nIf the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running:\n% /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool true \n\n% /usr/bin/sudo /usr/bin/killall locationd\n\nNote: In some use cases, organizations may not want Location Services running. To disable Location Services, run the command: /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596676,
    "view_level": "2.6.1.2",
    "title": "Ensure 'Show Location Icon in Control Center when System Services Request Your Location' Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596676,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596676",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "This setting provides the user an understanding of the current status of Location Services and which applications are using it.",
    "rationale_statement": "Apple has fully integrated location services into macOS. When user applications access location an arrow is displayed next to the Control Center in the menu bar to give users an indication when their location is being accessed. By default system services like time zones, weather, travel times, geolocation, \"Find my Mac,\" and advertising services do not indicate the location is accessed.\nEnabling the \u201cShow location icon in the menu bar when System Services request your location\u201d setting will show an arrow in the control center when a system service accesses the location. Although an indication that location was accessed, Control Center will only say that it was accessed by \"System Services\" and not the individual service. Looking in System Settings > Location Services > System Services > Details\u2026 will expose exactly which system services have accessed Location Services in the last 24 hours. Third-party tools will be shown individually when they access location services.",
    "impact_statement": "Users may be provided visibility to a setting they cannot control if organizations control Location Services globally by policy.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the settings for location services icon to be in the menu bar:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSelect Details...\nVerify Show location icon in menu bar when System Services request your location is set to True\n\nTerminal Method:\nRun the following commands to verify that the location services icon is in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationmenu')\\     \n.objectForKey('ShowSystemServices').js               \nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set whether the location services icon is in the menu bar:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSelect Details...\nSet Show location icon in menu bar when System Services request your location to enabled\n\nTerminal Method:\nRun the following commands to set the option of the location services icon being in the menu bar:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.locationmenu.plist ShowSystemServices -bool true",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596678,
    "view_level": "2.6.1.3",
    "title": "Audit Location Services Access",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596678,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596678",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. While Location Services may be very useful, it may not be desirable to allow all applications that can use Location Services to use your location for Internet queries in order to provide tailored content based on your current location.\nEnsure applications that can use Location Services are authorized and provide that information where the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to supply information on the menu bar when Location Services are used.\nSafari can deny access from websites or prompt for access.\nApplications that support Location Services can be individually controlled in the Privacy tab in Security & Privacy under System Preferences.\nAccess should be evaluated to ensure that privacy controls are as expected.",
    "rationale_statement": "Privacy controls should be monitored for appropriate settings.",
    "impact_statement": "Many macOS features rely on Location Services for tailored information. Users expect their time zone and weather to be relevant to where they are without manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility locations are not public, location information should be tightly controlled.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what applications are enabled for Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nVerify that the applications allowed to access Location Services are set to your organization's requirements\n\nPerform the following steps to verify what websites are enabled to ask for access to Location Services:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Location\nVerify that When visiting other websites is set to your organization's requirements\n\nTerminal Method:\nRun the following command to evaluate the applications that are enabled to use Location Services:\n% /usr/bin/sudo /usr/bin/defaults read /var/db/locationd/clients.plist\n\nEnsure that all applications listed have been authorized to access location information.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable unnecessary applications from accessing Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSet any applications listed to your organization's requirements\n\nPerform the following steps to set websites to ask for permission to access Location Services:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Location\nSet When visiting other websites to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841871,
    "recommendation_id": 4596679,
    "view_level": "2.6.2.1",
    "title": "Audit Full Disk Access for Applications",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596679,
    "url": "https://workbench.cisecurity.org/sections/2841871/recommendations/4596679",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 10.13, Apple enforces GUI access to the entire File System through System Preferences. Only Applications from known developers with mission requirements for Full Disk Access, such as security monitoring tools, should have Full Disk Access. Applications that have Full Disk Access can access restricted files and bypass macOS security controls. Any applications with that access should be organizationally authorized.",
    "rationale_statement": "Any applications with Full Disk Access can bypass MacOS security controls and must be reviewed as organizationally accepted risk.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what applications have full disk access:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Full Disk Access\nVerify that the applications are set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that what applications have full disk access enabled:\n% /usr/bin/sudo /usr/bin/sqlite3 /Library/Application\\ Support/com.apple.TCC/TCC.db 'select client from access where auth_value and service = \"kTCCServiceSystemPolicyAllFiles\"'\n\nThe output will be what applications have full disk access enabled.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set full disk access for applications that meet your organization's requirements:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Full Disk Access\nSet any listed applications to your organization's requirements\n(Optional) Select the + to add applications to the list, or - to remove them",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4730709,
    "view_level": "2.6.3.1",
    "title": "Ensure Share Mac Analytics Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4730709,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4730709",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share Mac Analytics (Share with App Developers dependent on Mac Analytic sharing) includes diagnostics, usage, and location data. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Mac analytics are not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Auto Submit set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing Mac analytics to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SubmitDiagInfo')\\\n.objectForKey('AutoSubmit').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SubmitDiagInfo\nThe key to include is AutoSubmit\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4731246,
    "view_level": "2.6.3.2",
    "title": "Ensure Improve Siri & Dictation Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4731246,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4731246",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Improve Siri & Dictation allows Apple to store and review audio of your Siri and dictation interactions from the device. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Siri and dictation is not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Siri Data Sharing Opt-In Status set to 2\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing Siri and dictations to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('Siri Data Sharing Opt-In Status').js\nEOS\n\n2",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is Siri Data Sharing Opt-In Status\nThe key must be set to <integer>2<integer/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4731783,
    "view_level": "2.6.3.3",
    "title": "Ensure Improve Assistive Voice Features Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4731783,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4731783",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Improve Assistive Voice shares audio recordings and transcripts of Vocal Shortcuts and Voice Control interactions anonymously to Apple. These are recordings and transcripts from the user that are being submitted which may include PII or restricted organizational information. Sharing this kind of information with any 3rd party, including the platform vendor, needs to be risk evaluated and only allowed after review and approval based on your organization's policies.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that assistive voice features are not being sent to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AXSAudioDonationSiriImprovementEnabled set to 0\n\nTerminal Method:\nRun the following command to verify a profile installed that are not sending assistive voice features to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Accessibility')\\\n.objectForKey('AXSAudioDonationSiriImprovementEnabled').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Accessibility\nThe key to include is AXSAudioDonationSiriImprovementEnabled \nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4738988,
    "view_level": "2.6.3.4",
    "title": "Ensure 'Share with app developers' Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4738988,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4738988",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share with app developers allows Apple to share crash and usage data with app developers. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that diagnostic data is not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Allow Diagnostic Submission set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing app analytics to Apple and developers:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowDiagnosticSubmission').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowDiagnosticSubmission\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4739244,
    "view_level": "2.6.3.5",
    "title": "Ensure Share iCloud Analytics Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4739244,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4739244",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share iCloud Analytics shares analytics of usage and data from your iCloud account to Apple to help improve its products and services (including Siri and other intelligent features). Turn off all Analytics and Improvements sharing.\nThis setting will not appear if the user is not signed into a personal Apple Account.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that iCloud Analytics is not being sent to Apple:\n\nOpen System Settings\nOpen Privacy & Security\nSelect Analytics & Improvements\nVerify that Share iCloud Analytics is disabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Siri and dictation not being sent to Apple:\n\nOpen System Settings\nOpen Privacy & Security\nSelect Analytics & Improvements\nVerify that Share iCloud Analytics is disabled",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596692,
    "view_level": "2.6.8",
    "title": "Ensure an Administrator Password Is Required to Access System-Wide Preferences",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596692,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596692",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "System Preferences controls system and user settings on a macOS Computer. System Preferences allows the user to tailor their experience on the computer as well as allowing the System Administrator to configure global security settings. Some of the settings should only be altered by the person responsible for the computer.",
    "rationale_statement": "By requiring a password to unlock system-wide System Preferences, the risk of a user changing configurations that affect the entire system is mitigated and requires an admin user to re-authenticate to make changes.",
    "impact_statement": "Users will need to enter their password to unlock some additional preference panes that are unlocked by default like Network, Startup and Printers & Scanners.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that an administrator password is required to access system-wide preferences:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Advanced\nVerify that Require an administrator password to access system-wide settings is enabled\n\nTerminal Method:\nRun the following command to verify that accessing system-wide preferences requires an administrator password:\n% authDBs=(\"system.preferences\" \"system.preferences.energysaver\" \"system.preferences.network\" \"system.preferences.printing\" \"system.preferences.sharing\" \"system.preferences.softwareupdate\" \"system.preferences.startupdisk\" \"system.preferences.timemachine\")\n  result=\"1\"\n  for section in ${authDBs[@]}; do\n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | /usr/bin/xmllint -xpath 'name(//*[contains(text(), \"shared\")]/following-sibling::*[1])' -) != \"false\" ]]; then\n      result=\"0\"\n    fi\n    if [[ $(security -q authorizationdb read \"$section\" | /usr/bin/xmllint -xpath '//*[contains(text(), \"group\")]/following-sibling::*[1]/text()' - ) != \"admin\" ]]; then\n      result=\"0\"\n    fi\n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | /usr/bin/xmllint -xpath 'name(//*[contains(text(), \"authenticate-user\")]/following-sibling::*[1])' -) != \"true\" ]]; then\n      result=\"0\"\n    fi\n    if [[ $(/usr/bin/security -q authorizationdb read \"$section\" | /usr/bin/xmllint -xpath 'name(//*[contains(text(), \"session-owner\")]/following-sibling::*[1])' -) != \"false\" ]]; then\n      result=\"0\"\n    fi\n  done\n  echo $result\n\nNote: Every audit and remediation includes sudo before all commands. This is an exception because authdb is a variable and using sudo causes an error in the output.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to verify that an administrator password is required to access system-wide preferences:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Advanced\nSet Require an administrator password to access system-wide settings to enabled\n\nTerminal Method:\nThe authorizationdb settings cannot be written to directly, so the plist must be exported out to a temporary file. Changes can be made to the temporary plist, then imported back into the authorizationdb settings.\nRun the following commands to enable that an administrator password is required to access system-wide preferences:\n% authDBs=(\"system.preferences\" \"system.preferences.energysaver\" \"system.preferences.network\" \"system.preferences.printing\" \"system.preferences.sharing\" \"system.preferences.softwareupdate\" \"system.preferences.startupdisk\" \"system.preferences.timemachine\")\n\n  for section in ${authDBs[@]}; do\n    /usr/bin/security -q authorizationdb read \"$section\" > \"/tmp/$section.plist\"\n\n    class_key_value=$(usr/libexec/PlistBuddy -c \"Print :class\" \"/tmp/$section.plist\" 2>&1)\n    if [[ \"$class_key_value\" == *\"Does Not Exist\"* ]]; then\n      /usr/libexec/PlistBuddy -c \"Add :class string user\" \"/tmp/$section.plist\"\n    else\n      /usr/libexec/PlistBuddy -c \"Set :class user\" \"/tmp/$section.plist\"\n    fi\n\n    key_value=$(/usr/libexec/PlistBuddy -c \"Print :shared\" \"/tmp/$section.plist\" 2>&1)  \t\n    if [[ \"$key_value\" == *\"Does Not Exist\"* ]]; then\n      /usr/libexec/PlistBuddy -c \"Add :shared bool false\" \"/tmp/$section.plist\"\n    else\n      /usr/libexec/PlistBuddy -c \"Set :shared false\" \"/tmp/$section.plist\"\n    fi\n\n    auth_user_key=$(/usr/libexec/PlistBuddy -c \"Print :authenticate-user\" \"/tmp/$section.plist\" 2>&1)  \t\n    if [[ \"$auth_user_key\" == *\"Does Not Exist\"* ]]; then\n      /usr/libexec/PlistBuddy -c \"Add :authenticate-user bool true\" \"/tmp/$section.plist\"\n    else\n      /usr/libexec/PlistBuddy -c \"Set :authenticate-user true\" \"/tmp/$section.plist\"\n    fi\n\n    session_owner_key=$(/usr/libexec/PlistBuddy -c \"Print :session-owner\" \"/tmp/$section.plist\" 2>&1)  \t\n    if [[ \"$session_owner_key\" == *\"Does Not Exist\"* ]]; then\n      /usr/libexec/PlistBuddy -c \"Add :session-owner bool false\" \"/tmp/$section.plist\"\n    else\n      /usr/libexec/PlistBuddy -c \"Set :session-owner false\" \"/tmp/$section.plist\"\n    fi\n\n    group_key=$(usr/libexec/PlistBuddy -c \"Print :group\" \"/tmp/$section.plist\" 2>&1)\n    if [[ \"$group_key\" == *\"Does Not Exist\"* ]]; then\n      /usr/libexec/PlistBuddy -c \"Add :group string admin\" \"/tmp/$section.plist\"\n    else\n      /usr/libexec/PlistBuddy -c \"Set :group admin\" \"/tmp/$section.plist\"\n    fi\n\n    /usr/bin/security -q authorizationdb write \"$section\" < \"/tmp/$section.plist\"\n  done\n\nNote: Every audit and remediation includes sudo before all commands. This is an exception because authdb is a variable and using sudo causes an error in the output.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841877,
    "recommendation_id": 4596697,
    "view_level": "2.8.1",
    "title": "Audit Universal Control Settings",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596697,
    "url": "https://workbench.cisecurity.org/sections/2841877/recommendations/4596697",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Universal Control is an Apple feature that allows Mac users to control multiple other Macs and iPads with the same keyboard, mouse, and trackpad using the same Apple Account. The technology relies on already available iCloud services, particularly Handoff.\nUniversal Control simplifies the use of iCloud connectivity of multiple computers using the same Apple Account. This may simplify data transfer from organizationally-managed and personal devices. The use of the same iCloud account and Handoff is the underlying concern that should be evaluated. The use of the same keyboard or mouse across multiple devices does not by itself decrease organizational security.\nUniversal Clipboard, a feature of Universal Control, allows any device using the same Apple Account to access the clipboard of any other devices using the same Apple Account.",
    "rationale_statement": "The use of devices together when some are organizational and some are not may complicate device management standards.\nUniversal control settings may also enable a user to share their clipboard across multiple devices authenticated to the same Apple Account, so disabling that should be discussed by the organization.",
    "impact_statement": "The user should not be impacted if Universal Control is set either way.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify a profile is installed that configures Universal Control:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has with com.apple.universalcontrol in Settings and has Disable set to your organization's parameters.\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets Universal Control to your organization's parameters:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.universalcontrol')\\\n.objectForKey('Disable').js\nEOS\n\nIf the output is true, Universal Control is disabled. If it is false, then Universal Control is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.universalcontrol\nThe key to include is Disable\nSet the key to <true/> or <false/> based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.\nNote: If your organization is allowing Universal Control, your organization can still disable Universal Clipboard via a profile. To disable Universal Clipboard, create or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.coreservices.useractivityd\nThe key to include is ClipboardSharingEnabled\nSet the key to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841880,
    "recommendation_id": 4596700,
    "view_level": "2.9.1.1",
    "title": "Ensure the OS Is Not Active When Resuming from Standby (Intel)",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596700,
    "url": "https://workbench.cisecurity.org/sections/2841880/recommendations/4596700",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for \"standbydelay\" is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into the system when it resumes.\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\nMacs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs.",
    "rationale_statement": "To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.",
    "impact_statement": "The laptop will take additional time to resume normal operation if only sleeping rather than hibernating.\nSetting hibernatemode to 25 will disable the \"always-on\" feature of the Apple Silicon Macs.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify the hibernation settings and that FileVault keys are destroyed on standby:\n% /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep -e MacBook \n\nIf there is an output, run the following:\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e standby \n\nThe output should include a standbydelaylow value \u2264 900, a standbydelayhigh value \u2264 900, and a highstandbythreshold value \u2265 90.\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep hibernatemode\n\n hibernatemode        25\n\nexample:\n\n% /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep -e MacBook \n\n      Model Name: MacBook Pro\n      Model Identifier: MacBookPro13,1\n\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e standby\n\n standbydelaylow      600\n standby              1\n standbydelayhigh     600\n highstandbythreshold 50\n\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep hibernatemode\n\n hibernatemode        25\n\nNote: To verify if you are running an Intel processor, run /usr/sbin/sysctl -n machdep.cpu.brand_string. The output will include Intel.",
    "remediation_procedure": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n% /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value\u2264900>\n% /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value\u2264900>\n% /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value\u226590>\n% /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n% /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n% /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n% /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n% /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n% /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n% /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841880,
    "recommendation_id": 4596701,
    "view_level": "2.9.1.2",
    "title": "Ensure Sleep and Display Sleep Is Enabled on Apple Silicon Devices",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596701,
    "url": "https://workbench.cisecurity.org/sections/2841880/recommendations/4596701",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "MacBooks should be set so that the sleep is 15 minutes or less and the display should sleep at 10 minutes or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-sleep after 15 minutes and log back into the system when it resumes.",
    "rationale_statement": "Laptops should sleep 15 minutes or less after sleeping.",
    "impact_statement": "The laptop will take additional time to resume normal operation from sleep.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify sleep and hibernation settings:\n% /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep -e MacBook \n\nIf there is an output, run the following:\n% /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | /usr/bin/grep -e MacBook \n\nIf there is an output, run the following:\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"^ sleep\" \n\nThe output should be sleep with a value \u2264 15.\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"displaysleep\"\n\nThe output should be displaysleep with a value \u2264 10 and \u2264 the value of sleep.\nexample:\n\n% /usr/bin/sudo /usr/sbin/system_profiler SPHardwareDataType | grep -e MacBook \n\n      Model Name: MacBook Pro\n      Model Identifier: MacBookPro18,3\n\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"^ sleep\" \n\n sleep               15 (sleep prevented by sharingd, powerd, bluetoothd, com.apple.PassKit.PaymentAuthor)\n\n% /usr/bin/sudo /usr/bin/pmset -b -g | /usr/bin/grep -e \"displaysleep\"\n\n displaysleep         10\n\nNote: To verify if you are running an Apple Silicon processor, run /usr/sbin/sysctl -n machdep.cpu.brand_string. The output will include Apple.",
    "remediation_procedure": "Terminal Method:\nRun the following command to set the sleep time and hibernate mode:\n% /usr/bin/sudo /usr/bin/pmset -a sleep <value\u226415>\n% /usr/bin/sudo /usr/bin/pmset -a displaysleep <value\u226410 & < value of sleep>\n\nexample:\n% /usr/bin/sudo /usr/bin/pmset -a sleep 15\n% /usr/bin/sudo /usr/bin/pmset -a displaysleep 10",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841879,
    "recommendation_id": 4596705,
    "view_level": "2.9.2",
    "title": "Ensure Power Nap Is Disabled for Intel Macs",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596705,
    "url": "https://workbench.cisecurity.org/sections/2841879/recommendations/4596705",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Power Nap allows the system to stay in low power mode, especially while on battery power, and periodically connect to previously known networks with stored credentials for user applications to phone home and get updates. This capability requires FileVault to remain unlocked and the use of previously joined networks to be risk accepted based on the SSID without user input.\nThis control has been updated to check the status on both battery and AC Power. The presence of an electrical outlet does not completely correlate with logical and physical security of the device or available networks.",
    "rationale_statement": "Disabling this feature mitigates the risk of an attacker remotely waking the system and gaining access.\nThe use of Power Nap adds to the risk of compromised physical and logical security. The user should be able to decrypt FileVault and have the applications download what is required when the computer is actively used.\nThe control to prevent computer sleep has been retired for this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed LANs.",
    "impact_statement": "Power Nap exists for unattended user application updates like email and social media clients. With Power Nap disabled, the computer will not wake and reconnect to known wireless SSIDs intermittently when slept.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that Power Nap is not enabled:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nVerify that Power Nap is disabled\nSelect UPS (if applicable)\nVerify that Power Nap is disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Power Adapter\nVerify that Power Nap is disabled\nSelect Battery\nVerify that Power Nap is disabled\nSelect UPS (if applicable)\nVerify that Power Nap is disabled\n\nNote: To verify if you are running an Intel processor, perform the following steps:\n\nSelect \uf8ff in the Menu Bar\nSelect About This Mac\nVerify that the Chip field included Intel\n\nTerminal Method:\nRun the following command to verify if Power Nap is disabled:\n% /usr/bin/sudo /usr/bin/pmset -g custom | /usr/bin/grep -c \"^\\spowernap\\s*1\"\n\n0\n\nNote: To verify if you are running an Intel processor, run /usr/sbin/sysctl -n machdep.cpu.brand_string. The output will include Intel.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Power Nap:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nSet Power Nap to disabled\nSelect UPS (if applicable)\nSet Power Nap to disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Power Adapter (for laptops only)\nSet Power Nap to disabled\nSelect Battery\nSet Power Nap to disabled\nSelect UPS (if applicable)\nSet Power Nap to disabled\n\nTerminal Method:\nRun the following command to disable Power Nap:\n% /usr/bin/sudo /usr/bin/pmset -a powernap 0",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841881,
    "recommendation_id": 4596717,
    "view_level": "2.10.3",
    "title": "Ensure a Custom Message for the Login Screen Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596717,
    "url": "https://workbench.cisecurity.org/sections/2841881/recommendations/4596717",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "An access warning informs the user that the system is reserved for authorized use only, and that the use of the system may be monitored.",
    "rationale_statement": "An access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements.",
    "impact_statement": "If users are not informed of their responsibilities, unapproved activities may occur. Users that are not approved for access may take the lack of a warning banner as implied consent to access.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the a login banner is configured:\n\nOpen System Settings\nSelect Lock Screen\nVerify Show message when locked is enabled\nSelect Set\nVerify that the message displayed is configured to your organization's required text\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Banner Text is configured to your organization's required text\n\nTerminal Method:\nRun the following command to verify that a custom message on the login screen is configured:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n.objectForKey('LoginwindowText').js\nEOS\n\nThe output should be a message that is configured to your organization's required text.\nexample:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n.objectForKey('LoginwindowText').js\nEOS\n\nCenter for Internet Security Test Message",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable a login banner set to your organization's required text:\n\nOpen System Settings\nSelect Lock Screen\nSet Show message when locked to enabled\nSelect Set\nInsert text in the Set a message to appear on the lock screen that matches your organization's required text\nSelect Done\n\nTerminal Method:\nRun the following command to enable a custom login screen message:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText \"<custom message>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText \"Center for Internet Security Test Message\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.loginwindow\nThe key to include is LoginwindowText\nThe key must be set to <string><Your organization's required text></string>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841881,
    "recommendation_id": 4596720,
    "view_level": "2.10.4",
    "title": "Ensure Login Window Displays as Name and Password Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596720,
    "url": "https://workbench.cisecurity.org/sections/2841881/recommendations/4596720",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The login window prompts a user for his/her credentials, verifies their authorization level, and then allows or denies the user access to the system.",
    "rationale_statement": "Prompting the user to enter both their username and password makes it twice as hard for unauthorized users to gain access to the system since they must discover two attributes.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that the login window displays name and password:\n\nOpen System Settings\nSelect Lock Screen\nVerify that Login window shows is set to Name and Password\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Show Full Name set to True\n\nTerminal Method:\nRun the following command to verify the login window displays name and password:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n.objectForKey('SHOWFULLNAME').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to ensure the login window display name and password:\n\nOpen System Settings\nSelect Lock Screen\nSet 'Login window showstoName and Password`\n\nTerminal Method:\nRun the following command to enable the login window to display name and password:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool true\n\nNote: The GUI will not display the updated setting until the current user(s) logs out.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.loginwindow\nThe key to include is SHOWFULLNAME\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841881,
    "recommendation_id": 4596722,
    "view_level": "2.10.5",
    "title": "Ensure Show Password Hints Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596722,
    "url": "https://workbench.cisecurity.org/sections/2841881/recommendations/4596722",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Password hints are user-created text displayed when an incorrect password is used for an account.",
    "rationale_statement": "Password hints make it easier for unauthorized persons to gain access to systems by displaying information provided by the user to assist in remembering the password. This info could include the password itself or other information that might be readily discerned with basic knowledge of the end user.",
    "impact_statement": "The user can set the hint to any value, including the password itself or clues that allow trivial social engineering attacks.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if password hints are shown:\n\nOpen System Settings\nSelect Lock Screen\nVerify that Show password hints is disabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Retires Before Hint Shown set to 0\n\nTerminal Method:\nRun the following command to verify that password hints are not displayed:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n.objectForKey('RetriesUntilHint').js\nEOS\n\n0\n\nNote: The default setting is not auditable through the command line. Please turn off the check and re-enable when the GUI does not reflect the audited results, or run the Terminal command(s).",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable password hints from being shown:\n\nOpen System Settings\nSelect Lock Screen\nSet 'Show password hints` to disabled\n\nTerminal Method:\nRun the following command to disable password hints:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.loginwindow\nThe key to include is RetriesUntilHint\nThe key must be set to <integer>0</integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841883,
    "recommendation_id": 4596724,
    "view_level": "2.11.2",
    "title": "Audit Touch ID",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596724,
    "url": "https://workbench.cisecurity.org/sections/2841883/recommendations/4596724",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple has integrated Touch ID with macOS and allows fingerprint use for many common operations. All use of Touch ID requires the presence of a password and the use of that password after every reboot, or when more than 48 hours has elapsed since the device was last unlocked. Touch ID is not a password replacement. The use of Touch ID can, however, make the use of passwords more secure for authorized users with physical access to a Mac. Normal day-to-day work operations can eliminate the use of console password entry unless a reboot is required other than on Monday morning. The infrequency of password screen unlock can enable a more complicated pass phrase that is seldom used. When Touch ID is used it remediates the risk of shoulder surfing (including video surveillance) to capture console credentials. There have been many reported shoulder surfing password captures on iOS devices. Reports have not been widespread on Macs, but shoulder surfing password capture is simpler than the other methods of breaking in to an encrypted Mac.\nWhen a SmartCard or YubiKey is provisioned by an organization and is available for Console authentication, that is a much more secure option than the use of Touch ID and is preferred.",
    "rationale_statement": "Touch ID allows for an account-enrolled fingerprint to access a key that uses a previously provided password.",
    "impact_statement": "Touch ID is more convenient for use with aggressive screen lock controls.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify Touch ID settings:\n\nOpen System Settings\nSelect Touch ID & Password\nVerify the Touch ID settings match your organization's requirements\n\nTerminal Method:\nFor each user, run the following commands to verify that the TouchID settings are within your organization's parameters:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -r    \n\nUser Touch ID configuration:\n\tTouch ID for unlock: <0,1>\n\tTouch ID for ApplePay: <0,1>\n\tEffective Touch ID for unlock: <0,1>\n\tEffective Touch ID for ApplePay: <0,1>\n\n% /usr/bin/sudo /usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/'\n\n\tTouch ID timeout (in seconds): <value\u2264172800>\n\nNote: The -s notates a system configuration and does not need to be ran for each user.\nNote: The output for unlock and ApplePay is 0 for disabled and 1 for enabled. The timeout value is seconds and can be set to any value.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/bioutil -r    \n\nUser Touch ID configuration:\n\tTouch ID for unlock: 1\n\tTouch ID for ApplePay: 1\n\tEffective Touch ID for unlock: 1\n\tEffective Touch ID for ApplePay: 1\n\n% /usr/bin/sudo usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/'\n\n\tTouch ID timeout (in seconds): 172800\n\nIn the above example, the user has TouchID enabled for both unlocking the system and for ApplePay. The timeout for TouchID is set to the maximum of 48 hours (172800 seconds).",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Touch ID to your organization's settings:\n\nOpen System Settings\nSelect Touch ID & Password\nSet the Touch ID settings to your organization's requirements\n\nTerminal Method:\nFor each user, run the following commands to set TouchID to your organization's parameters:\nUse this command for TouchID to unlock the system. Use 0 to disable unlock or 1 to enable unlock:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u <0,1>\n\nUse this command for TouchID to use ApplePay. Use 0 to disable ApplePay or 1 to enable ApplePay:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a <0,1>\n\nUse this command to set the timeout at the system level:\n% /usr/bin/sudo usr/bin/bioutil -w -s -o <value\u2264172800>\n\nexample:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u 1\n\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a 1\n\n% /usr/bin/sudo usr/bin/bioutil -w -s -o 86400\n\nNote: The -s notates a system configuration and does not need to be ran for each user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841887,
    "recommendation_id": 4596730,
    "view_level": "2.15.1",
    "title": "Audit Notification & Focus Settings",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596730,
    "url": "https://workbench.cisecurity.org/sections/2841887/recommendations/4596730",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Notification capabilities are designed to allow users to receive updates from applications that are not currently in use. These can be background applications or even notices from processes running on a computer that is not currently being actively used. Where the screen of a computer is visible to others other than the logged-in user due to shared working spaces or public spaces, consideration should be given to the exposure of sensitive data in notifications. Applications that use the system-wide application service may be individually managed, and applications that might expose confidential information to unauthorized users should not expose notifications except to the current user, especially on the locked screen when the computer may be unattended.",
    "rationale_statement": "Some work environments will handle sensitive or confidential information with applications that can provide notifications to anyone who can see the computer screen. Organizations must review the likelihood that information may be exposed inappropriately and suppress notifications where risk is not organizationally accepted.",
    "impact_statement": "Computer users are often juggling too much information through too many applications that want their attention and are often designed to get attention and never let it go. Notifications are a mechanism that can be used to cut through the deluge and allow important issues to be resolved in a timely way. Global controls on limiting user notifications, even for certain applications, could impact productivity and the timely remediation of issues.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Notifications are set to your organization's requirements:\n\nOpen System Settings\nSelect Notifications\nVerify that Show previews for each application is set to your organization's requirements\n\nNote: If the exposure of controlled information or data leakage is possible with application notifications, the acceptable notification level should be established through a risk analysis of what unauthorized leaks may occur.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Notifications to your organization's requirements:\n\nOpen System Settings\nSelect Notifications\nSelect any applications that are not in compliance with your organization's requirements\nTurn off or mute notifications that may expose information to unauthorized people that might be able to view screens of organizational computers.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841889,
    "recommendation_id": 4596732,
    "view_level": "2.17.1",
    "title": "Audit Internet Accounts for Authorized Use",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596732,
    "url": "https://workbench.cisecurity.org/sections/2841889/recommendations/4596732",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides a section in System Settings to create and display Internet Accounts. Setting up an Internet Account allows the user to configure access to pre-existing accounts that are Internet Accessible. The Internet Accounts section is not managing network access to firewall rules, it only provides a location to manage credentials and audit external accounts for applications that make use of the \"Internet Accounts.\" Some applications, like Thunderbird and Firefox, do not natively use Internet Accounts and store credentials with the application settings. Disabling the Internet Accounts section does not block access if network reachable, it just makes auditing and use more difficult. Depending on the maturity of network controls, auditing the providers listed in Internet Accounts is part of managing acceptable use.",
    "rationale_statement": "Internet provided services may be restricted in your organization and should be reviewed. Even with an advanced application firewall, the user may not always be using an internal trusted network subject to the organizational firewall. An audit will document which services a user has configured.",
    "impact_statement": "Risky services may be identified that are not authorized and will require a recess to work with the user to no longer connect from a managed Mac.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what accounts have been added to Internet Accounts:\n\nOpen System Settings\nSelect Internet Accounts\nVerify that all accounts are set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set accounts in Internet Accounts to your organization's requirements:\n\nOpen System Settings\nSelect Internet Accounts\nFor each account, select the account\nVerify that each sync option is set to your organization's requirements\n(Optional) Select Delete Account... to remove the account\n(Optional) Select Add Account... to add an account to the system",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841890,
    "recommendation_id": 4596733,
    "view_level": "2.18.1",
    "title": "Ensure On-Device Dictation Is Enabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596733,
    "url": "https://workbench.cisecurity.org/sections/2841890/recommendations/4596733",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In macOS 14.0 Sonoma, Apple released the ability to limit dictation to staying on-device and not sending data to the Siri servers. The use of dictation is likely to include editing documents with confidential information. While Apple does have controls to obfuscate voice data that exists on their servers, it is recommended that Dictation-collected information does not leave the local Mac.",
    "rationale_statement": "Sending data from dictation to the Siri servers could allow data spillage to occur. From a control perspective, it is much safer to ensure information of various levels of confidentiality is retained locally.",
    "impact_statement": "Keeping all dictation on-device does not allow the system to better understand and learn, through machine learning, from the user.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that a profile is installed to allow on-device dictation only:\n% /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('forceOnDeviceOnlyDictation').js\nEOS\n\ntrue",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is forceOnDeviceOnlyDictation\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596654,
    "view_level": "4.1",
    "title": "Ensure Bonjour Advertising Services Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596654,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596654",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerates devices and services within a local subnet. DNS on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled.",
    "rationale_statement": "Bonjour can simplify device discovery from an internal rogue or compromised host. An attacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-configured service or additional information to aid a targeted attack. Implementing this control disables the continuous broadcasting of \"I'm here!\" messages. Typical end-user endpoints should not have to advertise services to other computers. This setting does not stop the computer from sending out service discovery messages when looking for services on an internal subnet, if the computer is looking for a printer or server and using service discovery. To block all Bonjour traffic except to approved devices, the pf or other firewall would be needed.",
    "impact_statement": "Some applications may not operate properly if Bonjour advertising (discoverable) is turned off. In AirDrop, having this discoverability feature disabled makes the system unavailable to receive files in AirDrop on the local network.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Bonjour Advertising is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has NoMulticastAdvertisements set to 1\n\nTerminal Method:\nRun the following command to verify that Bonjour Advertising is not enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.mDNSResponder')\\\n.objectForKey('NoMulticastAdvertisements').js\nEOS\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable Bonjour Advertising services:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mDNSResponder\nThe key to include is NoMulticastAdvertisements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596656,
    "view_level": "4.2",
    "title": "Ensure HTTP Server Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596656,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596656",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS used to have a graphical front-end to the embedded Apache web server in the Operating System. Personal web sharing could be enabled to allow someone on another computer to download files or information from the user's computer. Personal web sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. Apache, however, is still part of the Operating System and can be easily turned on to share files and provide remote connectivity to an end-user computer. Web sharing should only be done through hardened web servers and appropriate cloud services.",
    "rationale_statement": "Web serving should not be done from a user desktop. Dedicated webservers or appropriate cloud storage should be used. Open ports make it easier to exploit the computer.",
    "impact_statement": "The web server is both a point of attack for the system and a means for unauthorized file transfers.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that the HTTP server services are not currently enabled. This check does not reflect any auto-start settings, only whether the web server is currently enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c \"org.apache.httpd\"\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable the HTTP server services:\n% /usr/bin/sudo /usr/sbin/apachectl stop\n\n% /usr/bin/sudo /bin/launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596658,
    "view_level": "4.3",
    "title": "Ensure NFS Server Is Disabled",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596658,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596658",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS can act as an NFS fileserver. NFS sharing could be enabled to allow someone on another computer to mount shares and gain access to information from the user's computer. File sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. NFSD is still part of the Operating System and can be easily turned on to export shares and provide remote connectivity to an end-user computer.\nThe etc/exports file contains the list of NFS shared directories. If the file exists, it is likely that NFS sharing has been enabled in the past or may be available periodically. As an additional check, the audit verifies that there is no /etc/exports file.",
    "rationale_statement": "File serving should not be done from a user desktop. Dedicated servers should be used. Open ports make it easier to exploit the computer.",
    "impact_statement": "The nfs server is both a point of attack for the system and a means for unauthorized file transfers.",
    "audit_procedure": "Terminal Method:\nRun the following commands to verify that the NFS fileserver service is not enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.nfsd\n\n0\n\n% /usr/bin/sudo /bin/cat /etc/exports \n\ncat: /etc/exports: No such file or directory",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable the nfsd fileserver services:\n% /usr/bin/sudo /sbin/nfsd stop\n\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.nfsd\n\nRemove the exported Directory listing.\n% /usr/bin/sudo /bin/rm /etc/exports",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596706,
    "view_level": "5.8",
    "title": "Ensure a Login Window Banner Exists",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596706,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596706",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an acknowledgment by the user that they have been informed of the use policy in the banner if required. The system recognizes either the .txt and the .rtf formats.",
    "rationale_statement": "An access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements.",
    "impact_statement": "Users will have to click on the window with the Login text before logging into the computer.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify the login window text:\n% /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.*\n\nIf the output includes no matches found: /Library/Security/PolicyBanner.* the system is not compliant.\nRun the following to verify permissions of the policy banner file:\n% /usr/bin/stat -f %A /Library/Security/PolicyBanner.* \n\nThe output should have 4 as the 3rd digit.\nIf there is an output, then the policy banner will not display.\nexample:\n% /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.txt\n\nCenter for Internet Security Test Message\n\n% /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.rtf\n\n{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf610\n{\\fonttbl\\f0\\fswiss\\fcharset0 Helvetica;}\n{\\colortbl;\\red255\\green255\\blue255;}\n{\\*\\expandedcolortbl;;}\n\\margl1440\\margr1440\\vieww10800\\viewh8400\\viewkind0\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f0\\fs24 \\cf0 Center for Internet Security Test Message}\n\n% /usr/bin/sudo /bin/cat /Library/Security/PolicyBanner.*\n\n{\\rtf1\\ansi\\ansicpg1252\\cocoartf1561\\cocoasubrtf610\n{\\fonttbl\\f0\\fswiss\\fcharset0 Helvetica;}\n{\\colortbl;\\red255\\green255\\blue255;}\n{\\*\\expandedcolortbl;;}\n\\margl1440\\margr1440\\vieww10800\\viewh8400\\viewkind0\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f0\\fs24 \\cf0 Center for Internet Security Test Message}Center for Internet Security Test Message\n\n% /usr/bin/sudo stat -f %A /Library/Security/PolicyBanner.*   \n\n644",
    "remediation_procedure": "Terminal Method:\nRun the following commands to create or edit the login window text and set the proper permissions:\nEdit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the /Library/Security/ folder, to include the required login window banner text.\nPerform the following to set permissions on the policy banner file:\n% /usr/bin/sudo /bin/chmod o+r /Library/Security/PolicyBanner.txt\n\n% /usr/bin/sudo /bin/chmod o+r /Library/Security/PolicyBanner.rtf \n\nNote: If your organization uses an .rtfd file to set the policy banner, run % /usr/bin/sudo /bin/chmod o+rx /Library/Security/PolicyBanner.rtfd to update the permissions.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.1 Establish and Maintain a Secure Configuration Process (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596709,
    "view_level": "5.9",
    "title": "Ensure the Guest Home Folder Does Not Exist",
    "pivot_control_id": 391,
    "pivot_recommendation_id": 4596709,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596709",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In the previous two controls, the guest account login has been disabled and sharing to guests has been disabled, as well. There is no need for the legacy Guest home folder to remain in the file system. When normal user accounts are removed, you have the option to archive it, leave it in place, or delete. In the case of the guest folder, the folder remains in place without a GUI option to remove it. If at some point in the future a Guest account is needed, it will be re-created. The presence of the Guest home folder can cause automated audits to fail when looking for compliant settings within all User folders, as well. Rather than ignoring the folder's continued existence, it is best removed.",
    "rationale_statement": "The Guest home folders are unneeded after the Guest account is disabled and could be used inappropriately.",
    "impact_statement": "The Guest account should not be necessary after it is disabled, and it will be automatically re-created if the Guest account is re-enabled",
    "audit_procedure": "Terminal Method:\nRun the following command to verify if the Guest user home folder exists:\n% /usr/bin/sudo /bin/ls /Users/ | /usr/bin/grep Guest",
    "remediation_procedure": "Terminal Method:\nRun the following command to remove the Guest user home folder:\n% /usr/bin/sudo /bin/rm -R /Users/Guest",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841875,
    "recommendation_id": 4596694,
    "view_level": "2.7.1",
    "title": "Ensure Screen Saver Corners Are Secure",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4596694,
    "url": "https://workbench.cisecurity.org/sections/2841875/recommendations/4596694",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.",
    "rationale_statement": "Setting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that a Hot Corner is not set to Disable Screen Saver:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has <wvous-tl-corner>, <wvous-bl-corner>, <wvous-tr-corner>, and <wvous-br-corner> is not set to 6\n\nTerminal Method:\nRun the following command to verify that a profile is installed secures screen saver corners:\n% /usr/bin/profiles -P -o stdout | /usr/bin/grep -Ec '\"wvous-bl-corner\" = 6|\"wvous-br-corner\" = 6|\"wvous-tl-corner\" = 6|\"wvous-tr-corner\" = 6'\n\n0\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.dock\nThe key to include is Forced\nThe key must be set to the following:\n\n<array>\n\t<dict>\n\t\t<key>mcx_preference_settings</key>\n\t\t\t<dict>\n\t\t\t\t<key>wvous-bl-corner</key>\n\t\t\t\t<integer><\u22606></integer>\n\t\t\t\t<key>wvous-br-corner</key>\n\t\t\t\t<integer><\u22606></integer>\n\t\t\t\t<key>wvous-tl-corner</key>\n\t\t\t\t<integer><\u22606></integer>\n\t\t\t\t<key>wvous-tr-corner</key>\n\t\t\t\t<integer><\u22606></integer>\n\t\t\t</dict>\n\t\t</dict>\n</array>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841881,
    "recommendation_id": 4596713,
    "view_level": "2.10.1",
    "title": "Ensure an Inactivity Interval of 20 Minutes Or Less for the Screen Saver Is Enabled",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4596713,
    "url": "https://workbench.cisecurity.org/sections/2841881/recommendations/4596713",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A locking screen saver is one of the standard security controls to limit access to a computer and the current user's session when the computer is temporarily unused or unattended. In macOS, the screen saver starts after a value is selected in the drop-down menu. 20 minutes or less is an acceptable value. Any value can be selected through the command line or script, but a number that is not reflected in the GUI can be problematic. 20 minutes is the default for new accounts.",
    "rationale_statement": "Setting an inactivity interval for the screen saver prevents unauthorized persons from viewing a system left unattended for an extensive period of time.",
    "impact_statement": "If the screen saver is not set, users may leave the computer available for an unauthorized person to access information.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that the screen saver is set to activate after less than or equal to 20 minutes of inactivity:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Idle Time set to \u22641200\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables a system-wide screensaver idle time of less than or equal to 20 minutes:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let timeout = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\\\n.objectForKey('idleTime'))\n  if ( timeout <= 1200 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Profile Method:\n\nThe PayloadType string is com.apple.screensaver\nThe key to include is idleTime\nThe key must be set to <integer><\u22641200></integer>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596693,
    "view_level": "5.4",
    "title": "Ensure the Sudo Timeout Period Is Set to Zero",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4596693,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596693",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The sudo command allows the user to run programs as the root user. Working as the root user allows the user an extremely high level of configurability within the system. This control, along with the control to use a separate timestamp for each tty, limits the window where an unauthorized user, process, or attacker could utilize legitimate credentials that are valid for longer than required.",
    "rationale_statement": "The sudo command stays logged in as the root user for five minutes before timing out and re-requesting a password. This five-minute window should be eliminated since it leaves the system extremely vulnerable. This is especially true if an exploit were to gain access to the system, since they would be able to make changes as a root user.",
    "impact_statement": "This control has a serious impact where users often have to use sudo. It is even more of an impact where users have to use sudo multiple times in quick succession as part of normal work processes. Organizations with that common use case will likely find this control too onerous and are better to accept the risk of not requiring a 0 grace period.\nIn some ways the use of sudo -s, which is undesirable, is better than a long grace period since that use does change the hash to show that it is a root shell rather than a normal shell where sudo commands will be implemented without a password.",
    "audit_procedure": "Terminal Method:\nPerform the following to verify the sudo timeout period:\n$ /usr/bin/sudo /usr/bin/sudo -V | /usr/bin/grep -c \"Authentication timestamp timeout: 0.0 minutes\"\n\n1\n\nRun the following commands to verify that the root is the owner of the /etc/sudoers.d folder, and that wheel is the group:\n% /usr/bin/stat /etc/sudoers.d\n\n16777229 19662948 drwxr-xr-x 2 root wheel 0 64 \"Jun  7 23:12:24 2022\" \"May  9 17:30:48 2022\" \"Jun  7 23:12:24 2022\" \"May  9 17:30:48 2022\" 4096 0 0 /etc/sudoers.d",
    "remediation_procedure": "Terminal Method:\nRun the following command to edit the sudo settings:\n% /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name>\n\nexample: % /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration\nNote: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a . so do not add a file extension to the configuration file.\nAdd the line Defaults timestamp_timeout=0 to the configuration file.\nIf /etc/sudoers.d/ is not owned by root or in the wheel group, run the following to change ownership and group:\n% /usr/bin/sudo /usr/sbin/chown -R root:wheel /etc/sudoers.d/",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596695,
    "view_level": "5.5",
    "title": "Ensure a Separate Timestamp Is Enabled for Each User/tty Combo",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4596695,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596695",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Using tty tickets ensures that a user must enter the sudo password in each Terminal session.\nWith sudo versions 1.8 and higher, introduced in 10.12, the default value is to have tty tickets for each interface so that root access is limited to a specific terminal. The default configuration can be overwritten or not configured correctly on earlier versions of macOS.",
    "rationale_statement": "In combination with removing the sudo timeout grace period, a further mitigation should be in place to reduce the possibility of a background process using elevated rights when a user elevates to root in an explicit context or tty.\nAdditional mitigation should be in place to reduce the risk of privilege escalation of background processes.",
    "impact_statement": "This control should have no user impact. Developers or installers may have issues if background processes are spawned with different interfaces than where sudo was executed.",
    "audit_procedure": "Terminal Method:\nRun the following commands to verify that the default sudoers controls are in place with explicit tickets per tty:\n% /usr/bin/sudo /usr/bin/sudo -V | /usr/bin/grep -c \"Type of authentication timestamp record: tty\"\n\n1",
    "remediation_procedure": "Terminal Method:\nRun the following command to edit the sudo settings:\n% /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/<configuration file name>\n\nexample: % /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers.d/10_cissudoconfiguration\nNote: Unlike other Unix and/or Linux distros, macOS will ignore configuration files in the sudoers.d folder that contain a . so do not add a file extension to the configuration file.\nAdd the line Defaults timestamp_type=tty to the configuration file.\nNote: The Defaults timestamp_type=tty line can be added to an existing configuration file or a new one. That will depend on your organization's preference and works either way.",
    "default_value": "If no value is set, the default value of tty_tickets enabled will be used."
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596702,
    "view_level": "5.7",
    "title": "Ensure an Administrator Account Cannot Login to Another User's Active and Locked Session",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4596702,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596702",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS has a privilege that can be granted to any user that will allow that user to unlock active users' sessions.",
    "rationale_statement": "Disabling the administrator's and/or user's ability to log into another user's active and locked session prevents unauthorized persons from viewing potentially sensitive and/or personal information.",
    "impact_statement": "While Fast user switching is a workaround for some lab environments, especially where there is even less of an expectation of privacy, this setting change may impact some maintenance workflows.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that a user cannot log into another user's active and/or locked session:\n% /usr/bin/sudo /usr/bin/security authorizationdb read system.login.screensaver 2>&1 | /usr/bin/grep -c 'authenticate-session-owner' \n\n1",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable a user logging into another user's active and/or locked session:\n% /usr/bin/sudo /usr/bin/security authorizationdb write system.login.screensaver authenticate-session-owner\n\nYES (0)\n\nRunning this command will disable Touch ID to unlock the screen saver. To re-enable Touch ID for users, run the following command:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow screenUnlockMode -int 1",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.3 Configure Automatic Session Locking on Enterprise Assets (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4907350,
    "view_level": "5.11",
    "title": "Ensure Logging Is Enabled for Sudo",
    "pivot_control_id": 393,
    "pivot_recommendation_id": 4907350,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4907350",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In order to properly monitor the use of the sudo command, logs events for any use of sudo should be captured in the unified log.",
    "rationale_statement": "Apple added sudo logging as part of the unified log in macOS 14.0 Sonoma. In macOS 15.0 Sequoia, it is now disabled by default but it should be enabled.",
    "impact_statement": "Sensitive date (ex proprietary data, PII, etc) could be sent to the unified log with sudo logging enabled.",
    "audit_procedure": "Terminal Method:\nRun the following commands to verify that the default sudoers controls are in place for logging of sudo commands:\n% /usr/bin/sudo /usr/bin/sudo -V | /usr/bin/grep -c \"Log when a command is allowed by sudoers\"\n\n1",
    "remediation_procedure": "Terminal Method:\nRun the following command to edit the sudo settings:\n% /usr/bin/sudo /usr/sbin/visudo -f /etc/sudoers\n\nRemove the line, or comment out with # before the line, Defaults !log_allowed",
    "default_value": "If no value is set, the default value of tty_tickets enabled will be used."
  },
  {
    "control_title": "CIS Control: 4.5 Implement and Manage a Firewall on End-User Devices (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596623,
    "view_level": "2.2.1",
    "title": "Ensure Firewall Is Enabled",
    "pivot_control_id": 395,
    "pivot_recommendation_id": 4596623,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596623",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A firewall is a piece of software that blocks unwanted incoming connections to a system. The socketfilter Firewall is what is used when the Firewall is turned on in the Security & Privacy Preference Pane. Logging is required to appropriately monitor what access is allowed and denied. The logs can be viewed in the macOS Unified Logs.\nIn previous versions of macOS (prior to macOS 15 Sequoia) there was an additional step to turn on firewall logging after enabling the firewall. As of macOS 15 logging is turned on automatically without user interaction. The logging recommendation has been removed in the macOS 15 benchmark and will not be included going forward. If your organization is looking for more detailed information about network security, you will need a third-party solution.",
    "rationale_statement": "A firewall minimizes the threat of unauthorized users gaining access to your system while connected to a network or the Internet.",
    "impact_statement": "The firewall may block legitimate traffic. Applications that are unsigned will require special handling.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the firewall is enabled:\n\nOpen System Settings\nSelect Network\nVerify that the Firewall is Active\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Firewall set to Enabled\n\nTerminal Method:\nRun the following command to verify that the firewall is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableFirewall').js\nEOS\n\ntrue\n\nAlso, the status of the firewall can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate\n\nThe output will either be Firewall is enabled. (State = 1) or Firewall is enabled. (State = 2) if the firewall is enabled. If the firewall is disabled, the output will be Firewall is disabled. (State = 0)",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to turn the firewall on:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSet Firewall to enabled\n\nTerminal Method:\nRun the following command to enable the firewall:\n% /usr/libexec/ApplicationFirewall/socketfilterfw  --setglobalstate on \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableFirewall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.5 Implement and Manage a Firewall on End-User Devices (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596625,
    "view_level": "2.2.2",
    "title": "Ensure Firewall Stealth Mode Is Enabled",
    "pivot_control_id": 395,
    "pivot_recommendation_id": 4596625,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596625",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "While in Stealth mode, the computer will not respond to unsolicited probes, dropping that traffic.",
    "rationale_statement": "Stealth mode on the firewall minimizes the threat of system discovery tools while connected to a network or the Internet.",
    "impact_statement": "Traditional network discovery tools like ping will not succeed. Other network tools that measure activity and approved applications will work as expected.\nThis control aligns with the primary macOS use case of a laptop that is often connected to untrusted networks where host segregation may be non-existent. In that use case, hiding from the other inmates is likely more than desirable. In use cases where use is only on trusted LANs with static IP addresses, stealth mode may not be desirable.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the firewall has stealth mode enabled:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Option\nVerify that Enable stealth mode is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Stealth Mode set to Enabled\n\nTerminal Method:\nRun the following command to verify that stealth mode is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableStealthMode').js\nEOS\n\ntrue\n\nAlso, the status of the stealth mode can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getstealthmode\n\nFirewall stealth mode is on",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable firewall stealth mode:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Options...\nSet Enabled stealth mode to enabled\n\nTerminal Method:\nRun the following command to enable stealth mode:\n% /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on\n\nStealth mode enabled\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableStealthMode\nThe key must be set to <true/>\n\nNote: This key must be set in the same configuration profile with EnableFirewall set to <true/>. If it is set in its own configuration profile, it will fail.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.6 Securely Manage Enterprise Assets and Software (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596690,
    "view_level": "2.6.7",
    "title": "Audit Lockdown Mode",
    "pivot_control_id": 396,
    "pivot_recommendation_id": 4596690,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596690",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Apple introduced Lockdown Mode as a security feature in their 2022 OS releases that provides additional security protection Apple describes as extreme. Users and organizations that suspect some users are targets of advanced attacks must consider using this control.\nWhen lockdown mode is enabled, specific trusted websites can be excluded from Lockdown protection if necessary.",
    "rationale_statement": "Lockdown Mode was designed by Apple as an aggressive approach to commonly attacked OS features where additional controls could reduce the attack surface. IT systems and devices, including their users, are subject to continuous exploit attempts. Most of that activity is not from an advanced attacker and can be considered background noise to a patched, hardened device. Advanced attackers are of more concern and a risk review to understand organizational targets and use Lockdown Mode where appropriate is necessary.",
    "impact_statement": "Lockdown Mode must be tested appropriately for real-world impact on users prior to use. As a new feature there is not sufficient technical reporting on user impacts.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the settings for Lockdown Mode:\n\nOpen System Settings\nSelect Privacy & Security\nVerify Lockdown Mode is set to your organization's parameters\n\nTerminal Method:\nRun the following command to verify that Lockdown mode is enabled for the user:\n$ /usr/bin/sudo -u <username> /usr/bin/defaults read .GlobalPreferences.plist LDMGlobalEnabled 2>/dev/null\n\nWhen Lockdown mode has been enabled, it will return 1 and when disabled return 0. If Lockdown has never been enabled, it will return no value.\nNOTE: Lockdown mode is set per local user, therefore you must iterate through each local user to verify the settings.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Lockdown Mode to your organization's requirements:\n\nOpen System Settings\nSelect Privacy & Security\nSet Lockdown Mode to your organization's parameters",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.7 Manage Default Accounts on Enterprise Assets and Software (Version 8)",
    "section_id": 2841881,
    "recommendation_id": 4596715,
    "view_level": "2.10.2",
    "title": "Ensure Require Password After Screen Saver Begins or Display Is Turned Off Is Enabled for 5 Seconds or Immediately",
    "pivot_control_id": 397,
    "pivot_recommendation_id": 4596715,
    "url": "https://workbench.cisecurity.org/sections/2841881/recommendations/4596715",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Sleep and screen saver modes are low power modes that reduce electrical consumption while the system is not in use.",
    "rationale_statement": "Prompting for a password when waking from sleep or screen saver mode mitigates the threat of an unauthorized person gaining access to a system in the user's absence.",
    "impact_statement": "Without a screenlock in place, anyone with physical access to the computer would be logged in and able to use the active user's session.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that a password is required to wake from sleep or screen saver:\n\nOpen System Settings\nSelect Lock Screen\nVerify that Require password after screensaver begins or display is turned off is set with After 0 seconds or After 5 seconds\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Ask For Password set to True\nVerify that the same installed profile has Ask For Password Delay set to <0,5>\n\nTerminal Method:\nRun the following command to verify that a password is required to wake the computer from sleep or from the screen saver after 5 seconds of less:\n% /usr/bin/sudo /usr/sbin/sysadminctl -screenLock status\n\nThe output should include either screenLock delay is immediate or screenLock delay is 5 seconds.\nRun the following command to verify that a profile is installed that requires a password to wake the computer from sleep or from the screen saver:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\\\n  .objectForKey('askForPassword'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')\\\n  .objectForKey('askForPasswordDelay'))\n  if ( pref1 == 1 && pref2 <= 5 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable a password for unlock after a screen saver begins or after sleep:\n\nOpen System Settings\nSelect Lock Screen\nSet Require password after screensaver begins or display is turned off to either After 0 seconds or After 5 seconds\n\nTerminal Method:\nRun the following command to require a password to unlock the computer after the screen saver engages or the computer sleeps:\n% /usr/bin/sudo /usr/sbin/sysadminctl -screenLock immediate -password <administrator password>\n\nor\n% /usr/bin/sudo /usr/sbin/sysadminctl -screenLock 5 seconds -password <administrator password>\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.screensaver\nThe key to include is askForPassword\nThe key must be set to <true/>\nThe key to also include is askForPasswordDelay\nThe key must be set to <integer><0,5></integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.7 Manage Default Accounts on Enterprise Assets and Software (Version 8)",
    "section_id": 2841884,
    "recommendation_id": 4596727,
    "view_level": "2.12.3",
    "title": "Ensure Automatic Login Is Disabled",
    "pivot_control_id": 397,
    "pivot_recommendation_id": 4596727,
    "url": "https://workbench.cisecurity.org/sections/2841884/recommendations/4596727",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The automatic login feature saves a user's system access credentials and bypasses the login screen. Instead, the system automatically loads to the user's desktop screen.",
    "rationale_statement": "Disabling automatic login decreases the likelihood of an unauthorized person gaining access to a system.",
    "impact_statement": "If automatic login is not disabled, an unauthorized user could gain access to the system without supplying any credentials.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that automatic login is not enabled:\n\nOpen System Settings\nSelect Users & Groups\nVerify that Automatic login in as... is set to Off\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disable Autologin set to True\n\nTerminal Method:\nRun the following command to verify that automatic login has not been enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n  .objectForKey('com.apple.login.mcx.DisableAutoLoginClient'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n  .objectForKey('autoLoginUser'))\n  if ( pref1 == 1 || pref2 == null ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set automatic login to off:\n\nOpen System Settings\nSelect Users & Groups\nSet Automatic login in as... to Off\n\nTerminal Method:\nRun the following command to disable automatic login:\n% /usr/bin/sudo /usr/bin/defaults delete /Library/Preferences/com.apple.loginwindow autoLoginUser\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.loginwindow\nThe key to include is com.apple.login.mcx.DisableAutoLoginClient\nThe key must be set to <true/>\n\nNote: If both the profile is enabled and a user is set to autologin, the profile will take precedent. In this case, the graphical or terminal remediation method should also be applied in case the profile is ever removed.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596616,
    "view_level": "2.1.1.1",
    "title": "Audit iCloud Keychain",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596616,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596616",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts.\nIf passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage.",
    "rationale_statement": "Ensure that the iCloud keychain is used consistently with organizational requirements.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify a profile is installed for the iCloud keychain sync service:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Keychain Sync set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Keychain sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudKeychainSync').js\nEOS\n\nIf the output is false, iCloud Keychain Sync is disabled. If the output is true, iCloud Keychain sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudKeychainSync\nThe key should be set <true/>, to allow iCloud keychain syncing, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596617,
    "view_level": "2.1.1.2",
    "title": "Audit iCloud Drive",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596617,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596617",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.\nOne of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information.",
    "rationale_statement": "Organizations should review third party storage solutions pertaining to existing data confidentiality and integrity requirements.",
    "impact_statement": "Users will not be able to use continuity on macOS to resume the use of newly composed but unsaved files.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if a profile is installed to configure iCloud Drive:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Drive set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Drive sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDocumentSync').js\nEOS             \n\nIf the output is false, iCloud Drive Sync is disabled. If the output is true, iCloud Drive sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDocumentSync\nThe key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596618,
    "view_level": "2.1.1.3",
    "title": "Ensure iCloud Drive Document and Desktop Sync Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596618,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596618",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.\nThe storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.\nEnterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.\nThe automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.\nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/",
    "rationale_statement": "Automated Document synchronization should be planned and controlled to approved storage.",
    "impact_statement": "Users will not be able to use iCloud for the automatic sync of the Desktop and Documents folders.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Desktop and Documents in iCloud Drive is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Desktop & Documents Sync set to True\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables iCloud Document and Desktop Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDesktopAndDocuments').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDesktopAndDocuments\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596620,
    "view_level": "2.1.1.5",
    "title": "Audit Freeform Sync to iCloud",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596620,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596620",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 13.1 (Ventura) Apple has made a collaboration tool (Freeform) available on macOS, iOS and iPadOS. This application allows for extensive whiteboard creation and sharing using iCloud. Organizations may want to audit the use of Freeform iCloud sharing of internally created boards.",
    "rationale_statement": "Internally created whiteboards may not be authorized to share to external contacts through iCloud.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if iCloud Freeform sync is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Freeform Sync set to your organization's requirement\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables Freeform Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudFreeform').js\nEOS\n\nThe output should match your organization's requirement",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudFreeform\nThe key must be set to <<true/false>/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596621,
    "view_level": "2.1.1.6",
    "title": "Audit Find My Mac",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596621,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596621",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Find My is Apple's consumer solution for device tracking of your devices. This allows a user to track the location of devices associated with their Apple Account. This is a great solution for consumer or user device management and tracking, but it is not meant to be an enterprise management solution to device tracking and information management on enterprise managed devices. There are multiple enterprise MDM solutions for managing organizational devices.",
    "rationale_statement": "An enterprise solution should be used for tracking and information management of all devices, including Apple devices. Apple's Find My solution only handles Apple devices. If no enterprise solution is available, Find My provides capabilities for a user to manage and track Apple devices. It is not designed as an enterprise solution, and should not be used as one. It is better to allow the user to track devices that use their Apple Account than to have no tracking at all.",
    "impact_statement": "There should be no impact on the user while using the device. If someone other than the user has access to tracking information, this can impact the user and needs to be researched. Users should audit to ensure that only authorized people have access to your location. Using multiple solutions for device tracking can add unnecessary complexity.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nVerify that Find My Mac is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nSet Find My Mac is set to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841853,
    "recommendation_id": 4596622,
    "view_level": "2.1.2",
    "title": "Audit App Store Password Settings",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596622,
    "url": "https://workbench.cisecurity.org/sections/2841853/recommendations/4596622",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a 15-minute grace period, and whether or not to require a password for free purchases. The response to this setting is stored in a cookie and processed by iCloud.\nThere is plenty of risk information on the wisdom of this setting for parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users who are not authorized to download software may have physical access to an unlocked computer where someone who is authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store access in the Password Settings controls.",
    "rationale_statement": "",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that App Store Passwords are set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Media & Purchases\nVerify that Free Downloads is set to your organization's requirements\nVerify that Purchases and In-App Purchases is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set App Store Passwords to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Media & Purchases\nSet Free Downloads to your organization's requirements\nSet Purchases and In-App Purchases to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596625,
    "view_level": "2.2.2",
    "title": "Ensure Firewall Stealth Mode Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596625,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596625",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "While in Stealth mode, the computer will not respond to unsolicited probes, dropping that traffic.",
    "rationale_statement": "Stealth mode on the firewall minimizes the threat of system discovery tools while connected to a network or the Internet.",
    "impact_statement": "Traditional network discovery tools like ping will not succeed. Other network tools that measure activity and approved applications will work as expected.\nThis control aligns with the primary macOS use case of a laptop that is often connected to untrusted networks where host segregation may be non-existent. In that use case, hiding from the other inmates is likely more than desirable. In use cases where use is only on trusted LANs with static IP addresses, stealth mode may not be desirable.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the firewall has stealth mode enabled:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Option\nVerify that Enable stealth mode is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Stealth Mode set to Enabled\n\nTerminal Method:\nRun the following command to verify that stealth mode is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableStealthMode').js\nEOS\n\ntrue\n\nAlso, the status of the stealth mode can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getstealthmode\n\nFirewall stealth mode is on",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable firewall stealth mode:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSelect Options...\nSet Enabled stealth mode to enabled\n\nTerminal Method:\nRun the following command to enable stealth mode:\n% /usr/bin/sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on\n\nStealth mode enabled\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableStealthMode\nThe key must be set to <true/>\n\nNote: This key must be set in the same configuration profile with EnableFirewall set to <true/>. If it is set in its own configuration profile, it will fail.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841858,
    "recommendation_id": 4596626,
    "view_level": "2.3.1.1",
    "title": "Ensure AirDrop Is Disabled When Not Actively Transferring Files",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596626,
    "url": "https://workbench.cisecurity.org/sections/2841858/recommendations/4596626",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "AirDrop is Apple's built-in, on-demand, ad hoc file exchange system that is compatible with both macOS and iOS. It uses Bluetooth LE for discovery that limits connectivity to Mac or iOS users that are in close proximity. Depending on the setting, it allows everyone or only Contacts to share files when they are near each other.\nIn many ways, this technology is far superior to the alternatives. The file transfer is done over a TLS encrypted session, does not require any open ports that are required for file sharing, does not leave file copies on email servers or within cloud storage, and allows for the service to be mitigated so that only people already trusted and added to contacts can interact with you.\nWhile there are positives to AirDrop, there are privacy concerns that could expose personal information. For that reason, AirDrop should be disabled, and should only be enabled when needed and disabled afterwards. The recommendation against enabling the sharing is not based on any known lack of security in the protocol, but for specific user operational concerns.\n\nIf AirDrop is enabled, the Mac is advertising that a Mac is addressable on the local network and open to either unwanted AirDrop upload requests or for a negotiation on whether the remote user is in the user's contacts list. Neither process is desirable.\nIn most known use cases, AirDrop use qualifies as ad hoc networking when it involves Apple device users deciding to exchange a file using the service. AirDrop can thus be enabled on the fly for that exchange.\n\nFor organizations concerned about any use of AirDrop because of Digital Loss Prevention (DLP) monitoring on other protocols, JAMF has an article on reviewing AirDrop logs.\nDetecting outbound AirDrop transfers and logging them",
    "rationale_statement": "AirDrop can allow malicious files to be downloaded from unknown sources. Contacts Only limits may expose personal information to devices in the same area.",
    "impact_statement": "Disabling AirDrop can limit the ability to move files quickly over the network without using file shares.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that AirDrop is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow AirDrop set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disabled AirDrop:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowAirDrop').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAirDrop\nThe key must be set to <false/>\n\nNote: AirDrop can only be enabled or disabled through configuration profiles. If your organization wants to use AirDrop, it would need to be set through Terminal or the GUI. Please see the Additional Information for assistance with those options, but those system will not technically be in compliance.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841858,
    "recommendation_id": 4596628,
    "view_level": "2.3.1.2",
    "title": "Ensure AirPlay Receiver Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596628,
    "url": "https://workbench.cisecurity.org/sections/2841858/recommendations/4596628",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In macOS Monterey (12.0), Apple has added the capability to share content from another Apple device to the screen of a host Mac. While there are many valuable uses of this capability, such sharing on a standard Mac user workstation should be enabled ad hoc as required rather than allowing a continuous sharing service. The feature can be restricted by Apple Account or network and is configured to use by accepting the connection on the Mac. Part of the concern is frequent connection requests may function as a denial-of-service and access control limits may provide too much information to an attacker.\nhttps://macmost.com/how-to-use-a-mac-as-an-airplay-receiver.html\nhttps://support.apple.com/guide/mac-pro-rack/use-airplay-apdf1417128d/mac",
    "rationale_statement": "This capability appears very useful for kiosk and shared work spaces. The ability to allow by network could be especially useful on segregated guest networks where visitors could share their screens on computers with bigger monitors, including computers connected to projectors.",
    "impact_statement": "Turning off AirPlay sharing by default will not allow users to share without turning the service on. The service should be enabled as needed rather than left on.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that AirPlay Receiver is Disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow AirPlay Incoming Requests set to False\n\nTerminal Method:\nFor each user, run the following command to verify that AirPlay Receiver is disabled:\nRun the following command to verify that a profile is installed that disables the ability to use the computer as an AirPlay Receiver:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowAirPlayIncomingRequests').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAirPlayIncomingRequests\nThe key must be set to <false/>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": "AirPlay Receiver is enabled by default."
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596635,
    "view_level": "2.3.3.1",
    "title": "Ensure DVD or CD Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596635,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596635",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "DVD or CD Sharing allows users to remotely access the system's optical drive. While Apple does not ship Macs with built-in optical drives any longer, external optical drives are still recognized when they are connected. In testing, the sharing of an external optical drive persists when a drive is reconnected.",
    "rationale_statement": "Disabling DVD or CD Sharing minimizes the risk of an attacker using the optical drive as a vector for attack and exposure of sensitive data.",
    "impact_statement": "Many Apple devices are now sold without optical drives, however drive sharing may be needed for legacy optical media. The media should be explicitly re-shared as needed rather than using a persistent share. Optical drives should not be used for long-term storage. To store necessary data from an optical drive it should be copied to another form of external storage. Optionally, an image can be made of the optical drive so that it is stored in its original form on another form of external storage.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that DVD or CD Sharing is disabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that DVD or CD sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that DVD or CD Sharing is disabled\n% /usr/bin/sudo /bin/launchctl list | grep -c com.apple.ODSAgent\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable DVD or CD Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet DVD or CD sharing to disabled\n\nTerminal Method:\nRun the following command to disable DVD or CD Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.ODSAgent \n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.ODSAgent\n\nNote: If using the Terminal method, the GUI will still show the service checked until after a reboot.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596637,
    "view_level": "2.3.3.2",
    "title": "Ensure Screen Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596637,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596637",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Screen Sharing allows a computer to connect to another computer on a network and display the computer\u2019s screen. While sharing the computer\u2019s screen, the user can control what happens on that computer, such as opening documents or applications, opening, moving, or closing windows, and even shutting down the computer.\nWhile mature administration and management does not use graphical connections for standard maintenance, most help desks have capabilities to assist users in performing their work when they have technical issues and need support. Help desks use graphical remote tools to understand what the user sees and assist them so they can get back to work. For MacOS, some of these remote capabilities can use Apple's OS tools. Control is therefore not meant to prohibit the use of a just-in-time graphical view from authorized personnel with authentication controls. Sharing should not be enabled except in narrow windows when help desk support is required.\nScreen Sharing on macOS can allow the use of the insecure VNC protocol. VNC is a clear text protocol that should not be used on macOS.",
    "rationale_statement": "Disabling Screen Sharing mitigates the risk of remote connections being made without the user of the console knowing that they are sharing the computer.",
    "impact_statement": "Help desks may require the periodic use of a graphical connection mechanism to assist users. Any support that relies on native MacOS components will not work unless a scripted solution to enable and disable sharing is used, as necessary.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure Screen Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Screen Sharing is not enabled\n\nTerminal Method:\nRun the following commands to verify that Screen Sharing is not set:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -E \"com.apple.screensharing$\"\n\nThere will be no output if the service is disabled. If there is an output, then that is a finding.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Screen Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Screen Sharing to disabled\n\nTerminal Method:\nRun the following command to turn off Screen Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.screensharing\n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.screensharing",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596639,
    "view_level": "2.3.3.3",
    "title": "Ensure File Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596639,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596639",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "File sharing from a user workstation creates additional risks, such as:\n\nOpen ports are created that can be probed and attacked\nPasswords are attached to user accounts for access that may be exposed and endanger other parts of the organizational environment, including directory accounts\nIncreased complexity makes security more difficult and may expose additional attack vectors\n\nApple's File Sharing uses the Server Message Block (SMB) protocol to share to other computers that can mount SMB shares. This includes other macOS computers.\nApple warns that SMB sharing stored passwords is less secure, and anyone with system access can gain access to the password for that account. When sharing with SMB, each user accessing the Mac must have SMB enabled. Storing passwords, especially copies of valid directory passwords, decreases security for the directory account and should not be used.",
    "rationale_statement": "By disabling File Sharing, the remote attack surface and risk of unauthorized access to files stored on the system is reduced.",
    "impact_statement": "File Sharing can be used to share documents with other users, but hardened servers should be used rather than user endpoints. Turning on File Sharing increases the visibility and attack surface of a system unnecessarily.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that File Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that File Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that File Sharing is not enabled:\n% /usr/bin/sudo /bin/launchctl list | grep -c \"com.apple.smbd\"\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable File Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet File Sharing to disabled\n\nTerminal Method:\nRun the following command to disable File Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd\n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.smbd",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596641,
    "view_level": "2.3.3.4",
    "title": "Ensure Printer Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596641,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596641",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "By enabling Printer Sharing, the computer is set up as a print server to accept print jobs from other computers. Dedicated print servers or direct IP printing should be used instead.",
    "rationale_statement": "Disabling Printer Sharing mitigates the risk of attackers attempting to exploit the print server to gain access to the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Printer Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Printer Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that Printer Sharing is not enabled:\n% /usr/bin/sudo /usr/sbin/cupsctl | grep -c \"_share_printers=0\"                               \n\n1",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Printer Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Printer Sharing to disabled\n\nTerminal Method:\nRun the following command to disable Printer Sharing:\n% /usr/bin/sudo /usr/sbin/cupsctl --no-share-printers",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596643,
    "view_level": "2.3.3.5",
    "title": "Ensure Remote Login Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596643,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596643",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Remote Login allows an interactive terminal connection to a computer.",
    "rationale_statement": "Disabling Remote Login mitigates the risk of an unauthorized person gaining access to the system via Secure Shell (SSH). While SSH is an industry standard to connect to posix servers, the scope of the benchmark is for Apple macOS clients, not servers.\nmacOS does have an IP-based firewall available (pf, ipfw has been deprecated) that is not enabled or configured. There are more details and links in the Network sub-section. macOS no longer has TCP Wrappers support built in and does not have strong Brute-Force password guessing mitigations, or frequent patching of openssh by Apple. Since most macOS computers are mobile workstations, managing IP-based firewall rules on mobile devices can be very resource intensive. All of these factors can be parts of running a hardened SSH server.",
    "impact_statement": "The SSH server built into macOS should not be enabled on a standard user computer, particularly one that changes locations and IP addresses. A standard user that runs local applications, including email, web browser, and productivity tools, should not use the same device as a server. There are Enterprise management toolsets that do utilize SSH. If they are in use, the computer should be locked down to only respond to known, trusted IP addresses and appropriate administrator service accounts.\nFor macOS computers that are being used for specialized functions, there are several options to harden the SSH server to protect against unauthorized access, including brute force attacks. There are some basic criteria that need to be considered:\n\nDo not open an SSH server to the internet without controls in place to mitigate SSH brute force attacks. This is particularly important for systems bound to Directory environments. It is great to have controls in place to protect the system, but if they trigger after the user is already locked out of their account, they are not optimal. If authorization happens after authentication, directory accounts for users that don't even use the system can be locked out.\nDo not use SSH key pairs when there is no insight to the security on the client system that will authenticate into the server with a private key. If an attacker gets access to the remote system and can find the key, they may not need a password or a key logger to access the SSH server.\nDetailed instructions on hardening an SSH server, if needed, are available in the CIS Linux Benchmarks, but it is beyond the scope of this benchmark.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Remote Login is disabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Login is not enabled\n\nTerminal Method:\nRun the following command to verify that Remote Login is disabled:\n% /usr/bin/sudo /usr/sbin/systemsetup -getremotelogin\n\nRemote Login: Off",
    "remediation_procedure": "Perform the following to disable Remote Login:\nGraphical Method:\nPerform the following steps to disable Remote Login:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Login to disabled\n\nTerminal Method:\nRun the following command to disable Remote Login:\n% /usr/bin/sudo /usr/sbin/systemsetup -setremotelogin off\n\nDo you really want to turn remote login off? If you do, you will lose this connection and can only turn it back on locally at the server (yes/no)?\n\nEntering yes will disable remote login.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596645,
    "view_level": "2.3.3.6",
    "title": "Ensure Remote Management Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596645,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596645",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Remote Management is the client portion of Apple Remote Desktop (ARD). Remote Management can be used by remote administrators to view the current screen, install software, report on, and generally manage client Macs.\nThe screen sharing options in Remote Management are identical to those in the Screen Sharing section. In fact, only one of the two can be configured. If Remote Management is used, refer to the Screen Sharing section above on issues regarding screen sharing.\nRemote Management should only be enabled when a Directory is in place to manage the accounts with access. Computers will be available on port 5900 on a macOS System and could accept connections from untrusted hosts depending on the configuration, which is a major concern for mobile systems. As with other sharing options, an open port even for authorized management functions can be attacked, and both unauthorized access and Denial-of-Service vulnerabilities could be exploited. If remote management is required, the pf firewall should restrict access only to known, trusted management consoles. Remote management should not be used across the Internet without the use of a VPN tunnel.",
    "rationale_statement": "Remote Management should only be enabled on trusted networks with strong user controls present in a Directory system. Mobile devices without strict controls are vulnerable to exploitation and monitoring.",
    "impact_statement": "Many organizations utilize ARD for client management.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Remote Management is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Management is not enabled\n\nTerminal Method:\nRun the following command to verify that Remote Management is not enabled:\n% /usr/bin/sudo /bin/ps -ef | /usr/bin/grep -e ARDAgent\n\n0  9233  8630   0  3:32pm ttys001    0:00.00 grep -e ARDAgent",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Remote Management:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Management to disabled\n\nTerminal Method:\nRun the following command to disable Remote Management:\n% /usr/bin/sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -stop\n\nStarting...\nRemoved preference to start ARD after reboot.\nDone.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596647,
    "view_level": "2.3.3.7",
    "title": "Ensure Remote Apple Events Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596647,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596647",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple Events is a technology that allows one program to communicate with other programs. Remote Apple Events allows a program on one computer to communicate with a program on a different computer.",
    "rationale_statement": "Disabling Remote Apple Events mitigates the risk of an unauthorized program gaining access to the system.",
    "impact_statement": "With remote Apple events turned on, an AppleScript program running on another Mac can interact with the local computer.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Remote Apple Events is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Apple Events is not enabled\n\nTerminal Method:\nRun the following commands to verify that Remote Apple Events is not set\n% /usr/bin/sudo /usr/sbin/systemsetup -getremoteappleevents \n\nRemote Apple Events: Off",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Remote Apple Events:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Apple Events to disabled\n\nTerminal Method:\nRun the following commands to set Remote Apple Events to Off:\n% /usr/bin/sudo /usr/sbin/systemsetup -setremoteappleevents off \n\nsetremoteappleevents: Off",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596649,
    "view_level": "2.3.3.8",
    "title": "Ensure Internet Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596649,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596649",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Internet Sharing uses the open source natd process to share an internet connection with other computers and devices on a local network. This allows the Mac to function as a router and share the connection to other, possibly unauthorized, devices.",
    "rationale_statement": "Disabling Internet Sharing reduces the remote attack surface of the system.",
    "impact_statement": "Internet Sharing allows the computer to function as a router and other computers to use it for access. This can expose both the computer itself and the networks it is accessing to unacceptable access from unapproved devices.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure Internet Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Internet Sharing is not enabled\n\nTerminal Method:\nRun the following commands to verify that Internet Sharing is not set:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/SystemConfiguration/com.apple.nat >nul 2>&1 | grep -c \"Enabled = 1;\"\n\n0\n\nor\nRun the following command to verify that a profile is installed that automatically disables internet sharing:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n.objectForKey('forceInternetSharingOff').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Internet Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Internet Sharing to disabled\n\nTerminal Method:\nRun the following command to turn off Internet Sharing:\n% usr/bin/sudo /usr/bin/defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0\n\nNote: Using the Terminal Method will not be reflected in the GUI, but will disable the underlying service.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is forceInternetSharingOff\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596651,
    "view_level": "2.3.3.9",
    "title": "Ensure Content Caching Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596651,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596651",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to deploy data from Apple, including software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream.\nThis capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business requirement to manage operational Internet connectivity and bandwidth, user endpoints should not store content and act as a cluster to provision data.\nContent types supported by Content Caching in macOS",
    "rationale_statement": "The main use case for Mac computers is as mobile user endpoints. P2P sharing services should not be enabled on laptops that are using untrusted networks. Content Caching can allow a computer to be a server for local nodes on an untrusted network. While there are certainly logical controls that could be used to mitigate risk, they add to the management complexity. Since the value of the service is in specific use cases, organizations with the use case described above can accept risk as necessary.",
    "impact_statement": "This setting will adversely affect bandwidth usage between local subnets and the Internet.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Content Caching is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Content Caching is not enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow Content Caching set to False\n\nTerminal Method:\nRun the following command to verify that Content Caching is not enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.AssetCache')\\\n  .objectForKey('Activated'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n  .objectForKey('allowContentCaching'))\n  if ( ( pref1 == 0 ) || ( pref2 == 0 ) ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Content Caching:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Content Caching to disabled\n\nTerminal Method:\nRun the following command to disable Content Caching:\n% /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate\n\nThe output will include Content caching deactivated\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowContentCaching\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596653,
    "view_level": "2.3.3.10",
    "title": "Ensure Media Sharing Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596653,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596653",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all Apple devices that are signed in with the same Apple Account. This allows users to share downloaded Movies, Music, or TV shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs.\nWith this capability, guest users can also use media downloaded on the computer.\nThe recommended best practice is not to use the computer as a server, but to utilize Apple's cloud storage in order to download and use content stored there if content stored with Apple is used on multiple devices.\nhttps://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-mchlp13371337/mac\nNote: In macOS 15.0 Sequoia, Apple added a supported profile key for Media Sharing that replaces the keys in the benchmarks in previous versions.",
    "rationale_statement": "Disabling Media Sharing reduces the remote attack surface of the system.",
    "impact_statement": "Media Sharing allows for pre-downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized devices on the same network media access.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that a profile is installed that disables Media Sharing:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n  .objectForKey('allowMediaSharing'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n  .objectForKey('allowMediaSharingModification'))\n  if ( pref1 == 0 && pref2 == 0 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.\nNote: If a user has media sharing enabled when installing the profile it will not disable media sharing, but will instead lock it as enabled. To verify that no users have media sharing enabled before installing the profile, run the following command for each user on the system:\n% /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.amp.mediasharingd home-sharing-enabled",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowMediaSharing\nThe key must be set to <false/>\nThe key to also include is allowMediaSharingModification\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841866,
    "recommendation_id": 4596664,
    "view_level": "2.4.1",
    "title": "Ensure Show Wi-Fi status in Menu Bar Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596664,
    "url": "https://workbench.cisecurity.org/sections/2841866/recommendations/4596664",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The Wi-Fi status in the menu bar indicates if the system's wireless internet capabilities are enabled. If so, the system will scan for available wireless networks in order to connect. At the time of this revision, all computers Apple builds have wireless network capability, which has not always been the case. This control only pertains to systems that have a wireless NIC available. Operating systems running in a virtual environment may not score as expected, either.",
    "rationale_statement": "Enabling \"Show Wi-Fi status in menu bar\" is a security awareness method that helps mitigate public area wireless exploits by making the user aware of their wireless connectivity status.",
    "impact_statement": "The user of the system should have a quick check on their wireless network status available.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that the Wi-Fi status shows in the menu bar:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has WiFi set to 18\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables Wi-FI to be shown in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\\n.objectForKey('WiFi').js\nEOS\n\n18\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.controlcenter\nThe key to include is WiFi\nThe key must be set to <integer>18</integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841866,
    "recommendation_id": 4596667,
    "view_level": "2.4.2",
    "title": "Ensure Show Bluetooth Status in Menu Bar Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596667,
    "url": "https://workbench.cisecurity.org/sections/2841866/recommendations/4596667",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "By showing the Bluetooth status in the menu bar, a small Bluetooth icon is placed in the menu bar. This icon quickly shows the status of Bluetooth, and can allow the user to quickly turn Bluetooth on or off.",
    "rationale_statement": "Enabling \"Show Bluetooth status in menu bar\" is a security awareness method that helps understand the current state of Bluetooth, including whether it is enabled, discoverable, what paired devices exist, and what paired devices are currently active.",
    "impact_statement": "Bluetooth is a useful wireless tool that has been widely exploited when configured improperly. The user should have insight into the Bluetooth status.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Bluetooth status shows in the menu bar:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Bluetooth set to 18\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables Bluetooth to be shown in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\\n.objectForKey('Bluetooth').js\nEOS\n\n18\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.controlcenter\nThe key to include is Bluetooth\nThe key must be set to <integer>18</integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841867,
    "recommendation_id": 4596669,
    "view_level": "2.5.1",
    "title": "Audit Siri Settings",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596669,
    "url": "https://workbench.cisecurity.org/sections/2841867/recommendations/4596669",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "With macOS 10.12 Sierra, Apple has introduced Siri from iOS to macOS. While there are data spillage concerns with the use of data-gathering personal assistant software, the risk here does not seem greater in sending queries to Apple through Siri than in sending search terms in a browser to Google or Microsoft. While it is possible that Siri will be used for local actions rather than Internet searches, Siri could, in theory, tell Apple about confidential Programs and Projects that should not be revealed. This appears to be a usage edge case.\nIn cases where sensitive or protected data is processed and Siri could expose that information through assisting a user in navigating their machine, it should be disabled. Siri does need to phone home to Apple, so it should not be available from air-gapped networks as part of its requirements.\nMost of the use case data published has shown that Siri is a tremendous time saver on iOS where multiple screens and menus need to be navigated through. Information like sports scores, weather, movie times, and simple to-do items on existing calendars can be easily found with Siri. None of the standard use cases should be more risky than already approved activity.\nFor information on Apple's privacy policy for Siri, click here.",
    "rationale_statement": "Where \"normal\" user activity is already limited, Siri use should be controlled as well.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify Siri settings:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow Assistant is to your organization's parameters\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets Siri to your organization's setting:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                       \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\ .objectForKey('allowAssistant').js         \nEOS\n\nor\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS                       \n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.ironwood.support')\\ .objectForKey('Ironwood Allowed').js         \nEOS\n\nThe output will be true if Siri is enabled with either installed profile or false if is disabled with either installed profile.\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. We have included the individual user information in the additional information.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAssistant\nSet the key to <true/> or <false/> based on your organization's requirements\n\nOR\n\nThe PayloadType string is com.apple.ironwood.support\nThe key to include is Ironwood Allowed\nSet the key to <true/> or <false/> based on your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841867,
    "recommendation_id": 4596671,
    "view_level": "2.5.2",
    "title": "Ensure Listen for (Siri) Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596671,
    "url": "https://workbench.cisecurity.org/sections/2841867/recommendations/4596671",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS includes the Siri digital assistant and if enabled it is always listening in case it is needed. In Sonoma a user may choose either \"Hey Siri\" or either \"Siri\" and \"Hey Siri.\" In either case, Siri is using the microphone at all times to listen for instructions and then can record questions once activated. In an organizational environment where people are talking and listening on video/voice calls, there are too many opportunities for unauthorized information disclosure to have a live microphone at all times. If Siri will be used it may be on, with \"Listen for\" Off and a keyboard shortcut selected.",
    "rationale_statement": "In most environments there is too much unbounded risk of data spillage with a microphone always on, listening for instruction, and listening for questions if attention is obtained, relying on cloud compute to answer them. There are many examples of data leakage for technology in this space, and future vulnerabilities and bugs are certainly possible.",
    "impact_statement": "Siri will not be available for hands-free usage, or not available at all if turned off completely.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that \"Hey Siri\" is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has VoiceTriggerUserEnabled set to 0\n\nTerminal Method:\nRun the following command to verify that \"Hey Siri\" is disabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Siri')\\\n.objectForKey('VoiceTriggerUserEnabled').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Siri\nThe key to include is set to VoiceTriggerUserEnabled\nThe key must be set to <false/>\n\nNote: After testing, this profile will disable Hey Siri only for the first input but not additional inputs. This issues seems to only occur using the Apple Studio Display (and possibly the Pro Display XDR, but no testing has occurred with that device) and it is not the primary input source. We are going to continue testing, but this seems to be an edge case.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596673,
    "view_level": "2.6.1.1",
    "title": "Ensure Location Services Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596673,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596673",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointments where location information is supplied.\nLocation Services simplify some processes with mobile computers, such as asset management and time or log management.\nThere are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge.",
    "rationale_statement": "Location Services are helpful in most use cases and can simplify log and time management where computers change time zones.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Location Services is enabled:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nVerify Location Services is enabled\n\nTerminal Method:\nRun the following command to verify that Location Services are enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.locationd\n\n1\n\n% /usr/bin/sudo -u _locationd /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationd').objectForKey('LocationServicesEnabled').js\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Location Services:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSet Location Services to enabled\n\nTerminal Method:\nRun the following command to enable Location Services:\n% /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist\n\nIf the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running:\n% /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool true \n\n% /usr/bin/sudo /usr/bin/killall locationd\n\nNote: In some use cases, organizations may not want Location Services running. To disable Location Services, run the command: /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841870,
    "recommendation_id": 4596676,
    "view_level": "2.6.1.2",
    "title": "Ensure 'Show Location Icon in Control Center when System Services Request Your Location' Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596676,
    "url": "https://workbench.cisecurity.org/sections/2841870/recommendations/4596676",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "This setting provides the user an understanding of the current status of Location Services and which applications are using it.",
    "rationale_statement": "Apple has fully integrated location services into macOS. When user applications access location an arrow is displayed next to the Control Center in the menu bar to give users an indication when their location is being accessed. By default system services like time zones, weather, travel times, geolocation, \"Find my Mac,\" and advertising services do not indicate the location is accessed.\nEnabling the \u201cShow location icon in the menu bar when System Services request your location\u201d setting will show an arrow in the control center when a system service accesses the location. Although an indication that location was accessed, Control Center will only say that it was accessed by \"System Services\" and not the individual service. Looking in System Settings > Location Services > System Services > Details\u2026 will expose exactly which system services have accessed Location Services in the last 24 hours. Third-party tools will be shown individually when they access location services.",
    "impact_statement": "Users may be provided visibility to a setting they cannot control if organizations control Location Services globally by policy.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the settings for location services icon to be in the menu bar:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSelect Details...\nVerify Show location icon in menu bar when System Services request your location is set to True\n\nTerminal Method:\nRun the following commands to verify that the location services icon is in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.locationmenu')\\     \n.objectForKey('ShowSystemServices').js               \nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set whether the location services icon is in the menu bar:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Location Services\nSelect Details...\nSet Show location icon in menu bar when System Services request your location to enabled\n\nTerminal Method:\nRun the following commands to set the option of the location services icon being in the menu bar:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.locationmenu.plist ShowSystemServices -bool true",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4730709,
    "view_level": "2.6.3.1",
    "title": "Ensure Share Mac Analytics Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4730709,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4730709",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share Mac Analytics (Share with App Developers dependent on Mac Analytic sharing) includes diagnostics, usage, and location data. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Mac analytics are not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Auto Submit set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing Mac analytics to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SubmitDiagInfo')\\\n.objectForKey('AutoSubmit').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SubmitDiagInfo\nThe key to include is AutoSubmit\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4731246,
    "view_level": "2.6.3.2",
    "title": "Ensure Improve Siri & Dictation Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4731246,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4731246",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Improve Siri & Dictation allows Apple to store and review audio of your Siri and dictation interactions from the device. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Siri and dictation is not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Siri Data Sharing Opt-In Status set to 2\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing Siri and dictations to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('Siri Data Sharing Opt-In Status').js\nEOS\n\n2",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is Siri Data Sharing Opt-In Status\nThe key must be set to <integer>2<integer/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4731783,
    "view_level": "2.6.3.3",
    "title": "Ensure Improve Assistive Voice Features Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4731783,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4731783",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Improve Assistive Voice shares audio recordings and transcripts of Vocal Shortcuts and Voice Control interactions anonymously to Apple. These are recordings and transcripts from the user that are being submitted which may include PII or restricted organizational information. Sharing this kind of information with any 3rd party, including the platform vendor, needs to be risk evaluated and only allowed after review and approval based on your organization's policies.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that assistive voice features are not being sent to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AXSAudioDonationSiriImprovementEnabled set to 0\n\nTerminal Method:\nRun the following command to verify a profile installed that are not sending assistive voice features to Apple:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Accessibility')\\\n.objectForKey('AXSAudioDonationSiriImprovementEnabled').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Accessibility\nThe key to include is AXSAudioDonationSiriImprovementEnabled \nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4738988,
    "view_level": "2.6.3.4",
    "title": "Ensure 'Share with app developers' Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4738988,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4738988",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share with app developers allows Apple to share crash and usage data with app developers. Turn off all Analytics and Improvements sharing.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that diagnostic data is not being send to Apple:\n\nOpen System Settings\nSelect General\nSelect Device Management\nAlso verify that an installed profile has Allow Diagnostic Submission set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables sharing app analytics to Apple and developers:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowDiagnosticSubmission').js\nEOS\n\nfalse",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowDiagnosticSubmission\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2925527,
    "recommendation_id": 4739244,
    "view_level": "2.6.3.5",
    "title": "Ensure Share iCloud Analytics Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4739244,
    "url": "https://workbench.cisecurity.org/sections/2925527/recommendations/4739244",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Share iCloud Analytics shares analytics of usage and data from your iCloud account to Apple to help improve its products and services (including Siri and other intelligent features). Turn off all Analytics and Improvements sharing.\nThis setting will not appear if the user is not signed into a personal Apple Account.",
    "rationale_statement": "Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
    "impact_statement": "There should be no impact.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that iCloud Analytics is not being sent to Apple:\n\nOpen System Settings\nOpen Privacy & Security\nSelect Analytics & Improvements\nVerify that Share iCloud Analytics is disabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Siri and dictation not being sent to Apple:\n\nOpen System Settings\nOpen Privacy & Security\nSelect Analytics & Improvements\nVerify that Share iCloud Analytics is disabled",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596683,
    "view_level": "2.6.4",
    "title": "Ensure Limit Ad Tracking Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596683,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596683",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides a framework that allows advertisers to target Apple users and end-users with advertisements. While many people prefer to see advertising that is relevant to them and their interests, the detailed information that is collected, correlated, and available to advertisers in repositories via data mining is often disconcerting. This information is valuable to both advertisers and attackers, and has been used with other metadata to reveal users' identities.\nOrganizations should manage advertising settings on computers rather than allow users to configure the settings.\nApple Information\nAd tracking should be limited on 10.15 and prior.",
    "rationale_statement": "Organizations should manage user privacy settings on managed devices to align with organizational policies and user data protection requirements.",
    "impact_statement": "Uses will see generic advertising rather than targeted advertising. Apple warns that this will reduce the number of relevant ads.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that limited ad tracking is set:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has allowApplePersonalizedAdvertising set to 0\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables Limit Ad Tracking:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowApplePersonalizedAdvertising').js\nEOS\n\nfalse\n\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowApplePersonalizedAdvertising\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841877,
    "recommendation_id": 4596697,
    "view_level": "2.8.1",
    "title": "Audit Universal Control Settings",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596697,
    "url": "https://workbench.cisecurity.org/sections/2841877/recommendations/4596697",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Universal Control is an Apple feature that allows Mac users to control multiple other Macs and iPads with the same keyboard, mouse, and trackpad using the same Apple Account. The technology relies on already available iCloud services, particularly Handoff.\nUniversal Control simplifies the use of iCloud connectivity of multiple computers using the same Apple Account. This may simplify data transfer from organizationally-managed and personal devices. The use of the same iCloud account and Handoff is the underlying concern that should be evaluated. The use of the same keyboard or mouse across multiple devices does not by itself decrease organizational security.\nUniversal Clipboard, a feature of Universal Control, allows any device using the same Apple Account to access the clipboard of any other devices using the same Apple Account.",
    "rationale_statement": "The use of devices together when some are organizational and some are not may complicate device management standards.\nUniversal control settings may also enable a user to share their clipboard across multiple devices authenticated to the same Apple Account, so disabling that should be discussed by the organization.",
    "impact_statement": "The user should not be impacted if Universal Control is set either way.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify a profile is installed that configures Universal Control:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has with com.apple.universalcontrol in Settings and has Disable set to your organization's parameters.\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets Universal Control to your organization's parameters:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.universalcontrol')\\\n.objectForKey('Disable').js\nEOS\n\nIf the output is true, Universal Control is disabled. If it is false, then Universal Control is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.universalcontrol\nThe key to include is Disable\nSet the key to <true/> or <false/> based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.\nNote: If your organization is allowing Universal Control, your organization can still disable Universal Clipboard via a profile. To disable Universal Clipboard, create or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.coreservices.useractivityd\nThe key to include is ClipboardSharingEnabled\nSet the key to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841879,
    "recommendation_id": 4596705,
    "view_level": "2.9.2",
    "title": "Ensure Power Nap Is Disabled for Intel Macs",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596705,
    "url": "https://workbench.cisecurity.org/sections/2841879/recommendations/4596705",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Power Nap allows the system to stay in low power mode, especially while on battery power, and periodically connect to previously known networks with stored credentials for user applications to phone home and get updates. This capability requires FileVault to remain unlocked and the use of previously joined networks to be risk accepted based on the SSID without user input.\nThis control has been updated to check the status on both battery and AC Power. The presence of an electrical outlet does not completely correlate with logical and physical security of the device or available networks.",
    "rationale_statement": "Disabling this feature mitigates the risk of an attacker remotely waking the system and gaining access.\nThe use of Power Nap adds to the risk of compromised physical and logical security. The user should be able to decrypt FileVault and have the applications download what is required when the computer is actively used.\nThe control to prevent computer sleep has been retired for this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed LANs.",
    "impact_statement": "Power Nap exists for unattended user application updates like email and social media clients. With Power Nap disabled, the computer will not wake and reconnect to known wireless SSIDs intermittently when slept.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that Power Nap is not enabled:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nVerify that Power Nap is disabled\nSelect UPS (if applicable)\nVerify that Power Nap is disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Power Adapter\nVerify that Power Nap is disabled\nSelect Battery\nVerify that Power Nap is disabled\nSelect UPS (if applicable)\nVerify that Power Nap is disabled\n\nNote: To verify if you are running an Intel processor, perform the following steps:\n\nSelect \uf8ff in the Menu Bar\nSelect About This Mac\nVerify that the Chip field included Intel\n\nTerminal Method:\nRun the following command to verify if Power Nap is disabled:\n% /usr/bin/sudo /usr/bin/pmset -g custom | /usr/bin/grep -c \"^\\spowernap\\s*1\"\n\n0\n\nNote: To verify if you are running an Intel processor, run /usr/sbin/sysctl -n machdep.cpu.brand_string. The output will include Intel.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Power Nap:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nSet Power Nap to disabled\nSelect UPS (if applicable)\nSet Power Nap to disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Power Adapter (for laptops only)\nSet Power Nap to disabled\nSelect Battery\nSet Power Nap to disabled\nSelect UPS (if applicable)\nSet Power Nap to disabled\n\nTerminal Method:\nRun the following command to disable Power Nap:\n% /usr/bin/sudo /usr/bin/pmset -a powernap 0",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841879,
    "recommendation_id": 4596708,
    "view_level": "2.9.3",
    "title": "Ensure Wake for Network Access Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596708,
    "url": "https://workbench.cisecurity.org/sections/2841879/recommendations/4596708",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "This feature allows the computer to take action when the user is not present and the computer is in energy saving mode. These tools require FileVault to remain unlocked and fully rejoin known networks. This macOS feature is meant to allow the computer to resume activity as needed regardless of physical security controls.\nThis feature allows other users to be able to access your computer\u2019s shared resources, such as shared printers or Apple Music playlists, even when your computer is in sleep mode. In a closed network when only authorized devices could wake a computer, it could be valuable to wake computers in order to do management push activity. Where mobile workstations and agents exist, the device will more likely check in to receive updates when already awake. Mobile devices should not be listening for signals on any unmanaged network or where untrusted devices exist that could send wake signals.",
    "rationale_statement": "Disabling this feature mitigates the risk of an attacker remotely waking the system and gaining access.",
    "impact_statement": "Management programs like Apple Remote Desktop Administrator use wake-on-LAN to connect with computers. If turned off, such management programs will not be able to wake a computer over the LAN. If the wake-on-LAN feature is needed, do not turn off this feature.\nThe control to prevent computer sleep has been retired for this version of the Benchmark. Forcing the computer to stay on and use energy in case a management push is needed is contrary to most current management processes. Only keep computers unslept if after hours pushes are required on closed LANs.\nTurning off Wake for Network Access will also not allow Find My to work when the computer is asleep. It will also give this warning: \"You won\u2019t be able to locate, lock, or erase this Mac while it\u2019s asleep because Wake for network access is turned off.\"",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Wake for network access is disabled:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nVerify that Wake for network access is disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Options...\nVerify that Wake for network access is set to Never\n\nTerminal Method:\nRun the following command verify if Wake for network access is not enabled:\n$ /usr/bin/sudo /usr/bin/pmset -g custom | /usr/bin/grep -e womp  \n\nwomp                 0\n\nor\nRun the following command to verify that a profile is installed that disables Wake On Lan is installed:\n% /usr/bin/sudo /usr/bin/profiles -P -o stdout | /usr/bin/grep \"Wake On LAN\"\n\n                            \"Wake On LAN\" = 0;\n                            \"Wake On LAN\" = 0;\n                            \"Wake On LAN\" = 0;\n\n% /usr/bin/sudo /usr/bin/profiles -P -o stdout | /usr/bin/grep \"Wake On Modem Ring\"\n\n                            \"Wake On Modem Ring\" = 0;\n                            \"Wake On Modem Ring\" = 0;\n                            \"Wake On Modem Ring\" = 0;",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Wake for network access:\nDesktop Instructions:\n\nOpen System Settings\nSelect Energy Saver\nSet Wake for network access to disabled\n\nLaptop Instructions:\n\nOpen System Settings\nSelect Battery\nSelect Options...\nSet Wake for network access to Never\n\nTerminal Method:\nRun the following command to disable Wake for network access:\n% /usr/bin/sudo /usr/bin/pmset -a womp 0  \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is com.apple.EnergySaver.desktop.ACPower\nThe key must be set to:\n\n<dict>\n\t<key>Wake On LAN</key>\n\t<integer>0</integer>\n\t<key>Wake On Modem Ring</key>\n\t<integer>0</integer>\n</dict>\n\n\nThe key to also include is com.apple.EnergySaver.portable.ACPower\nThe key must be set to:\n\n<dict>\n\t<key>Wake On LAN</key>\n\t<integer>0</integer>\n\t<key>Wake On Modem Ring</key>\n\t<integer>0</integer>\n</dict>\n\n\nThe key to also include is com.apple.EnergySaver.portable.BatteryPower\nThe key must be set to:\n\n<dict>\n\t<key>Wake On LAN</key>\n\t<integer>0</integer>\n\t<key>Wake On Modem Ring</key>\n\t<integer>0</integer>\n</dict>\n\nNote: Both Wake on LAN and Wake on Modem Ring need to be set. Only setting Wake On LAN will allow the profile to install but not set any settings. This profile will only apply the setting at installation and is not sticky.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841889,
    "recommendation_id": 4596732,
    "view_level": "2.17.1",
    "title": "Audit Internet Accounts for Authorized Use",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596732,
    "url": "https://workbench.cisecurity.org/sections/2841889/recommendations/4596732",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides a section in System Settings to create and display Internet Accounts. Setting up an Internet Account allows the user to configure access to pre-existing accounts that are Internet Accessible. The Internet Accounts section is not managing network access to firewall rules, it only provides a location to manage credentials and audit external accounts for applications that make use of the \"Internet Accounts.\" Some applications, like Thunderbird and Firefox, do not natively use Internet Accounts and store credentials with the application settings. Disabling the Internet Accounts section does not block access if network reachable, it just makes auditing and use more difficult. Depending on the maturity of network controls, auditing the providers listed in Internet Accounts is part of managing acceptable use.",
    "rationale_statement": "Internet provided services may be restricted in your organization and should be reviewed. Even with an advanced application firewall, the user may not always be using an internal trusted network subject to the organizational firewall. An audit will document which services a user has configured.",
    "impact_statement": "Risky services may be identified that are not authorized and will require a recess to work with the user to no longer connect from a managed Mac.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what accounts have been added to Internet Accounts:\n\nOpen System Settings\nSelect Internet Accounts\nVerify that all accounts are set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set accounts in Internet Accounts to your organization's requirements:\n\nOpen System Settings\nSelect Internet Accounts\nFor each account, select the account\nVerify that each sync option is set to your organization's requirements\n(Optional) Select Delete Account... to remove the account\n(Optional) Select Add Account... to add an account to the system",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596654,
    "view_level": "4.1",
    "title": "Ensure Bonjour Advertising Services Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596654,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596654",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerates devices and services within a local subnet. DNS on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled.",
    "rationale_statement": "Bonjour can simplify device discovery from an internal rogue or compromised host. An attacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-configured service or additional information to aid a targeted attack. Implementing this control disables the continuous broadcasting of \"I'm here!\" messages. Typical end-user endpoints should not have to advertise services to other computers. This setting does not stop the computer from sending out service discovery messages when looking for services on an internal subnet, if the computer is looking for a printer or server and using service discovery. To block all Bonjour traffic except to approved devices, the pf or other firewall would be needed.",
    "impact_statement": "Some applications may not operate properly if Bonjour advertising (discoverable) is turned off. In AirDrop, having this discoverability feature disabled makes the system unavailable to receive files in AirDrop on the local network.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Bonjour Advertising is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has NoMulticastAdvertisements set to 1\n\nTerminal Method:\nRun the following command to verify that Bonjour Advertising is not enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.mDNSResponder')\\\n.objectForKey('NoMulticastAdvertisements').js\nEOS\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable Bonjour Advertising services:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mDNSResponder\nThe key to include is NoMulticastAdvertisements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596656,
    "view_level": "4.2",
    "title": "Ensure HTTP Server Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596656,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596656",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS used to have a graphical front-end to the embedded Apache web server in the Operating System. Personal web sharing could be enabled to allow someone on another computer to download files or information from the user's computer. Personal web sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. Apache, however, is still part of the Operating System and can be easily turned on to share files and provide remote connectivity to an end-user computer. Web sharing should only be done through hardened web servers and appropriate cloud services.",
    "rationale_statement": "Web serving should not be done from a user desktop. Dedicated webservers or appropriate cloud storage should be used. Open ports make it easier to exploit the computer.",
    "impact_statement": "The web server is both a point of attack for the system and a means for unauthorized file transfers.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that the HTTP server services are not currently enabled. This check does not reflect any auto-start settings, only whether the web server is currently enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c \"org.apache.httpd\"\n\n0",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable the HTTP server services:\n% /usr/bin/sudo /usr/sbin/apachectl stop\n\n% /usr/bin/sudo /bin/launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841862,
    "recommendation_id": 4596658,
    "view_level": "4.3",
    "title": "Ensure NFS Server Is Disabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596658,
    "url": "https://workbench.cisecurity.org/sections/2841862/recommendations/4596658",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS can act as an NFS fileserver. NFS sharing could be enabled to allow someone on another computer to mount shares and gain access to information from the user's computer. File sharing from a user endpoint has long been considered questionable, and Apple has removed that capability from the GUI. NFSD is still part of the Operating System and can be easily turned on to export shares and provide remote connectivity to an end-user computer.\nThe etc/exports file contains the list of NFS shared directories. If the file exists, it is likely that NFS sharing has been enabled in the past or may be available periodically. As an additional check, the audit verifies that there is no /etc/exports file.",
    "rationale_statement": "File serving should not be done from a user desktop. Dedicated servers should be used. Open ports make it easier to exploit the computer.",
    "impact_statement": "The nfs server is both a point of attack for the system and a means for unauthorized file transfers.",
    "audit_procedure": "Terminal Method:\nRun the following commands to verify that the NFS fileserver service is not enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.nfsd\n\n0\n\n% /usr/bin/sudo /bin/cat /etc/exports \n\ncat: /etc/exports: No such file or directory",
    "remediation_procedure": "Terminal Method:\nRun the following command to disable the nfsd fileserver services:\n% /usr/bin/sudo /sbin/nfsd stop\n\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.nfsd\n\nRemove the exported Directory listing.\n% /usr/bin/sudo /bin/rm /etc/exports",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 4.8 Uninstall or Disable Unnecessary Services on Enterprise Assets and Software (Version 8)",
    "section_id": 2841882,
    "recommendation_id": 4596721,
    "view_level": "6.4.1",
    "title": "Ensure Secure Keyboard Entry Terminal.app Is Enabled",
    "pivot_control_id": 398,
    "pivot_recommendation_id": 4596721,
    "url": "https://workbench.cisecurity.org/sections/2841882/recommendations/4596721",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Secure Keyboard Entry prevents other applications on the system and/or network from detecting and recording what is typed into Terminal. Unauthorized applications and malicious code could intercept keystrokes entered in the Terminal.",
    "rationale_statement": "Enabling Secure Keyboard Entry minimizes the risk of a key logger detecting what is entered in Terminal.",
    "impact_statement": "Enabling this in Terminal would prevent an application that is otherwise validly intercepting keyboard input from intercepting that input in Terminal.app. This could impact productivity tools.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that keyboard entries are secure in Terminal:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has SecureKeyboardEntry is set to 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables secure keyboard entry in Terminal:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.Terminal')\\\n.objectForKey('SecureKeyboardEntry').js\nEOS\n\ntrue\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Terminal\nThe key to include is SecureKeyboardEntry\nThe key must be set to <true/>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596619,
    "view_level": "2.1.1.4",
    "title": "Audit Security Keys Used With Apple Accounts",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596619,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596619",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Apple has introduced the capability of using security keys to protect Apple Accounts using two-factor authentication in macOS Ventura 13.2, in iOS 16.3, and in iPadOS 16.3. This feature along with the purchase of two hardware tokens (a backup device is required) protects against the compromise of Apple Accounts. This feature requires all devices using an enrolled Apple Account to meet the minimum OS standard.",
    "rationale_statement": "Users of Apple devices are supported across their devices by using the same Apple Account to support shared data in both iCloud and across devices. Compromising an Apple Account has become a very attractive target for attackers to gain unauthorized access to iCloud storage and user devices. Two-factor authentication reduces the risk.",
    "impact_statement": "Legacy devices and test machines will be challenging to ensure that they are all running recent Operating Systems that can utilize Security Keys. It is best practice not to use Apple Accounts with access to current user data on legacy and test machines. Technical staff that use legacy devices are encouraged to create additional Apple Accounts that do not need two-factor protection and can be used for testing on legacy devices when required.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Password & Security\nVerify that Security Keys is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect Password & Security\nSelect Add.. to add a security key, or Remove All Security Keys ro remove security keys, to meet your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841883,
    "recommendation_id": 4596723,
    "view_level": "2.11.1",
    "title": "Ensure Users' Accounts Do Not Have a Password Hint",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596723,
    "url": "https://workbench.cisecurity.org/sections/2841883/recommendations/4596723",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Password hints help the user recall their passwords for various systems and/or accounts. In most cases, password hints are simple and closely related to the user's password.",
    "rationale_statement": "Password hints that are closely related to the user's password are a security vulnerability, especially in the social media age. Unauthorized users are more likely to guess a user's password if there is a password hint. The password hint is very susceptible to social engineering attacks and information exposure on social media networks.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that no users have a password hint:\n% /usr/bin/sudo /usr/bin/dscl . -list /Users hint\n\nThe output will list all users. If there is any text listed with the user, then the machine is not compliant.\nexample:\n% /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -list /Users hint\n\nfirstuser    passwordhint\nseconduser   passwordhint2\nthirduser\nfourthuser     \nGuest",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to remove a user's password hint:\n\nOpen System Settings\nSelect Touch ID & Passwords (or Login Password on non-Touch ID Macs)\nSelect Change...\nChange the password and ensure that no text is entered in the Password hint box\n\nNote: This will only change the currently logged-in user's password, and not any others that are not compliant on the Mac. Use the terminal method if multiple users are not in compliance.\nTerminal Method:\nRun the following command to remove a user's password hint:\n% /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/<username> hint\n\nexample:\n% /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/firstuser hint\n\n% /usr/bin/sudo /usr/bin/dscl . -list /Users hint . -delete /Users/seconduser hint",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841883,
    "recommendation_id": 4596724,
    "view_level": "2.11.2",
    "title": "Audit Touch ID",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596724,
    "url": "https://workbench.cisecurity.org/sections/2841883/recommendations/4596724",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple has integrated Touch ID with macOS and allows fingerprint use for many common operations. All use of Touch ID requires the presence of a password and the use of that password after every reboot, or when more than 48 hours has elapsed since the device was last unlocked. Touch ID is not a password replacement. The use of Touch ID can, however, make the use of passwords more secure for authorized users with physical access to a Mac. Normal day-to-day work operations can eliminate the use of console password entry unless a reboot is required other than on Monday morning. The infrequency of password screen unlock can enable a more complicated pass phrase that is seldom used. When Touch ID is used it remediates the risk of shoulder surfing (including video surveillance) to capture console credentials. There have been many reported shoulder surfing password captures on iOS devices. Reports have not been widespread on Macs, but shoulder surfing password capture is simpler than the other methods of breaking in to an encrypted Mac.\nWhen a SmartCard or YubiKey is provisioned by an organization and is available for Console authentication, that is a much more secure option than the use of Touch ID and is preferred.",
    "rationale_statement": "Touch ID allows for an account-enrolled fingerprint to access a key that uses a previously provided password.",
    "impact_statement": "Touch ID is more convenient for use with aggressive screen lock controls.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify Touch ID settings:\n\nOpen System Settings\nSelect Touch ID & Password\nVerify the Touch ID settings match your organization's requirements\n\nTerminal Method:\nFor each user, run the following commands to verify that the TouchID settings are within your organization's parameters:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -r    \n\nUser Touch ID configuration:\n\tTouch ID for unlock: <0,1>\n\tTouch ID for ApplePay: <0,1>\n\tEffective Touch ID for unlock: <0,1>\n\tEffective Touch ID for ApplePay: <0,1>\n\n% /usr/bin/sudo /usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/'\n\n\tTouch ID timeout (in seconds): <value\u2264172800>\n\nNote: The -s notates a system configuration and does not need to be ran for each user.\nNote: The output for unlock and ApplePay is 0 for disabled and 1 for enabled. The timeout value is seconds and can be set to any value.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/bioutil -r    \n\nUser Touch ID configuration:\n\tTouch ID for unlock: 1\n\tTouch ID for ApplePay: 1\n\tEffective Touch ID for unlock: 1\n\tEffective Touch ID for ApplePay: 1\n\n% /usr/bin/sudo usr/bin/bioutil -r -s | /usr/bin/awk '/timeout/'\n\n\tTouch ID timeout (in seconds): 172800\n\nIn the above example, the user has TouchID enabled for both unlocking the system and for ApplePay. The timeout for TouchID is set to the maximum of 48 hours (172800 seconds).",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Touch ID to your organization's settings:\n\nOpen System Settings\nSelect Touch ID & Password\nSet the Touch ID settings to your organization's requirements\n\nTerminal Method:\nFor each user, run the following commands to set TouchID to your organization's parameters:\nUse this command for TouchID to unlock the system. Use 0 to disable unlock or 1 to enable unlock:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u <0,1>\n\nUse this command for TouchID to use ApplePay. Use 0 to disable ApplePay or 1 to enable ApplePay:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a <0,1>\n\nUse this command to set the timeout at the system level:\n% /usr/bin/sudo usr/bin/bioutil -w -s -o <value\u2264172800>\n\nexample:\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -u 1\n\n% /usr/bin/sudo -u <username> /usr/bin/bioutil -w -a 1\n\n% /usr/bin/sudo usr/bin/bioutil -w -s -o 86400\n\nNote: The -s notates a system configuration and does not need to be ran for each user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841884,
    "recommendation_id": 4596725,
    "view_level": "2.12.1",
    "title": "Ensure Guest Account Is Disabled",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596725,
    "url": "https://workbench.cisecurity.org/sections/2841884/recommendations/4596725",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The guest account allows users access to the system without having to create an account or password. Guest users are unable to make setting changes and cannot remotely login to the system. All files, caches, and passwords created by the guest user are deleted upon logging out.",
    "rationale_statement": "Disabling the guest account mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system.",
    "impact_statement": "A guest user can use that access to find out additional information about the system and might be able to use privilege escalation vulnerabilities to establish greater access.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the guest account is not available:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nVerify that Allow guests to log in to this computer is disabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disable Guest Account set to True\nVerify that an installed profile has Enable Guest Account set to False\n\nTerminal Method:\nRun the following command to verify if the guest account is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('DisableGuestAccount'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('EnableGuestAccount'))\n  let pref3 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n  .objectForKey('GuestEnabled'))\n  if (( pref1 == 1 && pref2 == 0 ) || ( pref3 == 0 )) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable guest account availability:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nSet Allow guests to log in to this computer to disabled\n\nTerminal Method:\nRun the following command to disable the guest account:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is DisableGuestAccount\nThe key must be set to <true/>\nThe key to include is EnableGuestAccount\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841885,
    "recommendation_id": 4596728,
    "view_level": "2.13.1",
    "title": "Audit Passwords System Preference Setting",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596728,
    "url": "https://workbench.cisecurity.org/sections/2841885/recommendations/4596728",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple has provided a new interface in macOS Monterey for managing passwords that mirrors the interfaced capability already available in iOS. Password management in macOS was previously available in both Safari Preferences and in Keychain Access. Apple is attempting to simplify password management for macOS and make the user experience more similar to iOS. Organizations are justifiably concerned about the risk of password managers, particularly as a possible backdoor to improved credential management regimes and greater use of Multi-Factor-Authentication (MFA).\nApple has information posted on this system preference with additional information.\nChange Passwords preferences on Mac\nA warning icon is shown next to a website for any of the following reasons:\n\nEasily guessed\nAppeared in a data leak\nReused on another website",
    "rationale_statement": "Organizations should remove what passwords can be saved on user computers, thus limiting the ability of attackers to potentially steal organizational credentials. Limits on password storage must be evaluated based on both user risk and Enterprise risk.",
    "impact_statement": "Organizations using passwords are constantly reported as having their password databases leaked to the Internet so every password a user has should be unique. Locking down secure password management solutions so that they cannot be used pushes users to password reuse, sticky notes, or always open text files with long lists of credentials.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to audit the Password system settings:\n\nOpen System Settings\nSelect Passwords\nEnter the user's password\nSelect Security Recommendations\nVerify that any recommendations or compromised passwords are set to match your organization's settings\nReview applications with stored passwords to ensure that Enterprise managed passwords are not stored inappropriately. Application interfaces may need to be considered as well, as they allow the opportunity to store passwords that should not be saved.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Password system settings to your organization's settings:\n\nOpen System Settings\nSelect Passwords\nEnter the user's password\nSelect the Security Recommendations\nRemove stored passwords that should not be saved.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596674,
    "view_level": "5.2.2",
    "title": "Ensure Password Minimum Length Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596674,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596674",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A minimum password length is the fewest number of characters a password can contain to meet a system's requirements.\nEnsure that a minimum of a 15-character password is part of the password policy on the computer.\nWhere the confidentiality of encrypted information in FileVault is more of a concern, requiring a longer password or passphrase may be sufficient rather than imposing additional complexity requirements that may be self-defeating.",
    "rationale_statement": "Information systems that are not protected with strong password schemes including passwords of minimum length provide a greater opportunity for attackers to crack the password and gain access to the system.",
    "impact_statement": "Short passwords can be easily attacked.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the Password Account Threshold is set to greater than or equal to 15:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Min Password Length set to \u2265 15\n\nTerminal Method:\nRun the following command to verify that the password length is greater than or equal to 15:\n% /usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"policyAttributePassword matches\" | /usr/bin/cut -b 46-53 | /usr/bin/cut -d',' -f1 | /usr/bin/cut -d'{' -f2\n\nThe output value should be \u2265 15",
    "remediation_procedure": "Terminal Method:\nRun the following command to set the password length to greater than or equal to 15:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"minChars=<value\u226515>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"minChars=15\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is minLength\nThe key must be set to <integer><value\u226515></integer>\n\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596675,
    "view_level": "5.2.3",
    "title": "Ensure Complex Password Must Contain Alphabetic Characters Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596675,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596675",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\nEnsure that an Alphabetic character is part of the password policy on the computer.",
    "rationale_statement": "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.",
    "impact_statement": "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the passwords must contain at least 1 alphabetic character:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Requires Alphanumeric set to True\n\nTerminal Method:\nRun the following command to verify that the password requires at least one letter:\n% pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"Contain at least one number and one alphabetic character.\" | cut -b 13-68) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumLetters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"Contain at least one number and one alphabetic character\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to set that passwords must contain at least one letter:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies \"requiresAlpha=<value\u22651>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresAlpha=1\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is requireAlphanumeric\nThe key must be set to <true/>\n\nNote: This profile sets a requirement of both an alphabetical and a numeric character.\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596677,
    "view_level": "5.2.4",
    "title": "Ensure Complex Password Must Contain Numeric Character Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596677,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596677",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\nEnsure that a number or numeric value is part of the password policy on the computer.",
    "rationale_statement": "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.",
    "impact_statement": "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the passwords must contain at least 1 numeric character:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Requires Alphanumeric set to True\n\nTerminal Method:\nRun the following command to verify that passwords require at least one number:\n% pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"Contain at least one number and one alphabetic character.\" | cut -b 13-68) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumNumericCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"Contain at least one number and one alphabetic character\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to set passwords to require at least one number:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies \"requiresNumeric=<value\u22651>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresNumeric=2\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is requireAlphanumeric\nThe key must be set to <true/>\n\nNote: This profile sets a requirement of both an alphabetical and a numeric character.\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596680,
    "view_level": "5.2.5",
    "title": "Ensure Complex Password Must Contain Special Character Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596680,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596680",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that a special character is part of the password policy on the computer.",
    "rationale_statement": "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.",
    "impact_statement": "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the passwords must contain at least 1 special character:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Min Complex Length set to \u2265 1\n\nTerminal Method:\nRun the following command to verify that the password requires at least one special character:\n% pref1=$(/usr/bin/sudo  /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"policyAttributePassword matches '(.*[^a-zA-Z0-9].*){1,}'\" | cut -b 12-67) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumSymbols | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"policyAttributePassword matches '(.*[^a-zA-Z0-9].*){1,}'\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to set passwords to require at least one special character:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies \"requiresSymbol=<value\u22651>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresSymbol=1\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is minComplexChars\nThe key must be set to <integer><value\u22651></integer>\n\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596682,
    "view_level": "5.2.6",
    "title": "Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596682,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596682",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\nEnsure that both uppercase and lowercase letters are part of the password policy on the computer.",
    "rationale_statement": "The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.",
    "impact_statement": "Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that the password requires an upper and lower case letter:\n% pref=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumMixedCaseCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \"$pref\" != \"\" && pref -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to set passwords to require an upper and lower case letter:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresMixedCase=<value\u22651>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"requiresMixedCase=1\"",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.2 Use Unique Passwords (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596686,
    "view_level": "5.2.8",
    "title": "Ensure Password History Is Configured",
    "pivot_control_id": 404,
    "pivot_recommendation_id": 4596686,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596686",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Over time, passwords can be captured by third parties through mistakes, phishing attacks, third-party breaches, or merely brute-force attacks. To reduce the risk of exposure and to decrease the incentives of password reuse (passwords that are not forced to be changed periodically generally are not ever changed), users must reset passwords periodically. This control ensures that previous passwords are not reused immediately by keeping a history of previous password hashes. Ensure that password history checks are part of the password policy on the computer. This control checks whether a new password is different than the previous 15.\nThe latest NIST guidance based on exploit research referenced in this section details how one of the greatest risks is password exposure rather than password cracking. Passwords should be changed to a new unique value whenever a password might have been exposed to anyone other than the account holder. Attackers have maintained persistent control based on predictable password change patterns and substantially different patterns should be used in case of a leak.",
    "rationale_statement": "Old passwords should not be reused.",
    "impact_statement": "Required password changes will lead to some locked computers requiring admin assistance.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the password is not the same as at least the last 15 passwords:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Max History Kept set to \u2265 15\n\nTerminal Method:\nRun the following command to verify that the password is required to be different from at least the last 15 passwords:\n% pref=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 policyAttributePasswordHistoryDepth | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \"$pref\" != \"\" && pref -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to require that the password must be different from at least the last 15 passwords:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"usingHistory=<value\u226515>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"usingHistory=15\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is pinHistory\nThe key must be set to <integer><value\u226515></integer>\n\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.3 Disable Dormant Accounts (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596684,
    "view_level": "5.2.7",
    "title": "Ensure Password Age Is Configured",
    "pivot_control_id": 405,
    "pivot_recommendation_id": 4596684,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596684",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Over time, passwords can be captured by third parties through mistakes, phishing attacks, third-party breaches, or merely brute-force attacks. To reduce the risk of exposure and to decrease the incentives of password reuse (passwords that are not forced to be changed periodically generally are not ever changed), users should reset passwords periodically.\nThis control uses 365 days as the acceptable value. Some organizations may be more or less restrictive. This control mainly exists to mitigate against password reuse of the macOS account password in other realms that may be more prone to compromise. Attackers take advantage of exposed information to attack other accounts.",
    "rationale_statement": "Passwords should be changed periodically to reduce exposure.",
    "impact_statement": "Required password changes will lead to some locked computers requiring admin assistance.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the passwords expire after at most 365 days:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Max Age (days) set to \u2264 365\n\nTerminal Method:\nRun the following command to verify that the password expires after at most 365 days:\n% pref1=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 policyAttributeExpiresEveryNDays | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && pref2=$(/usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 policyAttributeDaysUntilExpiration | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \"$pref1\" != \"\" && pref1 -le 365 ]]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -le 365 ]]; then echo \"true\"; else echo \"false\"; fi\n\ntrue",
    "remediation_procedure": "Terminal Method:\nRun the following command to require that passwords expire after at most 365 days:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxMinutesUntilChangePassword=<value\u2264525600>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxMinutesUntilChangePassword=43200\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is maxPINAgeInDays\nThe key must be set to <integer><value\u2265365></integer>\n\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596639,
    "view_level": "2.3.3.3",
    "title": "Ensure File Sharing Is Disabled",
    "pivot_control_id": 406,
    "pivot_recommendation_id": 4596639,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596639",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "File sharing from a user workstation creates additional risks, such as:\n\nOpen ports are created that can be probed and attacked\nPasswords are attached to user accounts for access that may be exposed and endanger other parts of the organizational environment, including directory accounts\nIncreased complexity makes security more difficult and may expose additional attack vectors\n\nApple's File Sharing uses the Server Message Block (SMB) protocol to share to other computers that can mount SMB shares. This includes other macOS computers.\nApple warns that SMB sharing stored passwords is less secure, and anyone with system access can gain access to the password for that account. When sharing with SMB, each user accessing the Mac must have SMB enabled. Storing passwords, especially copies of valid directory passwords, decreases security for the directory account and should not be used.",
    "rationale_statement": "By disabling File Sharing, the remote attack surface and risk of unauthorized access to files stored on the system is reduced.",
    "impact_statement": "File Sharing can be used to share documents with other users, but hardened servers should be used rather than user endpoints. Turning on File Sharing increases the visibility and attack surface of a system unnecessarily.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that File Sharing is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that File Sharing is not enabled\n\nTerminal Method:\nRun the following command to verify that File Sharing is not enabled:\n% /usr/bin/sudo /bin/launchctl list | grep -c \"com.apple.smbd\"\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable File Sharing:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet File Sharing to disabled\n\nTerminal Method:\nRun the following command to disable File Sharing:\n% /usr/bin/sudo /bin/launchctl disable system/com.apple.smbd\n\n% /usr/bin/sudo /bin/launchctl bootout system/com.apple.smbd",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts (Version 8)",
    "section_id": 2841860,
    "recommendation_id": 4596645,
    "view_level": "2.3.3.6",
    "title": "Ensure Remote Management Is Disabled",
    "pivot_control_id": 406,
    "pivot_recommendation_id": 4596645,
    "url": "https://workbench.cisecurity.org/sections/2841860/recommendations/4596645",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Remote Management is the client portion of Apple Remote Desktop (ARD). Remote Management can be used by remote administrators to view the current screen, install software, report on, and generally manage client Macs.\nThe screen sharing options in Remote Management are identical to those in the Screen Sharing section. In fact, only one of the two can be configured. If Remote Management is used, refer to the Screen Sharing section above on issues regarding screen sharing.\nRemote Management should only be enabled when a Directory is in place to manage the accounts with access. Computers will be available on port 5900 on a macOS System and could accept connections from untrusted hosts depending on the configuration, which is a major concern for mobile systems. As with other sharing options, an open port even for authorized management functions can be attacked, and both unauthorized access and Denial-of-Service vulnerabilities could be exploited. If remote management is required, the pf firewall should restrict access only to known, trusted management consoles. Remote management should not be used across the Internet without the use of a VPN tunnel.",
    "rationale_statement": "Remote Management should only be enabled on trusted networks with strong user controls present in a Directory system. Mobile devices without strict controls are vulnerable to exploitation and monitoring.",
    "impact_statement": "Many organizations utilize ARD for client management.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that Remote Management is not enabled:\n\nOpen System Settings\nSelect General\nSelect Sharing\nVerify that Remote Management is not enabled\n\nTerminal Method:\nRun the following command to verify that Remote Management is not enabled:\n% /usr/bin/sudo /bin/ps -ef | /usr/bin/grep -e ARDAgent\n\n0  9233  8630   0  3:32pm ttys001    0:00.00 grep -e ARDAgent",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable Remote Management:\n\nOpen System Settings\nSelect General\nSelect Sharing\nSet Remote Management to disabled\n\nTerminal Method:\nRun the following command to disable Remote Management:\n% /usr/bin/sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -stop\n\nStarting...\nRemoved preference to start ARD after reboot.\nDone.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.4 Restrict Administrator Privileges to Dedicated Administrator Accounts (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596699,
    "view_level": "5.6",
    "title": "Ensure the \"root\" Account Is Disabled",
    "pivot_control_id": 406,
    "pivot_recommendation_id": 4596699,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596699",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The root account is a superuser account that has access privileges to perform any actions and read/write to any file on the computer. With some versions of Linux, the system administrator may commonly use the root account to perform administrative functions.",
    "rationale_statement": "Enabling and using the root account puts the system at risk since any successful exploit or mistake while the root account is in use could have unlimited access privileges within the system. Using the sudo command allows users to perform functions as a root user while limiting and password protecting the access privileges. By default the root account is not enabled on a macOS computer. An administrator can escalate privileges using the sudo command (use -s or -i to get a root shell).",
    "impact_statement": "Some legacy POSIX software might expect an available root account.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the root user is not enabled:\n\nOpen /System/Library/CoreServices/Applications/Directory Utility\nClick the lock icon to unlock the service\nClick Edit in the menu bar\nVerify that the menu shows Enable Root User, not Disable Root User\n\nTerminal Method:\nRun the following command to verify the the root user has not been enabled:\n% /usr/bin/sudo /usr/bin/dscl . -read /Users/root AuthenticationAuthority\n\n\nNo such key: AuthenticationAuthority  \n\nRun the following command to verify the root shell is disabled:\n%  /usr/bin/dscl . -read /Users/root UserShell 2>&1 | /usr/bin/grep -c \"/usr/bin/false\"\n\n1",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to ensure that the root user is disabled:\n\nOpen /System/Library/CoreServices/Applications/Directory Utility\nClick the lock icon to unlock the service\nClick Edit in the menu bar\nClick Disable Root User\n\nTerminal Method:\nRun the following command to disable the root user:\n% /usr/bin/sudo /usr/sbin/dsenableroot -d\n\nusername = root\nuser password:\n\nRun the following command to disable the root user shell:\n% /usr/bin/dscl . -create /Users/root UserShell /usr/bin/false",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 5.6 Centralize Account Management (Version 8)",
    "section_id": 2841885,
    "recommendation_id": 4596728,
    "view_level": "2.13.1",
    "title": "Audit Passwords System Preference Setting",
    "pivot_control_id": 408,
    "pivot_recommendation_id": 4596728,
    "url": "https://workbench.cisecurity.org/sections/2841885/recommendations/4596728",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple has provided a new interface in macOS Monterey for managing passwords that mirrors the interfaced capability already available in iOS. Password management in macOS was previously available in both Safari Preferences and in Keychain Access. Apple is attempting to simplify password management for macOS and make the user experience more similar to iOS. Organizations are justifiably concerned about the risk of password managers, particularly as a possible backdoor to improved credential management regimes and greater use of Multi-Factor-Authentication (MFA).\nApple has information posted on this system preference with additional information.\nChange Passwords preferences on Mac\nA warning icon is shown next to a website for any of the following reasons:\n\nEasily guessed\nAppeared in a data leak\nReused on another website",
    "rationale_statement": "Organizations should remove what passwords can be saved on user computers, thus limiting the ability of attackers to potentially steal organizational credentials. Limits on password storage must be evaluated based on both user risk and Enterprise risk.",
    "impact_statement": "Organizations using passwords are constantly reported as having their password databases leaked to the Internet so every password a user has should be unique. Locking down secure password management solutions so that they cannot be used pushes users to password reuse, sticky notes, or always open text files with long lists of credentials.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to audit the Password system settings:\n\nOpen System Settings\nSelect Passwords\nEnter the user's password\nSelect Security Recommendations\nVerify that any recommendations or compromised passwords are set to match your organization's settings\nReview applications with stored passwords to ensure that Enterprise managed passwords are not stored inappropriately. Application interfaces may need to be considered as well, as they allow the opportunity to store passwords that should not be saved.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Password system settings to your organization's settings:\n\nOpen System Settings\nSelect Passwords\nEnter the user's password\nSelect the Security Recommendations\nRemove stored passwords that should not be saved.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 6.2 Establish an Access Revoking Process (Version 8)",
    "section_id": 2841884,
    "recommendation_id": 4596725,
    "view_level": "2.12.1",
    "title": "Ensure Guest Account Is Disabled",
    "pivot_control_id": 411,
    "pivot_recommendation_id": 4596725,
    "url": "https://workbench.cisecurity.org/sections/2841884/recommendations/4596725",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The guest account allows users access to the system without having to create an account or password. Guest users are unable to make setting changes and cannot remotely login to the system. All files, caches, and passwords created by the guest user are deleted upon logging out.",
    "rationale_statement": "Disabling the guest account mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system.",
    "impact_statement": "A guest user can use that access to find out additional information about the system and might be able to use privilege escalation vulnerabilities to establish greater access.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the guest account is not available:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nVerify that Allow guests to log in to this computer is disabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disable Guest Account set to True\nVerify that an installed profile has Enable Guest Account set to False\n\nTerminal Method:\nRun the following command to verify if the guest account is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('DisableGuestAccount'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('EnableGuestAccount'))\n  let pref3 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n  .objectForKey('GuestEnabled'))\n  if (( pref1 == 1 && pref2 == 0 ) || ( pref3 == 0 )) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable guest account availability:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nSet Allow guests to log in to this computer to disabled\n\nTerminal Method:\nRun the following command to disable the guest account:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is DisableGuestAccount\nThe key must be set to <true/>\nThe key to include is EnableGuestAccount\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 6.2 Establish an Access Revoking Process (Version 8)",
    "section_id": 2841868,
    "recommendation_id": 4596672,
    "view_level": "5.2.1",
    "title": "Ensure Password Account Lockout Threshold Is Configured",
    "pivot_control_id": 411,
    "pivot_recommendation_id": 4596672,
    "url": "https://workbench.cisecurity.org/sections/2841868/recommendations/4596672",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The account lockout threshold specifies the amount of times a user can enter an incorrect password before a lockout will occur.\nEnsure that a lockout threshold is part of the password policy on the computer.",
    "rationale_statement": "The account lockout feature mitigates brute-force password attacks on the system.",
    "impact_statement": "The number of incorrect log on attempts should be reasonably small to minimize the possibility of a successful password attack, while allowing for honest errors made during a normal user log on.\nThe locked account will auto-unlock after a few minutes when bad password attempts stop. The computer will accept the still-valid password if remembered or recovered.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the Password Account Threshold is set to less than or equal to 5 and the lockout time is greater than or equal to 15:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Max Failed Attempts set to \u2264 5\n\nTerminal Method:\nRun the following command to verify that the number of failed attempts is less than or equal to 5:\n% /usr/bin/sudo /usr/bin/pwpolicy -getaccountpolicies 2> /dev/null | /usr/bin/tail +2 | /usr/bin/xmllint --xpath '//dict/key[text()=\"policyAttributeMaximumFailedAuthentications\"]/following-sibling::integer[1]/text()' -\n\nThe output should be \u2264 5",
    "remediation_procedure": "Terminal Method:\nRun the following command to set the maximum number of failed login attempts to less than or equal to 5:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxFailedLoginAttempts=<value\u22645>\"\n\nexample:\n% /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy \"maxFailedLoginAttempts=5\"\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\nThe key to include is maxFailedAttempts\nThe key must be set to <integer><value\u22645></integer>\n\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.\nNote: This is for the login password only and does not affect the timeout of FileVault.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 6.7 Centralize Access Control (Version 8)",
    "section_id": 2841858,
    "recommendation_id": 4596626,
    "view_level": "2.3.1.1",
    "title": "Ensure AirDrop Is Disabled When Not Actively Transferring Files",
    "pivot_control_id": 416,
    "pivot_recommendation_id": 4596626,
    "url": "https://workbench.cisecurity.org/sections/2841858/recommendations/4596626",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "AirDrop is Apple's built-in, on-demand, ad hoc file exchange system that is compatible with both macOS and iOS. It uses Bluetooth LE for discovery that limits connectivity to Mac or iOS users that are in close proximity. Depending on the setting, it allows everyone or only Contacts to share files when they are near each other.\nIn many ways, this technology is far superior to the alternatives. The file transfer is done over a TLS encrypted session, does not require any open ports that are required for file sharing, does not leave file copies on email servers or within cloud storage, and allows for the service to be mitigated so that only people already trusted and added to contacts can interact with you.\nWhile there are positives to AirDrop, there are privacy concerns that could expose personal information. For that reason, AirDrop should be disabled, and should only be enabled when needed and disabled afterwards. The recommendation against enabling the sharing is not based on any known lack of security in the protocol, but for specific user operational concerns.\n\nIf AirDrop is enabled, the Mac is advertising that a Mac is addressable on the local network and open to either unwanted AirDrop upload requests or for a negotiation on whether the remote user is in the user's contacts list. Neither process is desirable.\nIn most known use cases, AirDrop use qualifies as ad hoc networking when it involves Apple device users deciding to exchange a file using the service. AirDrop can thus be enabled on the fly for that exchange.\n\nFor organizations concerned about any use of AirDrop because of Digital Loss Prevention (DLP) monitoring on other protocols, JAMF has an article on reviewing AirDrop logs.\nDetecting outbound AirDrop transfers and logging them",
    "rationale_statement": "AirDrop can allow malicious files to be downloaded from unknown sources. Contacts Only limits may expose personal information to devices in the same area.",
    "impact_statement": "Disabling AirDrop can limit the ability to move files quickly over the network without using file shares.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that AirDrop is disabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Allow AirDrop set to False\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disabled AirDrop:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowAirDrop').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowAirDrop\nThe key must be set to <false/>\n\nNote: AirDrop can only be enabled or disabled through configuration profiles. If your organization wants to use AirDrop, it would need to be set through Terminal or the GUI. Please see the Additional Information for assistance with those options, but those system will not technically be in compliance.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 6.8 Define and Maintain Role-Based Access Control (Version 8)",
    "section_id": 2841884,
    "recommendation_id": 4596725,
    "view_level": "2.12.1",
    "title": "Ensure Guest Account Is Disabled",
    "pivot_control_id": 417,
    "pivot_recommendation_id": 4596725,
    "url": "https://workbench.cisecurity.org/sections/2841884/recommendations/4596725",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The guest account allows users access to the system without having to create an account or password. Guest users are unable to make setting changes and cannot remotely login to the system. All files, caches, and passwords created by the guest user are deleted upon logging out.",
    "rationale_statement": "Disabling the guest account mitigates the risk of an untrusted user doing basic reconnaissance and possibly using privilege escalation attacks to take control of the system.",
    "impact_statement": "A guest user can use that access to find out additional information about the system and might be able to use privilege escalation vulnerabilities to establish greater access.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the guest account is not available:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nVerify that Allow guests to log in to this computer is disabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disable Guest Account set to True\nVerify that an installed profile has Enable Guest Account set to False\n\nTerminal Method:\nRun the following command to verify if the guest account is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('DisableGuestAccount'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.MCX')\\\n  .objectForKey('EnableGuestAccount'))\n  let pref3 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\\\n  .objectForKey('GuestEnabled'))\n  if (( pref1 == 1 && pref2 == 0 ) || ( pref3 == 0 )) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to disable guest account availability:\n\nOpen System Settings\nSelect Users & Groups\nSelect the i next to the Guest User\nSet Allow guests to log in to this computer to disabled\n\nTerminal Method:\nRun the following command to disable the guest account:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.loginwindow GuestEnabled -bool false\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX\nThe key to include is DisableGuestAccount\nThe key must be set to <true/>\nThe key to include is EnableGuestAccount\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596624,
    "view_level": "1.1",
    "title": "Ensure All Apple-provided Software Is Current",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596624,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596624",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Software vendors release security patches and software updates for their products when security vulnerabilities are discovered. There is no simple way to complete this action without a network connection to an Apple software repository. Please ensure appropriate access for this control. This check is only for what Apple provides through software update.\nSoftware updates should be run at minimum every 30 days. Run the following command to verify when software update was previously run:\n$ /usr/bin/sudo defaults read /Library/Preferences/com.apple.SoftwareUpdate | grep -e LastFullSuccessfulDate.\nThe response should be in the last 30 days (Example): LastFullSuccessfulDate = \"2020-07-30 12:45:25 +0000\";",
    "rationale_statement": "It is important that these updates be applied in a timely manner to prevent unauthorized persons from exploiting the identified vulnerabilities.",
    "impact_statement": "Installation of updates can be disruptive to the users especially if a restart is required. Major updates need to be applied after creating an organizational patch policy. It is also advised to run updates and forced restarts during system downtime and not while in active use.",
    "audit_procedure": "Graphical Method:\nPerform the following to ensure there are no available software updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect Show Updates to verify that there are no software updates available\n\nTerminal Method:\nRun the following command to verify there are no software updates:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l\n\nSoftware Update Tool\n\nFinding available software\nNo new software available. \n\nNote: If you are running a previous version of macOS, the output will say that the current version is available. As long as the system is on the current point release of macOS, it is compliant. It is recommended that your organization moves to the current version of macOS once a .1 version is released. Be aware that old macOS versions will stop receiving any updates.\nNote: Computers that have installed pre-release software in the past will fail this check if there are pre-release software updates available when audited.",
    "remediation_procedure": "Graphical Method:\nPerform the following to install all available software updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect Update All\n\nTerminal Method:\nRun the following command to verify what packages need to be installed:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l \n\nThe output will include the following:\nSoftware Update found the following new or updated software:\nRun the following command to install all the packages that need to be updated:\nTo install all updates run the command:\n% /usr/bin/sudo /usr/sbin/softwareupdate -i -a\n\nOr run the following command to install individual packages:\n% /usr/bin/sudo /usr/sbin/softwareupdate -i '<package name>'\n\nNote: If one of the software updates listed includes Action: restart, then you must attach the -R flag to force a system restart. If the system update is complete but no restart occurs, then the system is in an unknown state that requires a future restart. It is advised to run updates and forced restarts during system downtime and not while in active use.\nexample:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l \n\nSoftware Update Tool\n\nFinding available software\nSoftware Update found the following new or updated software:\n* Label: ProVideoFormats-2.2.7\n\tTitle: Pro Video Formats, Version: 2.2.7, Size: 9693KiB, Recommended: YES, \n* Label: Command Line Tools for Xcode-15.0\n\tTitle: Command Line Tools for Xcode, Version: 15.0, Size: 721962KiB, Recommended: YES, \n\n% /usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7'\n\nSoftware Update Tool\n\nFinding available software\nAttempting to quit apps: (\n    \"com.apple.Compressor\"\n)\nWaiting for user to quit any relevant apps\nSuccessfully quit all apps\n\nDownloaded Pro Video Formats\nInstalling Pro Video Formats\nDone with Pro Video Formats\nDone.\n\nIn the above example, if a restart was required, the command to remediate would be /usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7' -R",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596627,
    "view_level": "1.2",
    "title": "Ensure Auto Update Is Enabled",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596627,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596627",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Auto Update verifies that your system has the newest security patches and software updates. If \"Automatically check for updates\" is not selected, background updates for new malware definition files from Apple for XProtect and Gatekeeper will not occur.",
    "rationale_statement": "It is important that a system has the newest updates applied so as to prevent unauthorized persons from exploiting identified vulnerabilities.",
    "impact_statement": "Without automatic update, updates may not be made in a timely manner and the system will be exposed to additional risk.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the system is automatically checking for updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Check for updates is enabled\n\nTerminal Method:\nRun the following command to verify that software updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticCheckEnabled').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable the system to automatically check for updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Check for updates to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to enable auto update:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true  \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticCheckEnabled\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596629,
    "view_level": "1.3",
    "title": "Ensure Download New Updates When Available Is Enabled",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596629,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596629",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In the GUI, both \"Install macOS updates\" and \"Install app updates from the App Store\" are dependent on whether \"Download new updates when available\" is selected.",
    "rationale_statement": "It is important that a system has the newest updates downloaded so that they can be applied.",
    "impact_statement": "If \"Download new updates when available\" is not selected, updates may not be made in a timely manner and the system will be exposed to additional risk.",
    "audit_procedure": "Perform the following to ensure the system is automatically checking for updates:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Download new updates when available is enabled\n\nTerminal Method:\nRun the following command to verify that software updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticDownload').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Perform the following to enable the system to automatically check for updates:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Download new updates when available to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to enable auto update:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool true  \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticDownload\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596630,
    "view_level": "1.4",
    "title": "Ensure Install of macOS Updates Is Enabled",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596630,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596630",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that macOS updates are installed after they are available from Apple. This setting enables macOS updates to be automatically installed. Some environments will want to approve and test updates before they are delivered. It is best practice to test first where updates can and have caused disruptions to operations. Automatic updates should be turned off where changes are tightly controlled and there are mature testing and approval processes. Automatic updates should not be turned off simply to allow the administrator to contact users in order to verify installation. A dependable, repeatable process involving a patch agent or remote management tool should be in place before auto-updates are turned off.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following to ensure that macOS updates are set to auto update:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install macOS updates is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Automatically Install macOS Updates set to True\n\nTerminal Method:\nRun the following command to verify that macOS updates are automatically checked and installed:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticallyInstallMacOSUpdates').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable macOS updates to run automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install macOS updates to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to to enable automatic checking and installing of macOS updates:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticallyInstallMacOSUpdates -bool TRUE\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticallyInstallMacOSUpdates\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596632,
    "view_level": "1.5",
    "title": "Ensure Install Application Updates from the App Store Is Enabled",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596632,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596632",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that application updates are installed after they are available from Apple. These updates do not require reboots or administrator privileges for end users.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that App Store updates install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install application updates from the App Store is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Automatically Install App Updates set to True\n\nTerminal Method:\nRun the following command to verify that App Store updates are auto updating:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.commerce')\\\n  .objectForKey('AutoUpdate'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('AutomaticallyInstallAppUpdates'))\n  if ( pref1 == 1 || pref2 == 1 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable App Store updates to install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install application updates from the App Store to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to turn on App Store auto updating:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE\n\nNote: This remediation requires a log out and log in to show in the GUI.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticallyInstallAppUpdates\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596634,
    "view_level": "1.6",
    "title": "Ensure Install Security Responses and System Files Is Enabled",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596634,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596634",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that system and security updates are installed after they are available from Apple. This setting enables definition updates for XProtect and Gatekeeper. With this setting in place, new malware and adware that Apple has added to the list of malware or untrusted software will not execute. These updates do not require reboots or end user admin rights.\nApple has introduced a security feature that allows for smaller downloads and the installation of security updates when a reboot is not required. This feature is only available when the last regular update has already been applied. This feature emphasizes that a Mac must be up-to-date on patches so that Apple's security tools can be used to quickly patch when a rapid response is necessary.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that system data files and security updates install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install Security Responses and System files is enabled\n\nTerminal Method:\nRun the following commands to verify that system data files and security updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('ConfigDataInstall'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('CriticalUpdateInstall'))\n  if ( pref1 == 1 && pref2 == 1 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable system data files and security updates to install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install Security Responses and System files to enabled\nSelect Done\n\nTerminal Method:\nRun the following commands to enable automatic checking of system data files and security updates:\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true \n\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is ConfigDataInstall\nThe key must be set to <true/>\nThe key to also include is CriticalUpdateInstall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.3 Perform Automated Operating System Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596636,
    "view_level": "1.7",
    "title": "Ensure Software Update Deferment Is Less Than or Equal to 30 Days",
    "pivot_control_id": 421,
    "pivot_recommendation_id": 4596636,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596636",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides the capability to manage software updates on Apple devices through mobile device management. Part of those capabilities permit organizations to defer software updates and allow for testing. Many organizations have specialized software and configurations that may be negatively impacted by Apple updates. If software updates are deferred, they should not be deferred for more than 30 days. This control only verifies that deferred software updates are not deferred for more than 30 days.",
    "rationale_statement": "Apple software updates almost always include security updates. Attackers evaluate updates to create exploit code in order to attack unpatched systems. The longer a system remains unpatched, the greater an exploit possibility exists in which there are publicly reported vulnerabilities.",
    "impact_statement": "Some organizations may need more than 30 days to evaluate the impact of software updates.",
    "audit_procedure": "Perform the following to ensure that software updates are deferred at most 30 days:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that Deferred Software Update Delays (Days) is set to \u2264 30\n\nTerminal Method:\nRun the following command to verify that a profile is installed that defers software updates to at most 30 days:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('enforcedSoftwareUpdateDelay').js\nEOS\n\nIf there is an output, it should be \u2264 30.\nNote: If your organization does not use a software deferment mobile configuration, there will be no output and will pass the audit.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is enforcedSoftwareUpdateDelay\nThe key must be set to <integer><1-30></integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596624,
    "view_level": "1.1",
    "title": "Ensure All Apple-provided Software Is Current",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596624,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596624",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Software vendors release security patches and software updates for their products when security vulnerabilities are discovered. There is no simple way to complete this action without a network connection to an Apple software repository. Please ensure appropriate access for this control. This check is only for what Apple provides through software update.\nSoftware updates should be run at minimum every 30 days. Run the following command to verify when software update was previously run:\n$ /usr/bin/sudo defaults read /Library/Preferences/com.apple.SoftwareUpdate | grep -e LastFullSuccessfulDate.\nThe response should be in the last 30 days (Example): LastFullSuccessfulDate = \"2020-07-30 12:45:25 +0000\";",
    "rationale_statement": "It is important that these updates be applied in a timely manner to prevent unauthorized persons from exploiting the identified vulnerabilities.",
    "impact_statement": "Installation of updates can be disruptive to the users especially if a restart is required. Major updates need to be applied after creating an organizational patch policy. It is also advised to run updates and forced restarts during system downtime and not while in active use.",
    "audit_procedure": "Graphical Method:\nPerform the following to ensure there are no available software updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect Show Updates to verify that there are no software updates available\n\nTerminal Method:\nRun the following command to verify there are no software updates:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l\n\nSoftware Update Tool\n\nFinding available software\nNo new software available. \n\nNote: If you are running a previous version of macOS, the output will say that the current version is available. As long as the system is on the current point release of macOS, it is compliant. It is recommended that your organization moves to the current version of macOS once a .1 version is released. Be aware that old macOS versions will stop receiving any updates.\nNote: Computers that have installed pre-release software in the past will fail this check if there are pre-release software updates available when audited.",
    "remediation_procedure": "Graphical Method:\nPerform the following to install all available software updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect Update All\n\nTerminal Method:\nRun the following command to verify what packages need to be installed:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l \n\nThe output will include the following:\nSoftware Update found the following new or updated software:\nRun the following command to install all the packages that need to be updated:\nTo install all updates run the command:\n% /usr/bin/sudo /usr/sbin/softwareupdate -i -a\n\nOr run the following command to install individual packages:\n% /usr/bin/sudo /usr/sbin/softwareupdate -i '<package name>'\n\nNote: If one of the software updates listed includes Action: restart, then you must attach the -R flag to force a system restart. If the system update is complete but no restart occurs, then the system is in an unknown state that requires a future restart. It is advised to run updates and forced restarts during system downtime and not while in active use.\nexample:\n% /usr/bin/sudo /usr/sbin/softwareupdate -l \n\nSoftware Update Tool\n\nFinding available software\nSoftware Update found the following new or updated software:\n* Label: ProVideoFormats-2.2.7\n\tTitle: Pro Video Formats, Version: 2.2.7, Size: 9693KiB, Recommended: YES, \n* Label: Command Line Tools for Xcode-15.0\n\tTitle: Command Line Tools for Xcode, Version: 15.0, Size: 721962KiB, Recommended: YES, \n\n% /usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7'\n\nSoftware Update Tool\n\nFinding available software\nAttempting to quit apps: (\n    \"com.apple.Compressor\"\n)\nWaiting for user to quit any relevant apps\nSuccessfully quit all apps\n\nDownloaded Pro Video Formats\nInstalling Pro Video Formats\nDone with Pro Video Formats\nDone.\n\nIn the above example, if a restart was required, the command to remediate would be /usr/bin/sudo /usr/sbin/softwareupdate -i 'ProVideoFormats-2.2.7' -R",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596627,
    "view_level": "1.2",
    "title": "Ensure Auto Update Is Enabled",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596627,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596627",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Auto Update verifies that your system has the newest security patches and software updates. If \"Automatically check for updates\" is not selected, background updates for new malware definition files from Apple for XProtect and Gatekeeper will not occur.",
    "rationale_statement": "It is important that a system has the newest updates applied so as to prevent unauthorized persons from exploiting identified vulnerabilities.",
    "impact_statement": "Without automatic update, updates may not be made in a timely manner and the system will be exposed to additional risk.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the system is automatically checking for updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Check for updates is enabled\n\nTerminal Method:\nRun the following command to verify that software updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticCheckEnabled').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable the system to automatically check for updates:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Check for updates to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to enable auto update:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true  \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticCheckEnabled\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596629,
    "view_level": "1.3",
    "title": "Ensure Download New Updates When Available Is Enabled",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596629,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596629",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In the GUI, both \"Install macOS updates\" and \"Install app updates from the App Store\" are dependent on whether \"Download new updates when available\" is selected.",
    "rationale_statement": "It is important that a system has the newest updates downloaded so that they can be applied.",
    "impact_statement": "If \"Download new updates when available\" is not selected, updates may not be made in a timely manner and the system will be exposed to additional risk.",
    "audit_procedure": "Perform the following to ensure the system is automatically checking for updates:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Download new updates when available is enabled\n\nTerminal Method:\nRun the following command to verify that software updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticDownload').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Perform the following to enable the system to automatically check for updates:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Download new updates when available to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to enable auto update:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool true  \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticDownload\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596630,
    "view_level": "1.4",
    "title": "Ensure Install of macOS Updates Is Enabled",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596630,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596630",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that macOS updates are installed after they are available from Apple. This setting enables macOS updates to be automatically installed. Some environments will want to approve and test updates before they are delivered. It is best practice to test first where updates can and have caused disruptions to operations. Automatic updates should be turned off where changes are tightly controlled and there are mature testing and approval processes. Automatic updates should not be turned off simply to allow the administrator to contact users in order to verify installation. A dependable, repeatable process involving a patch agent or remote management tool should be in place before auto-updates are turned off.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following to ensure that macOS updates are set to auto update:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install macOS updates is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Automatically Install macOS Updates set to True\n\nTerminal Method:\nRun the following command to verify that macOS updates are automatically checked and installed:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n.objectForKey('AutomaticallyInstallMacOSUpdates').js\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable macOS updates to run automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install macOS updates to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to to enable automatic checking and installing of macOS updates:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticallyInstallMacOSUpdates -bool TRUE\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticallyInstallMacOSUpdates\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596632,
    "view_level": "1.5",
    "title": "Ensure Install Application Updates from the App Store Is Enabled",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596632,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596632",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that application updates are installed after they are available from Apple. These updates do not require reboots or administrator privileges for end users.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that App Store updates install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install application updates from the App Store is enabled\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Automatically Install App Updates set to True\n\nTerminal Method:\nRun the following command to verify that App Store updates are auto updating:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.commerce')\\\n  .objectForKey('AutoUpdate'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('AutomaticallyInstallAppUpdates'))\n  if ( pref1 == 1 || pref2 == 1 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable App Store updates to install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install application updates from the App Store to enabled\nSelect Done\n\nTerminal Method:\nRun the following command to turn on App Store auto updating:\n% /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.commerce AutoUpdate -bool TRUE\n\nNote: This remediation requires a log out and log in to show in the GUI.\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is AutomaticallyInstallAppUpdates\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596634,
    "view_level": "1.6",
    "title": "Ensure Install Security Responses and System Files Is Enabled",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596634,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596634",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that system and security updates are installed after they are available from Apple. This setting enables definition updates for XProtect and Gatekeeper. With this setting in place, new malware and adware that Apple has added to the list of malware or untrusted software will not execute. These updates do not require reboots or end user admin rights.\nApple has introduced a security feature that allows for smaller downloads and the installation of security updates when a reboot is not required. This feature is only available when the last regular update has already been applied. This feature emphasizes that a Mac must be up-to-date on patches so that Apple's security tools can be used to quickly patch when a rapid response is necessary.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that system data files and security updates install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install Security Responses and System files is enabled\n\nTerminal Method:\nRun the following commands to verify that system data files and security updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('ConfigDataInstall'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('CriticalUpdateInstall'))\n  if ( pref1 == 1 && pref2 == 1 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable system data files and security updates to install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install Security Responses and System files to enabled\nSelect Done\n\nTerminal Method:\nRun the following commands to enable automatic checking of system data files and security updates:\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true \n\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is ConfigDataInstall\nThe key must be set to <true/>\nThe key to also include is CriticalUpdateInstall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.4 Perform Automated Application Patch Management (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596636,
    "view_level": "1.7",
    "title": "Ensure Software Update Deferment Is Less Than or Equal to 30 Days",
    "pivot_control_id": 422,
    "pivot_recommendation_id": 4596636,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596636",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides the capability to manage software updates on Apple devices through mobile device management. Part of those capabilities permit organizations to defer software updates and allow for testing. Many organizations have specialized software and configurations that may be negatively impacted by Apple updates. If software updates are deferred, they should not be deferred for more than 30 days. This control only verifies that deferred software updates are not deferred for more than 30 days.",
    "rationale_statement": "Apple software updates almost always include security updates. Attackers evaluate updates to create exploit code in order to attack unpatched systems. The longer a system remains unpatched, the greater an exploit possibility exists in which there are publicly reported vulnerabilities.",
    "impact_statement": "Some organizations may need more than 30 days to evaluate the impact of software updates.",
    "audit_procedure": "Perform the following to ensure that software updates are deferred at most 30 days:\nGraphical Method:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that Deferred Software Update Delays (Days) is set to \u2264 30\n\nTerminal Method:\nRun the following command to verify that a profile is installed that defers software updates to at most 30 days:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('enforcedSoftwareUpdateDelay').js\nEOS\n\nIf there is an output, it should be \u2264 30.\nNote: If your organization does not use a software deferment mobile configuration, there will be no output and will pass the audit.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is enforcedSoftwareUpdateDelay\nThe key must be set to <integer><1-30></integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 7.7 Remediate Detected Vulnerabilities (Version 8)",
    "section_id": 2841856,
    "recommendation_id": 4596634,
    "view_level": "1.6",
    "title": "Ensure Install Security Responses and System Files Is Enabled",
    "pivot_control_id": 425,
    "pivot_recommendation_id": 4596634,
    "url": "https://workbench.cisecurity.org/sections/2841856/recommendations/4596634",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Ensure that system and security updates are installed after they are available from Apple. This setting enables definition updates for XProtect and Gatekeeper. With this setting in place, new malware and adware that Apple has added to the list of malware or untrusted software will not execute. These updates do not require reboots or end user admin rights.\nApple has introduced a security feature that allows for smaller downloads and the installation of security updates when a reboot is not required. This feature is only available when the last regular update has already been applied. This feature emphasizes that a Mac must be up-to-date on patches so that Apple's security tools can be used to quickly patch when a rapid response is necessary.",
    "rationale_statement": "Patches need to be applied in a timely manner to reduce the risk of vulnerabilities being exploited.",
    "impact_statement": "Unpatched software may be exploited.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that system data files and security updates install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nVerify that Install Security Responses and System files is enabled\n\nTerminal Method:\nRun the following commands to verify that system data files and security updates are automatically checked:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('ConfigDataInstall'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.SoftwareUpdate')\\\n  .objectForKey('CriticalUpdateInstall'))\n  if ( pref1 == 1 && pref2 == 1 ) {\n    return(\"true\")\n  } else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\nNote: If automatic updates were selected during system setup, this setting may not have left an auditable artifact. Please turn off the check and re-enable when the GUI does not reflect the audited results.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable system data files and security updates to install automatically:\n\nOpen System Settings\nSelect General\nSelect Software Update\nSelect the i\nSet Install Security Responses and System files to enabled\nSelect Done\n\nTerminal Method:\nRun the following commands to enable automatic checking of system data files and security updates:\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate ConfigDataInstall -bool true \n\n% /usr/bin/sudo  /usr/bin/defaults write /Library/Preferences/com.apple.SoftwareUpdate CriticalUpdateInstall -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.SoftwareUpdate\nThe key to include is ConfigDataInstall\nThe key must be set to <true/>\nThe key to also include is CriticalUpdateInstall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.1 Establish and Maintain an Audit Log Management Process (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596644,
    "view_level": "3.3",
    "title": "Ensure install.log Is Retained for 365 or More Days and No Maximum Size",
    "pivot_control_id": 427,
    "pivot_recommendation_id": 4596644,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596644",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS writes information pertaining to system-related events to the file /var/log/install.log and has a configurable retention policy for this file. The default logging setting limits the file size of the logs and the maximum size for all logs. The default allows for an errant application to fill the log files and does not enforce sufficient log retention. The Benchmark recommends a value based on standard use cases. The value should align with local requirements within the organization.\nThe default value has an \"all_max\" file limitation, no reference to a minimum retention, and a less precise rotation argument.\nThe all_max flag control will remove old log entries based only on the size of the log files. Log size can vary widely depending on how verbose installing applications are in their log entries. The decision here is to ensure that logs go back a year, and depending on the applications a size restriction could compromise the ability to store a full year.\nWhile this Benchmark is not scoring for a rotation flag, the default rotation is sequential rather than using a timestamp. Auditors may prefer timestamps in order to simply review specific dates where event information is desired.\nPlease review the File Rotation section in the man page for more information.\nman asl.conf\n\n\nThe maximum file size limitation string should be removed \"all_max=\"\nAn organization-appropriate retention should be added \"ttl=\"\nThe rotation should be set with timestamps \"rotate=utc\" or \"rotate=local\"",
    "rationale_statement": "Archiving and retaining install.log for at least a year is beneficial in the event of an incident as it will allow the user to view the various changes to the system along with the date and time they occurred.",
    "impact_statement": "Without log files system maintenance and security, forensics cannot be properly performed.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that log files are retained for at least 365 days with no maximum size:\n% /usr/bin/sudo /usr/bin/grep -i ttl /etc/asl/com.apple.install  \n\nThe output must include ttl\u2265365\n% /usr/bin/sudo /usr/bin/grep -i all_max= /etc/asl/com.apple.install\n\nNo results should be returned.",
    "remediation_procedure": "Terminal Method:\nPerform the following to ensure that install logs are retained for at least 365 days:\nEdit the /etc/asl/com.apple.install file and add or modify the ttl value to 365 or greater on the file line. Also, remove the all_max= setting and value from the file line.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.1 Establish and Maintain an Audit Log Management Process (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596646,
    "view_level": "3.4",
    "title": "Ensure Security Auditing Retention Is Enabled",
    "pivot_control_id": 427,
    "pivot_recommendation_id": 4596646,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596646",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The macOS audit capability contains important information to investigate security or operational issues. This resource is only completely useful if it is retained long enough to allow technical staff to find the root cause of anomalies in the records.\nRetention can be set to respect both size and longevity. To retain as much as possible under a certain size, the recommendation is to use the following:\nexpire-after:60d OR 5G\nThis recommendation is based on minimum storage for review and investigation. When a third party tool is in use to allow remote logging or the store and forwarding of logs, this local storage requirement is not required.",
    "rationale_statement": "The audit records need to be retained long enough to be reviewed as necessary.",
    "impact_statement": "The recommendation is that at least 60 days or 5 gigabytes of audit records are retained. Systems that have very little remaining disk space may have issues retaining sufficient data.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify audit retention:\n% /usr/bin/sudo /usr/bin/grep -e \"^expire-after\" /etc/security/audit_control\n\nThe output value for expire-after: should be \u2265 60d OR 5G\nNote: If your organization is offloading your security logs, we recommend following the same guidance (at minimum) for your off-site log storage. Your local storage limit (or time frame) may fail if they are set to lower in this case, but are following the guidance.",
    "remediation_procedure": "Terminal Method:\nPerform the following to set the audit retention length:\nEdit the /etc/security/audit_control file so that expire-after: is at least 60d OR 5G",
    "default_value": "More info in the man page. To reference the man page use the command $ man audit_control"
  },
  {
    "control_title": "CIS Control: 8.2 Collect Audit Logs (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596640,
    "view_level": "3.1",
    "title": "Ensure Security Auditing Is Enabled",
    "pivot_control_id": 428,
    "pivot_recommendation_id": 4596640,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596640",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS's audit facility, auditd, receives notifications from the kernel when certain system calls, such as open, fork, and exit, are made. These notifications are captured and written to an audit log.\nApple has deprecated auditd as of macOS 11.0 Big Sur. In macOS 14.0 Sonoma it is no longer enabled by default and it is suggested to use an application that integrates with the EndpointSecurity API. These applications are third party and not built into the macOS. Until auditd is removed from macOS completely, running the binary is the best way to collect logging in macOS and the only one that is part of the OS.",
    "rationale_statement": "Logs generated by auditd may be useful when investigating a security incident as they may help reveal the vulnerable application and the actions taken by a malicious actor.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nPerform the following to verify that security auditing is enabled:\nRun the following command to verify auditd:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -i auditd \n\n-\t0\tcom.apple.auditd",
    "remediation_procedure": "Terminal Method:\nPerform the following to enable security auditing:\nRun the following command to load auditd and create the audit_control file:\n% /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.auditd.plist\n\n% /usr/bin/sudo /bin/cp /etc/security/audit_control.example /etc/security/audit_control",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.2 Collect Audit Logs (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596642,
    "view_level": "3.2",
    "title": "Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements",
    "pivot_control_id": 428,
    "pivot_recommendation_id": 4596642,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596642",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements.",
    "rationale_statement": "Maintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised.\nDepending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nRun the following command to verify the Security Auditing Flags that are enabled:\n% /usr/bin/sudo /usr/bin/grep -e \"^flags:\" /etc/security/audit_control\n\nThe output should include the following flags:\n\n-fm - audit failed file attribute modification events\nad - audit successful/failed administrative events\n-ex - audit failed program execution\naa - audit all authorization and authentication events\n-fr - audit all failed read actions where enforcement stops a read of a file\nlo - audit successful/failed login/logout events\n-fw - audit all failed write actions where enforcement stopped a file write\n\nThe -all flag will capture all failed events across all audit classes and can be used to supersede the individual flags for failed events.\nNote: Excluding potentially noisy audit events may be ideal, depending on your use-case.\nNote: Historical audit flags are listed below as preliminary guidance.",
    "remediation_procedure": "Terminal Method:\nPerform the following to set the required Security Auditing Flags:\nEdit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.3 Ensure Adequate Audit Log Storage (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596644,
    "view_level": "3.3",
    "title": "Ensure install.log Is Retained for 365 or More Days and No Maximum Size",
    "pivot_control_id": 429,
    "pivot_recommendation_id": 4596644,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596644",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS writes information pertaining to system-related events to the file /var/log/install.log and has a configurable retention policy for this file. The default logging setting limits the file size of the logs and the maximum size for all logs. The default allows for an errant application to fill the log files and does not enforce sufficient log retention. The Benchmark recommends a value based on standard use cases. The value should align with local requirements within the organization.\nThe default value has an \"all_max\" file limitation, no reference to a minimum retention, and a less precise rotation argument.\nThe all_max flag control will remove old log entries based only on the size of the log files. Log size can vary widely depending on how verbose installing applications are in their log entries. The decision here is to ensure that logs go back a year, and depending on the applications a size restriction could compromise the ability to store a full year.\nWhile this Benchmark is not scoring for a rotation flag, the default rotation is sequential rather than using a timestamp. Auditors may prefer timestamps in order to simply review specific dates where event information is desired.\nPlease review the File Rotation section in the man page for more information.\nman asl.conf\n\n\nThe maximum file size limitation string should be removed \"all_max=\"\nAn organization-appropriate retention should be added \"ttl=\"\nThe rotation should be set with timestamps \"rotate=utc\" or \"rotate=local\"",
    "rationale_statement": "Archiving and retaining install.log for at least a year is beneficial in the event of an incident as it will allow the user to view the various changes to the system along with the date and time they occurred.",
    "impact_statement": "Without log files system maintenance and security, forensics cannot be properly performed.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that log files are retained for at least 365 days with no maximum size:\n% /usr/bin/sudo /usr/bin/grep -i ttl /etc/asl/com.apple.install  \n\nThe output must include ttl\u2265365\n% /usr/bin/sudo /usr/bin/grep -i all_max= /etc/asl/com.apple.install\n\nNo results should be returned.",
    "remediation_procedure": "Terminal Method:\nPerform the following to ensure that install logs are retained for at least 365 days:\nEdit the /etc/asl/com.apple.install file and add or modify the ttl value to 365 or greater on the file line. Also, remove the all_max= setting and value from the file line.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.3 Ensure Adequate Audit Log Storage (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596646,
    "view_level": "3.4",
    "title": "Ensure Security Auditing Retention Is Enabled",
    "pivot_control_id": 429,
    "pivot_recommendation_id": 4596646,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596646",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The macOS audit capability contains important information to investigate security or operational issues. This resource is only completely useful if it is retained long enough to allow technical staff to find the root cause of anomalies in the records.\nRetention can be set to respect both size and longevity. To retain as much as possible under a certain size, the recommendation is to use the following:\nexpire-after:60d OR 5G\nThis recommendation is based on minimum storage for review and investigation. When a third party tool is in use to allow remote logging or the store and forwarding of logs, this local storage requirement is not required.",
    "rationale_statement": "The audit records need to be retained long enough to be reviewed as necessary.",
    "impact_statement": "The recommendation is that at least 60 days or 5 gigabytes of audit records are retained. Systems that have very little remaining disk space may have issues retaining sufficient data.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify audit retention:\n% /usr/bin/sudo /usr/bin/grep -e \"^expire-after\" /etc/security/audit_control\n\nThe output value for expire-after: should be \u2265 60d OR 5G\nNote: If your organization is offloading your security logs, we recommend following the same guidance (at minimum) for your off-site log storage. Your local storage limit (or time frame) may fail if they are set to lower in this case, but are following the guidance.",
    "remediation_procedure": "Terminal Method:\nPerform the following to set the audit retention length:\nEdit the /etc/security/audit_control file so that expire-after: is at least 60d OR 5G",
    "default_value": "More info in the man page. To reference the man page use the command $ man audit_control"
  },
  {
    "control_title": "CIS Control: 8.4 Standardize Time Synchronization (Version 8)",
    "section_id": 2841859,
    "recommendation_id": 4596631,
    "view_level": "2.3.2.1",
    "title": "Ensure Set Time and Date Automatically Is Enabled",
    "pivot_control_id": 430,
    "pivot_recommendation_id": 4596631,
    "url": "https://workbench.cisecurity.org/sections/2841859/recommendations/4596631",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Correct date and time settings are required for authentication protocols, file creation, modification dates, and log entries.\nNote: If your organization has internal time servers, enter them here. Enterprise mobile devices may need to use a mix of internal and external time servers. If multiple servers are required, use the Date & Time System Preference with each server separated by a space.\nAdditional Note: The default Apple time server is time.apple.com. Variations include time.euro.apple.com. While it is certainly more efficient to use internal time servers, there is no reason to block access to global Apple time servers or to add a time.apple.com alias to internal DNS records. There are no reports that Apple gathers any information from NTP synchronization, as the computers already phone home to Apple for Apple services including iCloud use and software updates. Best practice is to allow DNS resolution to an authoritative time service for time.apple.com, preferably to connect to Apple servers, but local servers are acceptable as well.",
    "rationale_statement": "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. This in turn can affect Apple's single sign-on feature, Active Directory logons, and other features.",
    "impact_statement": "The timed service will periodically synchronize with named time servers and will make the computer time more accurate.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that the system's date and time are set automatically:\n\nOpen System Settings\nSelect General\nSelect Date & Time\nVerify that Set time and date automatically is enabled\n\nTerminal Method:\nRun the following command to ensure that date and time are automatically set:\n% /usr/bin/sudo /usr/sbin/systemsetup -getusingnetworktime \n\nNetwork Time: On",
    "remediation_procedure": "Graphical Method:\nPerform the following to enable the date and time to be set automatically:\n\nOpen System Settings\nSelect General\nSelect Date & Time\nSet Set time and date automatically to enabled\n\nNote: By default, the operating system will use time.apple.com as the time server. You can change to any time server that meets your organization's requirements.\nTerminal Method:\nRun the following commands to enable the date and time setting automatically:\n% /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver <your.time.server>\n\nsetNetworkTimeServer: <your.time.server>\n\n% /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on\n\nsetUsingNetworkTime: On\n\nexample:\n% /usr/bin/sudo /usr/sbin/systemsetup -setnetworktimeserver time.apple.com\n\nsetNetworkTimeServer: time.apple.com\n\n% /usr/bin/sudo /usr/sbin/systemsetup -setusingnetworktime on\n\nsetUsingNetworkTime: On\n\nRun the following commands if you have not set, or need to set, a new time zone:\n% /usr/bin/sudo /usr/sbin/systemsetup -listtimezones\n\n% /usr/bin/sudo /usr/sbin/systemsetup -settimezone <selected time zone>\n\n\nexample:\n% /usr/bin/sudo /usr/sbin/systemsetup -listtimezones\n\nTime Zones:\n Africa/Abidjan\n Africa/Accra\n Africa/Addis_Ababa\n ...\n\n\n$ /usr/bin/sudo /usr/sbin/systemsetup -settimezone America/New_York\n\nSet TimeZone: America/New_York",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.4 Standardize Time Synchronization (Version 8)",
    "section_id": 2841859,
    "recommendation_id": 4596633,
    "view_level": "2.3.2.2",
    "title": "Ensure the Time Service Is Enabled",
    "pivot_control_id": 430,
    "pivot_recommendation_id": 4596633,
    "url": "https://workbench.cisecurity.org/sections/2841859/recommendations/4596633",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "In macOS 10.14, Apple replace ntp with timed for time services, and is used to ensure correct time is kept. Correct date and time settings are required for authentication protocols, file creation, modification dates and log entries.",
    "rationale_statement": "Kerberos may not operate correctly if the time on the Mac is off by more than 5 minutes. This in turn can affect Apple's single sign-on feature, Active Directory logons, and other features.",
    "impact_statement": "Accurate time is required for many computer functions.",
    "audit_procedure": "Terminal Method:\nRun the following command to ensure that the timed service is enabled:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -c com.apple.timed\n\n1",
    "remediation_procedure": "If the timed service has been disabled, assume that the operating system has been compromised. Back up any files, and do a clean install to a known good Operating System.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.5 Collect Detailed Audit Logs (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596640,
    "view_level": "3.1",
    "title": "Ensure Security Auditing Is Enabled",
    "pivot_control_id": 431,
    "pivot_recommendation_id": 4596640,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596640",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "macOS's audit facility, auditd, receives notifications from the kernel when certain system calls, such as open, fork, and exit, are made. These notifications are captured and written to an audit log.\nApple has deprecated auditd as of macOS 11.0 Big Sur. In macOS 14.0 Sonoma it is no longer enabled by default and it is suggested to use an application that integrates with the EndpointSecurity API. These applications are third party and not built into the macOS. Until auditd is removed from macOS completely, running the binary is the best way to collect logging in macOS and the only one that is part of the OS.",
    "rationale_statement": "Logs generated by auditd may be useful when investigating a security incident as they may help reveal the vulnerable application and the actions taken by a malicious actor.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nPerform the following to verify that security auditing is enabled:\nRun the following command to verify auditd:\n% /usr/bin/sudo /bin/launchctl list | /usr/bin/grep -i auditd \n\n-\t0\tcom.apple.auditd",
    "remediation_procedure": "Terminal Method:\nPerform the following to enable security auditing:\nRun the following command to load auditd and create the audit_control file:\n% /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.auditd.plist\n\n% /usr/bin/sudo /bin/cp /etc/security/audit_control.example /etc/security/audit_control",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 8.5 Collect Detailed Audit Logs (Version 8)",
    "section_id": 2841861,
    "recommendation_id": 4596642,
    "view_level": "3.2",
    "title": "Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements",
    "pivot_control_id": 431,
    "pivot_recommendation_id": 4596642,
    "url": "https://workbench.cisecurity.org/sections/2841861/recommendations/4596642",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements.",
    "rationale_statement": "Maintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised.\nDepending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected.",
    "impact_statement": "",
    "audit_procedure": "Terminal Method:\nRun the following command to verify the Security Auditing Flags that are enabled:\n% /usr/bin/sudo /usr/bin/grep -e \"^flags:\" /etc/security/audit_control\n\nThe output should include the following flags:\n\n-fm - audit failed file attribute modification events\nad - audit successful/failed administrative events\n-ex - audit failed program execution\naa - audit all authorization and authentication events\n-fr - audit all failed read actions where enforcement stops a read of a file\nlo - audit successful/failed login/logout events\n-fw - audit all failed write actions where enforcement stopped a file write\n\nThe -all flag will capture all failed events across all audit classes and can be used to supersede the individual flags for failed events.\nNote: Excluding potentially noisy audit events may be ideal, depending on your use-case.\nNote: Historical audit flags are listed below as preliminary guidance.",
    "remediation_procedure": "Terminal Method:\nPerform the following to set the required Security Auditing Flags:\nEdit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841876,
    "recommendation_id": 4596696,
    "view_level": "6.2.1",
    "title": "Ensure Protect Mail Activity in Mail Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596696,
    "url": "https://workbench.cisecurity.org/sections/2841876/recommendations/4596696",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Apple provides privacy protection that should be enabled for the mail app on macOS to reduce information collection from a user that receives email.",
    "rationale_statement": "Email is routinely abused by attackers, spammers and marketers. The \"Protect Mail Activity\" control reduces risk by hiding the current IP address of your Mac and privately downloading remote content.\nThe Protect Mail Activity function of privately downloading remote content is not applicable for those users that do not download any remote content. Typical Internet email is no longer plain text and will not render properly without remote content. Personal email or mailing list email may function without complaint by blocking remote content.",
    "impact_statement": "Some remote content may be access-controlled and refuse to download with this setting enabled.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that protect mail activity is enabled:\n\nOpen Mail\nSelect Mail in the menu bar\nSelect Settings...\nSelect Privacy\nVerify that Protect Mail Activity is enabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enabled protect mail activity:\n\nOpen Mail\nSelect Mail in the menu bar\nSelect Settings...\nSelect Privacy\nSet Protect Mail Activity to enabled",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596698,
    "view_level": "6.3.1",
    "title": "Ensure Automatic Opening of Safe Files in Safari Is Disabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596698,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596698",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Safari will automatically run or execute what it considers safe files. This can include installers and other files that execute on the operating system. Safari evaluates file safety by using a list of filetypes maintained by Apple. The list of files include text, image, video and archive formats that would be run in the context of the OS rather than the browser.",
    "rationale_statement": "Hackers have taken advantage of this setting via drive-by attacks. These attacks occur when a user visits a legitimate website that has been corrupted. The user unknowingly downloads a malicious file either by closing an infected pop-up or hovering over a malicious banner. An attacker can create a malicious file that will fall within Safari's safe file list that will download and execute without user input.",
    "impact_statement": "Apple considers many files that the operating system itself auto-executes as \"safe files.\" Many of these files could be malicious and could execute locally without the user even knowing that a file of a specific type had been downloaded.",
    "audit_procedure": "Graphical Method:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AutoOpenSafeDownloads set 0\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables safe files from opening in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoOpenSafeDownloads | /usr/bin/tr -d ' '            \n\nAutoOpenSafeDownloads = 0;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is AutoOpenSafeDownloads\nThe key must be set to: <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596703,
    "view_level": "6.3.2",
    "title": "Audit History and Remove History Items",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596703,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596703",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Organizational management of user web browsing history is a challenge affected by multiple facets. Organizations should decide whether to manage browser history and how much history should be maintained.",
    "rationale_statement": "There are conflicting concerns in the retention of browser history.\nUnlimited retention:\n\nConsumes disk space\nIs preferred by on-disk forensics teams\nIs user searchable for old visited pages\nRaises some user privacy concerns\nHas security concerns regarding retaining old links that may be stale or lead to compromised pages, or pages with changes or inappropriate content\n\nOld browser history becomes stale and the use or misuse of the data can lead to unwanted outcomes. Search engine results are maintained and often provide much more relevant current information than old website visit information.",
    "impact_statement": "If old browsing history is not available, it will not be available to authorized or unauthorized users. Some users may find old and even stale information useful.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify how long the history in Safari is kept:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has HistoryAgeInDaysLimit set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets how long the history is kept in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep HistoryAgeInDaysLimit | /usr/bin/tr -d ' '\n\nThe output will be HistoryAgeInDaysLimit =  followed by your organizations requirements.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is HistoryAgeInDaysLimit\nThe key must be set to: <integer><1,7,14,31,365,36500></integer>\n\nNote: Setting the plist key to a value that is not represented by the GUI could cause issues.\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596704,
    "view_level": "6.3.3",
    "title": "Ensure Warn When Visiting A Fraudulent Website in Safari Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596704,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596704",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple uses the Google Safe Browsing API to check for fraudulent websites and report them to the user attempting to visit one.",
    "rationale_statement": "Attackers use crafted web pages to social engineer users to load unwanted content. Warning users prior to loading the content enables better security.",
    "impact_statement": "Once-compromised websites serving malware could be sanitized and remain in the database, though there is no widespread reporting of that risk.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that warn when visiting a fraudulent site in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has WarnAboutFraudulentWebsites set to 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that warns when visiting fraudulent sites in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep WarnAboutFraudulentWebsites | /usr/bin/tr -d ' '              \n\nWarnAboutFraudulentWebsites = 1;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is WarnAboutFraudulentWebsites\nThe key must be set to: <true/>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596707,
    "view_level": "6.3.4",
    "title": "Ensure Prevent Cross-site Tracking in Safari Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596707,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596707",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "There is a vast network of groups that collect, use, and sell user data. One method used to collect user data is pay and provide content and services for website owners. Along with that \"assistance,\" the site owners also push tracking cookies on visitors. In many cases the help allows a content owner to keep the site up. The tracking cookies allow information brokers to track web users across visited sites. For better privacy and to provide some resistance to data brokers, prevent cross-tracking.",
    "rationale_statement": "Cross-tracking allows data-brokers to follow you across the Internet to enable their business model of selling personal data. Users should protect their data and not volunteer it to marketing companies.",
    "impact_statement": "Marketing companies will be unable to target you as effectively.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that preventing cross-site tracking in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has BlockStoragePolicy set to 2\nVerify that an installed profile also has WebKitPreferences.storageBlockingPolicy set to 1\nVerify that an installed profile also has WebKitStorageBlockingPolicy set to 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that prevents cross-site tracking in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep BlockStoragePolicy | /usr/bin/tr -d ' ' \n\nBlockStoragePolicy = 2;\n\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep WebKitPreferences.storageBlockingPolicy | /usr/bin/tr -d ' ' \n\nWebKitPreferences.storageBlockingPolicy = 1;\n\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep WebKitStorageBlockingPolicy | /usr/bin/tr -d ' ' \n\nWebKitStorageBlockingPolicy = 1;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is BlockStoragePolicy\nThe key must be set to: 2\nThe key to also include is WebKitPreferences.storageBlockingPolicy\nThe key must be set to: 1\nThe key to also include is WebKitStorageBlockingPolicy\nThe key must be set to: 1",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596710,
    "view_level": "6.3.5",
    "title": "Audit Hide IP Address in Safari Setting",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596710,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596710",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Public (Routable) IP addresses can be used to track people to their current location, including home and business addresses. While a valid IP address is necessary to load the site, the valid address does not need to be provided to known trackers and should be hidden.",
    "rationale_statement": "Trackers can correlate your visits through various applications, including websites, and are a threat to your privacy.",
    "impact_statement": "Website address blocking through iCloud Private Relay may prevent some wanted pages from loading that use IP geolocation access controls.\nSome organizations use IP address access controls (ACLs). If your organization or partners are using IP address ACLs, there will be unreachable web services if Apple hides the IP address.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the setting for hiding IP addresses from trackers in Safari:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Privacy\nVerify that Hide IP address from trackers is set to your organization's requirement\n\nTerminal Method:\nRun the following command to verify if IP addresses are hidden from trackers in Safari:\n% /usr/bin/sudo -u <username> /usr/bin/defaults read /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\nThe output will be either 33422560 if hide IP address from trackers is disabled, 33422564 if enabled from Trackers Only, or 33422572 if enabled from Trackers and Websites.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/defaults read /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\n130272\n\n% /usr/bin/sudo -u seconduser /usr/bin/defaults read /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\n130276\n\nIn the above example the firstuser has hide ip address from trackers disabled. Seconduser has it enabled.\nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Safari whether or not to hide IP addresses from trackers:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Privacy\nSet Hide IP address from trackers to your organization's requirements\n\nTerminal Method:\nRun the following command to enable or disable hiding IP addresses from trackers in Safari:\n% /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int <130272/130276>\n\n33422560 will set hide IP address from trackers to disabled. 33422564 will enable from Trackers Only, and 33422572 will enabled from Trackers and Websites.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/defaults write /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422560\n\n% /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422564\n\n% /usr/bin/sudo -u thirduser /usr/bin/defaults write /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422572\n\nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596711,
    "view_level": "6.3.6",
    "title": "Ensure Advertising Privacy Protection in Safari Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596711,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596711",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides a framework that allows advertisers to target Apple users and end-users with advertisements. While many people prefer that when they see advertising it is relevant to them and their interests, the detailed information that is data mining collected, correlated, and available to advertisers in repositories is often disconcerting. This information is valuable to both advertisers and attackers and has been used with other metadata to reveal users' identities.\nOrganizations should manage advertising settings on computers rather than allow users to configure the settings.\nApple Information\nAd tracking should be limited on 10.15 and prior.",
    "rationale_statement": "Organizations should manage user privacy settings on managed devices to align with organizational policies and user data protection requirements.",
    "impact_statement": "Uses will see generic advertising rather than targeted advertising. Apple warns that this will reduce the number of relevant ads.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that allow privacy-preserving measurement of ad effectiveness in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has WebKitPreferences.privateClickMeasurementEnabled set 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables safe files from opening in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep \"WebKitPreferences.privateClickMeasurementEnabled\" | /usr/bin/tr -d ' '\n\n\"WebKitPreferences.privateClickMeasurementEnabled\" = 1;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is WebKitPreferences.privateClickMeasurementEnabled\nThe key must be set to: <true/>\n\nNote: A user can still uncheck this option in the GUI, but it remains on in the background and will show it enabled when re-launching Safari.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596714,
    "view_level": "6.3.7",
    "title": "Ensure Show Full Website Address in Safari Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596714,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596714",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Attackers use websites with malicious or unwanted content to exploit the user or the computer. Part of the attack chain is to lure someone to load their content rather than the desired content. In order to reduce the risk in interacting with unwanted content, the full website address should always be displayed in Safari.",
    "rationale_statement": "Full visibility into what site is being visited is important for privacy and security.",
    "impact_statement": "Many URLs are very long and complicated, particularly for internal content management systems. Some complete URLS in the Smart Search Field may be difficult to parse.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that showing full website addresses in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has ShowFullURLInSmartSearchField set 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables safe files from opening in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep ShowFullURLInSmartSearchField | /usr/bin/tr -d ' '              \n\nShowFullURLInSmartSearchField = 1;",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is ShowFullURLInSmartSearchField\nThe key must be set to: <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596716,
    "view_level": "6.3.8",
    "title": "Audit AutoFill",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596716,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596716",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "AutoFill capabilities in a Web Browser are a feature to allow a user to avoid re-typing the same user information in every form that a user encounters. Part of the modern internet consists of vendors establishing a seemingly close relationship with as many users as possible to market to them, data-mine from them and sell their data to third-party data aggregators. AutoFill can be a method for a user to share too much information with untrusted website owners. Many security professionals advise disabling autofill to reduce the risk of over-sharing. These security professionals appear to believe that manual data entry is better, since completing the required forms are often the only method to connect to needed data. The best method for security is to ensure that the data ready to be auto-filled is an acceptable risk to sites a user interacts with. Users must review what data they accept the risk to share.",
    "rationale_statement": "Auditing and accepting information a user is willing to share prior to loading the blank form is the best way to manage risk.",
    "impact_statement": "A user could overshare information based on trusting a site more than required.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify AutoFill in Safari:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AutoFillFromAddressBook set to your organization's requirements\nVerify that an installed profile has AutoFillPasswords set to your organization's requirements\nVerify that an installed profile has AutoFillCreditCardData set to your organization's requirements\nVerify that an installed profile has AutoFillMiscellaneousForms set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets autofill in Safari to your organization's requirements:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillFromAddressBook | /usr/bin/tr -d ' ' && /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillPasswords | /usr/bin/tr -d ' ' && /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillCreditCardData | /usr/bin/tr -d ' ' && /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillMiscellaneousForms | /usr/bin/tr -d ' '\n\nThe output will be:\nAutoFillFromAddressBook=\nAutoFillPasswords=\nAutoFillCreditCardData=\nAutoFillMiscellaneousForms=\nEach key should be set to your organizations' requirements.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is AutoFillFromAddressBook\nThe key must be set to: <<true/false>/>\nThe key to include is AutoFillPasswords\nThe key must be set to: <<true/false>/>\nThe key to include is AutoFillCreditCardData\nThe key must be set to: <<true/false>/>\nThe key to include is AutoFillMiscellaneousForms\nThe key must be set to: <<true/false>/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596718,
    "view_level": "6.3.9",
    "title": "Audit Pop-up Windows",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596718,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596718",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Browser pop-up windows have long been one of the most annoying delivery mechanisms of unwanted web content. The content can be unwanted content, including Not Safe For Work, or malicious content relying on a user interacting with the pop-up. Safari has a built-in capability to disable pop-ups that should be enabled.",
    "rationale_statement": "Pop-up windows are almost always unwanted content and should be blocked.",
    "impact_statement": "Obsolete web content delivery systems may still rely on pop-ups on internal web portals. Specific domains can be set to be allowed if absolutely necessary. Web Developers should update content to reduce risk in the environment so that no pop-ups are allowed.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that the pop-up settings in Safari:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Pop-up Windows\nVerify the websites listed in Allow pop-up windows on the website below: are allowed according to your organization's requirements\nVerify that When visiting other websites is set to Block and Notify or Block",
    "remediation_procedure": "Graphical Method:\nPerform the following to configure pop-ups in Safari:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Websites\nSelect Pop-up Windows\nSet all websites to Block and Notify or Block, listed in Allow pop-up windows on the website below:, or select Remove to remove a website\nSet that When visiting other websites is set to Block and Notify or Block",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.1 Ensure Use of Only Fully Supported Browsers and Email Clients (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596719,
    "view_level": "6.3.10",
    "title": "Ensure Show Status Bar Is Enabled",
    "pivot_control_id": 439,
    "pivot_recommendation_id": 4596719,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596719",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The Status Bar in Safari shows the full URL of any link on hover. It protects the user from visiting sites where the domain has been obfuscated by allowing the user to review whether the link points to an unexpected location.",
    "rationale_statement": "Showing the Status Bar allows the user to review the full URL of hyperlinks.",
    "impact_statement": "The Status Bar is only visible at the very bottom of the Web page when a hyperlink is hovered over. There should be no noticeable impact.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that the status bar in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has ShowOverlayStatusBar set to 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables the status bar in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep ShowOverlayStatusBar | /usr/bin/tr -d ' '              \n\nShowOverlayStatusBar = 1;",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is ShowOverlayStatusBar\nThe key must be set to: <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.3 Maintain and Enforce Network-Based URL Filters (Version 8)",
    "section_id": 2841876,
    "recommendation_id": 4596696,
    "view_level": "6.2.1",
    "title": "Ensure Protect Mail Activity in Mail Is Enabled",
    "pivot_control_id": 441,
    "pivot_recommendation_id": 4596696,
    "url": "https://workbench.cisecurity.org/sections/2841876/recommendations/4596696",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Apple provides privacy protection that should be enabled for the mail app on macOS to reduce information collection from a user that receives email.",
    "rationale_statement": "Email is routinely abused by attackers, spammers and marketers. The \"Protect Mail Activity\" control reduces risk by hiding the current IP address of your Mac and privately downloading remote content.\nThe Protect Mail Activity function of privately downloading remote content is not applicable for those users that do not download any remote content. Typical Internet email is no longer plain text and will not render properly without remote content. Personal email or mailing list email may function without complaint by blocking remote content.",
    "impact_statement": "Some remote content may be access-controlled and refuse to download with this setting enabled.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that protect mail activity is enabled:\n\nOpen Mail\nSelect Mail in the menu bar\nSelect Settings...\nSelect Privacy\nVerify that Protect Mail Activity is enabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enabled protect mail activity:\n\nOpen Mail\nSelect Mail in the menu bar\nSelect Settings...\nSelect Privacy\nSet Protect Mail Activity to enabled",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.3 Maintain and Enforce Network-Based URL Filters (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596704,
    "view_level": "6.3.3",
    "title": "Ensure Warn When Visiting A Fraudulent Website in Safari Is Enabled",
    "pivot_control_id": 441,
    "pivot_recommendation_id": 4596704,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596704",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple uses the Google Safe Browsing API to check for fraudulent websites and report them to the user attempting to visit one.",
    "rationale_statement": "Attackers use crafted web pages to social engineer users to load unwanted content. Warning users prior to loading the content enables better security.",
    "impact_statement": "Once-compromised websites serving malware could be sanitized and remain in the database, though there is no widespread reporting of that risk.",
    "audit_procedure": "Graphical Method:\nPerform the following to verify that warn when visiting a fraudulent site in Safari is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has WarnAboutFraudulentWebsites set to 1\n\nTerminal Method:\nRun the following command to verify that a profile is installed that warns when visiting fraudulent sites in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep WarnAboutFraudulentWebsites | /usr/bin/tr -d ' '              \n\nWarnAboutFraudulentWebsites = 1;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is WarnAboutFraudulentWebsites\nThe key must be set to: <true/>\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.3 Maintain and Enforce Network-Based URL Filters (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596710,
    "view_level": "6.3.5",
    "title": "Audit Hide IP Address in Safari Setting",
    "pivot_control_id": 441,
    "pivot_recommendation_id": 4596710,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596710",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Public (Routable) IP addresses can be used to track people to their current location, including home and business addresses. While a valid IP address is necessary to load the site, the valid address does not need to be provided to known trackers and should be hidden.",
    "rationale_statement": "Trackers can correlate your visits through various applications, including websites, and are a threat to your privacy.",
    "impact_statement": "Website address blocking through iCloud Private Relay may prevent some wanted pages from loading that use IP geolocation access controls.\nSome organizations use IP address access controls (ACLs). If your organization or partners are using IP address ACLs, there will be unreachable web services if Apple hides the IP address.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify the setting for hiding IP addresses from trackers in Safari:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Privacy\nVerify that Hide IP address from trackers is set to your organization's requirement\n\nTerminal Method:\nRun the following command to verify if IP addresses are hidden from trackers in Safari:\n% /usr/bin/sudo -u <username> /usr/bin/defaults read /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\nThe output will be either 33422560 if hide IP address from trackers is disabled, 33422564 if enabled from Trackers Only, or 33422572 if enabled from Trackers and Websites.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/defaults read /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\n130272\n\n% /usr/bin/sudo -u seconduser /usr/bin/defaults read /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic\n\n130276\n\nIn the above example the firstuser has hide ip address from trackers disabled. Seconduser has it enabled.\nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Safari whether or not to hide IP addresses from trackers:\n\nOpen Safari\nSelect Safari from the menu bar\nSelect Settings\nSelect Privacy\nSet Hide IP address from trackers to your organization's requirements\n\nTerminal Method:\nRun the following command to enable or disable hiding IP addresses from trackers in Safari:\n% /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int <130272/130276>\n\n33422560 will set hide IP address from trackers to disabled. 33422564 will enable from Trackers Only, and 33422572 will enabled from Trackers and Websites.\nexample:\n% /usr/bin/sudo -u firstuser /usr/bin/defaults write /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422560\n\n% /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422564\n\n% /usr/bin/sudo -u thirduser /usr/bin/defaults write /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422572\n\nNote: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 9.6 Block Unnecessary File Types (Version 8)",
    "section_id": 2841878,
    "recommendation_id": 4596698,
    "view_level": "6.3.1",
    "title": "Ensure Automatic Opening of Safe Files in Safari Is Disabled",
    "pivot_control_id": 444,
    "pivot_recommendation_id": 4596698,
    "url": "https://workbench.cisecurity.org/sections/2841878/recommendations/4596698",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Safari will automatically run or execute what it considers safe files. This can include installers and other files that execute on the operating system. Safari evaluates file safety by using a list of filetypes maintained by Apple. The list of files include text, image, video and archive formats that would be run in the context of the OS rather than the browser.",
    "rationale_statement": "Hackers have taken advantage of this setting via drive-by attacks. These attacks occur when a user visits a legitimate website that has been corrupted. The user unknowingly downloads a malicious file either by closing an infected pop-up or hovering over a malicious banner. An attacker can create a malicious file that will fall within Safari's safe file list that will download and execute without user input.",
    "impact_statement": "Apple considers many files that the operating system itself auto-executes as \"safe files.\" Many of these files could be malicious and could execute locally without the user even knowing that a file of a specific type had been downloaded.",
    "audit_procedure": "Graphical Method:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AutoOpenSafeDownloads set 0\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables safe files from opening in Safari:\n% /usr/bin/sudo /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoOpenSafeDownloads | /usr/bin/tr -d ' '            \n\nAutoOpenSafeDownloads = 0;\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.Safari\nThe key to include is AutoOpenSafeDownloads\nThe key must be set to: <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.1 Deploy and Maintain Anti-Malware Software (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596685,
    "view_level": "2.6.5",
    "title": "Ensure Gatekeeper Is Enabled",
    "pivot_control_id": 447,
    "pivot_recommendation_id": 4596685,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596685",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Gatekeeper is Apple\u2019s application that utilizes allowlisting to restrict downloaded applications from launching. It functions as a control to limit applications from unverified sources from running without authorization. In an update to Gatekeeper in macOS 13 Ventura, Gatekeeper checks every application on every launch, not just quarantined apps.",
    "rationale_statement": "Disallowing unsigned software will reduce the risk of unauthorized or malicious applications from running on the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Gatekeeper is enabled:\n\nOpen System Settings\nSelect Privacy & Security\nVerify that 'Allow apps downloaded from' is set to 'App Store and identified developers'\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Policies set to Enable\nVerify that an installed profile has Identified Developers set to Allow\n\nTerminal Method:\nRun the following command to verify that Gatekeeper is enabled:\n% /usr/bin/sudo /usr/sbin/spctl --status\n\nassessments enabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Gatekeeper:\n\nOpen System Settings\nSelect Privacy & Security\nSet 'Allow apps downloaded from' to 'App Store and identified developers'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.systempolicy.control\nThe key to include is AllowIdentifiedDevelopers\nThe key must be set to <true/>\nThe key to also include is EnableAssessment\nThe key must be set to <true/>\n\nNote: In previous versions of macOS, Gatekeeper could be set using the binary. This has been removed in macOS 15 Sequoia.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.1 Deploy and Maintain Anti-Malware Software (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596712,
    "view_level": "5.10",
    "title": "Ensure XProtect Is Running and Updated",
    "pivot_control_id": 447,
    "pivot_recommendation_id": 4596712,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596712",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "XProtect is Apple's native signature-based antivirus technology. XProtect both finds and blocks the execution of known malware. There are many AV and Endpoint Threat Detection and Response (ETDR) tools available for Mac OS. The native Apple provisioned tool looks for specific known malware and is completely integrated into the OS. No matter what other tools are being used, XProtect should have the latest signatures available.",
    "rationale_statement": "Apple creates signatures for known malware that actually affects Macs and that knowledge should be leveraged.",
    "impact_statement": "Some organizations may have effective Mac OS anti-malware tools that XProtect conflicts with.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that XProtect is running and up-to-date:\n% /usr/bin/sudo /usr/bin/xprotect status\n\nXProtect launch scans: enabled\nXProtect background scans: enabled\n\nNote: XProtect can only be disabled while SIP (System Integrity Protection) is disabled. If XProtect is disabled while SIP is enabled, there needs to be a more significant investigation on this system and assume it is compromised in some way.\nTo verify the updates to XProtect, run the following commands:\n% /usr/bin/sudo /usr/bin/xprotect check\n\nThe output will be Current update: date: with the date of the latest version and version: with the version number, ex. Current update: date: 2024-10-16 12:49:47 +0000 version: 5278. The check function can take a few minutes to verify the most up-to-date version of XProtect, so waiting 10+ minutes to run the next command is a best practice for verifying if XProtect is running the current version.\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nNo update applied, already up to date",
    "remediation_procedure": "Terminal Method:\nRun the following command to enable and update XProtect:\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XProtect.daemon.scan.plist\n\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XprotectFramework.PluginService.plist\n\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nUpdate succeeded: Activated update LocalUpdate[<newest XProtect version>]\n\nNote: Xprotect can only be enabled/disabled if SIP (System Integrity Protection) is disabled. If Xprotect is disabled, the system might be compromised and needs to be investigated.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.2 Configure Automatic Anti-Malware Signature Updates (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596685,
    "view_level": "2.6.5",
    "title": "Ensure Gatekeeper Is Enabled",
    "pivot_control_id": 448,
    "pivot_recommendation_id": 4596685,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596685",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Gatekeeper is Apple\u2019s application that utilizes allowlisting to restrict downloaded applications from launching. It functions as a control to limit applications from unverified sources from running without authorization. In an update to Gatekeeper in macOS 13 Ventura, Gatekeeper checks every application on every launch, not just quarantined apps.",
    "rationale_statement": "Disallowing unsigned software will reduce the risk of unauthorized or malicious applications from running on the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Gatekeeper is enabled:\n\nOpen System Settings\nSelect Privacy & Security\nVerify that 'Allow apps downloaded from' is set to 'App Store and identified developers'\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Policies set to Enable\nVerify that an installed profile has Identified Developers set to Allow\n\nTerminal Method:\nRun the following command to verify that Gatekeeper is enabled:\n% /usr/bin/sudo /usr/sbin/spctl --status\n\nassessments enabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Gatekeeper:\n\nOpen System Settings\nSelect Privacy & Security\nSet 'Allow apps downloaded from' to 'App Store and identified developers'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.systempolicy.control\nThe key to include is AllowIdentifiedDevelopers\nThe key must be set to <true/>\nThe key to also include is EnableAssessment\nThe key must be set to <true/>\n\nNote: In previous versions of macOS, Gatekeeper could be set using the binary. This has been removed in macOS 15 Sequoia.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.2 Configure Automatic Anti-Malware Signature Updates (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596712,
    "view_level": "5.10",
    "title": "Ensure XProtect Is Running and Updated",
    "pivot_control_id": 448,
    "pivot_recommendation_id": 4596712,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596712",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "XProtect is Apple's native signature-based antivirus technology. XProtect both finds and blocks the execution of known malware. There are many AV and Endpoint Threat Detection and Response (ETDR) tools available for Mac OS. The native Apple provisioned tool looks for specific known malware and is completely integrated into the OS. No matter what other tools are being used, XProtect should have the latest signatures available.",
    "rationale_statement": "Apple creates signatures for known malware that actually affects Macs and that knowledge should be leveraged.",
    "impact_statement": "Some organizations may have effective Mac OS anti-malware tools that XProtect conflicts with.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that XProtect is running and up-to-date:\n% /usr/bin/sudo /usr/bin/xprotect status\n\nXProtect launch scans: enabled\nXProtect background scans: enabled\n\nNote: XProtect can only be disabled while SIP (System Integrity Protection) is disabled. If XProtect is disabled while SIP is enabled, there needs to be a more significant investigation on this system and assume it is compromised in some way.\nTo verify the updates to XProtect, run the following commands:\n% /usr/bin/sudo /usr/bin/xprotect check\n\nThe output will be Current update: date: with the date of the latest version and version: with the version number, ex. Current update: date: 2024-10-16 12:49:47 +0000 version: 5278. The check function can take a few minutes to verify the most up-to-date version of XProtect, so waiting 10+ minutes to run the next command is a best practice for verifying if XProtect is running the current version.\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nNo update applied, already up to date",
    "remediation_procedure": "Terminal Method:\nRun the following command to enable and update XProtect:\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XProtect.daemon.scan.plist\n\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XprotectFramework.PluginService.plist\n\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nUpdate succeeded: Activated update LocalUpdate[<newest XProtect version>]\n\nNote: Xprotect can only be enabled/disabled if SIP (System Integrity Protection) is disabled. If Xprotect is disabled, the system might be compromised and needs to be investigated.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.5 Enable Anti-Exploitation Features (Version 8)",
    "section_id": 2841869,
    "recommendation_id": 4596685,
    "view_level": "2.6.5",
    "title": "Ensure Gatekeeper Is Enabled",
    "pivot_control_id": 451,
    "pivot_recommendation_id": 4596685,
    "url": "https://workbench.cisecurity.org/sections/2841869/recommendations/4596685",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Gatekeeper is Apple\u2019s application that utilizes allowlisting to restrict downloaded applications from launching. It functions as a control to limit applications from unverified sources from running without authorization. In an update to Gatekeeper in macOS 13 Ventura, Gatekeeper checks every application on every launch, not just quarantined apps.",
    "rationale_statement": "Disallowing unsigned software will reduce the risk of unauthorized or malicious applications from running on the system.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Gatekeeper is enabled:\n\nOpen System Settings\nSelect Privacy & Security\nVerify that 'Allow apps downloaded from' is set to 'App Store and identified developers'\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Policies set to Enable\nVerify that an installed profile has Identified Developers set to Allow\n\nTerminal Method:\nRun the following command to verify that Gatekeeper is enabled:\n% /usr/bin/sudo /usr/sbin/spctl --status\n\nassessments enabled",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Gatekeeper:\n\nOpen System Settings\nSelect Privacy & Security\nSet 'Allow apps downloaded from' to 'App Store and identified developers'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.systempolicy.control\nThe key to include is AllowIdentifiedDevelopers\nThe key must be set to <true/>\nThe key to also include is EnableAssessment\nThe key must be set to <true/>\n\nNote: In previous versions of macOS, Gatekeeper could be set using the binary. This has been removed in macOS 15 Sequoia.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.5 Enable Anti-Exploitation Features (Version 8)",
    "section_id": 2841865,
    "recommendation_id": 4596662,
    "view_level": "5.1.2",
    "title": "Ensure System Integrity Protection Status (SIP) Is Enabled",
    "pivot_control_id": 451,
    "pivot_recommendation_id": 4596662,
    "url": "https://workbench.cisecurity.org/sections/2841865/recommendations/4596662",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "System Integrity Protection is a security feature introduced in OS X 10.11 El Capitan. System Integrity Protection restricts access to System domain locations and restricts runtime attachment to system processes. Any attempt to inspect or attach to a system process will fail. Kernel Extensions are now restricted to /Library/Extensions and are required to be signed with a Developer ID.",
    "rationale_statement": "Running without System Integrity Protection on a production system runs the risk of the modification of system binaries or code injection of system processes that would otherwise be protected by SIP.",
    "impact_statement": "System binaries and processes could become compromised.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that System Integrity Protection is enabled:\n% /usr/bin/sudo /usr/bin/csrutil status\n\n`System Integrity Protection status: enabled.`",
    "remediation_procedure": "Terminal Method:\nPerform the following steps to enable System Integrity Protection:\n\nReboot into the Recovery Partition (reboot and hold down Command (\u2318) + R)\nSelect Utilities\nSelect Terminal\nRun the following command:\n\n# /usr/bin/sudo /usr/bin/csrutil enable\n\nSuccessfully enabled System Integrity Protection. Please restart the machine for the changes to take effect.\n\n\nReboot the computer\n\nNote: You should research why the system had SIP disabled. It might be a better option to erase the Mac and reinstall the operating system. That is at your discretion.\nNote: You cannot enable System Integrity Protection from the booted operating system. If the remediation is attempted in the booted OS and not the Recovery Partition the output will give the error csrutil: failed to modify system integrity configuration. This tool needs to be executed from the Recovery OS.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 10.5 Enable Anti-Exploitation Features (Version 8)",
    "section_id": 2841864,
    "recommendation_id": 4596712,
    "view_level": "5.10",
    "title": "Ensure XProtect Is Running and Updated",
    "pivot_control_id": 451,
    "pivot_recommendation_id": 4596712,
    "url": "https://workbench.cisecurity.org/sections/2841864/recommendations/4596712",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "XProtect is Apple's native signature-based antivirus technology. XProtect both finds and blocks the execution of known malware. There are many AV and Endpoint Threat Detection and Response (ETDR) tools available for Mac OS. The native Apple provisioned tool looks for specific known malware and is completely integrated into the OS. No matter what other tools are being used, XProtect should have the latest signatures available.",
    "rationale_statement": "Apple creates signatures for known malware that actually affects Macs and that knowledge should be leveraged.",
    "impact_statement": "Some organizations may have effective Mac OS anti-malware tools that XProtect conflicts with.",
    "audit_procedure": "Terminal Method:\nRun the following command to verify that XProtect is running and up-to-date:\n% /usr/bin/sudo /usr/bin/xprotect status\n\nXProtect launch scans: enabled\nXProtect background scans: enabled\n\nNote: XProtect can only be disabled while SIP (System Integrity Protection) is disabled. If XProtect is disabled while SIP is enabled, there needs to be a more significant investigation on this system and assume it is compromised in some way.\nTo verify the updates to XProtect, run the following commands:\n% /usr/bin/sudo /usr/bin/xprotect check\n\nThe output will be Current update: date: with the date of the latest version and version: with the version number, ex. Current update: date: 2024-10-16 12:49:47 +0000 version: 5278. The check function can take a few minutes to verify the most up-to-date version of XProtect, so waiting 10+ minutes to run the next command is a best practice for verifying if XProtect is running the current version.\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nNo update applied, already up to date",
    "remediation_procedure": "Terminal Method:\nRun the following command to enable and update XProtect:\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XProtect.daemon.scan.plist\n\n% /usr/bin/sudo /bin/launchctl load -w /Library/Apple/System/Library/LaunchDaemons/com.apple.XprotectFramework.PluginService.plist\n\n% /usr/bin/sudo /usr/bin/xprotect update\n\nStarting update.\nUpdate succeeded: Activated update LocalUpdate[<newest XProtect version>]\n\nNote: Xprotect can only be enabled/disabled if SIP (System Integrity Protection) is disabled. If Xprotect is disabled, the system might be compromised and needs to be investigated.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 11.2 Perform Automated Backups  (Version 8)",
    "section_id": 2841863,
    "recommendation_id": 4596659,
    "view_level": "2.3.4.1",
    "title": "Ensure Backup Automatically is Enabled If Time Machine Is Enabled",
    "pivot_control_id": 456,
    "pivot_recommendation_id": 4596659,
    "url": "https://workbench.cisecurity.org/sections/2841863/recommendations/4596659",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Backup solutions are only effective if the backups run on a regular basis. The time to check for backups is before the hard drive fails or the computer goes missing. In order to simplify the user experience so that backups are more likely to occur, Time Machine should be on and set to Back Up Automatically whenever the target volume is available.\nOperational staff should ensure that backups complete on a regular basis and the backups are tested to ensure that file restoration from backup is possible when needed.\nBackup dates are available even when the target volume is not available in the Time Machine plist.\nSnapshotDates = (\n\"2020-08-20 12:10:22 +0000\",\n\"2021-02-03 23:43:22 +0000\",\n\"2022-02-19 21:37:21 +0000\",\n\"2023-02-22 13:07:25 +0000\",\n\"2024-08-20 14:07:14 +0000\"\nWhen the backup volume is connected to the computer, more extensive information is available through tmutil. See man tmutil.\nNote: This recommendation needs to be set on devices where Time Machine is enabled. If Time Machine is disabled, the audit is passed by default.",
    "rationale_statement": "Backups should automatically run whenever the backup drive is available.",
    "impact_statement": "The backup will run periodically in the background and could have user impact while running.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that automatic backups are set if Time Machine is enabled:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nVerify that 'Next Back Up' is set to Automatically\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has AutoBackup=1\n\nTerminal Method:\nRun the following command to verify that Time Machine is set to automatically backup if Time Machine is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\\\n  .objectForKey('AutoBackup'))\n  if ( pref1  == null ) {\n    return(\"Preference Not Set\")\n  }  else if ( pref1 == 1 ) {\n    return(\"true\")\n  }  else {\n    return(\"false\")\n  }\n}\nEOS\n\nThe output should either be Preference Not Set or true. If it is false, then the computer is not in compliance\nRun the following command to check the snapshot dates to verify that the dates meet your organization's approved backup frequency:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/com.apple.TimeMachine.plist Destinations\n\nThe output will contain all the Time Machine backups in the format \"YYYY-MM-DD HH:MM:SS +0000\"\nexample:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\nfunction run() {\n  let pref1 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\\\n  .objectForKey('AutoBackup'))\n  let pref2 = ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.TimeMachine')\\\n  .objectForKey('LastDestinationID'))\n  if ( pref2  == null ) {\n    return(\"Preference Not Set\")\n  }  else if ( pref1 == 1 ) {\n    return(\"true\")\n  }  else {\n    return(\"false\")\n  }\n}\nEOS\n\ntrue\n\n% /usr/bin/sudo /usr/bin/defaults read read /Library/Preferences/com.apple.TimeMachine.plist Destinations           \n\n(\n        {\n        BackupAlias = {length = 348, bytes = 0x00000000 015c0002 00011442 61636b75 ... 20564d00 ffff0000 };\n        BytesAvailable = 4855873536;\n        BytesUsed = 5125054464;\n        ConsistencyScanDate = \"2022-09-22 18:21:01 +0000\";\n        DestinationID = \"A64EA502-30DD-480C-9F7B-4F3EEDD0D186\";\n        DestinationUUIDs =         (\n            \"0D946E5D-68ED-4F63-BCBD-CE7FC94F47C0\"\n        );\n        FilesystemTypeName = apfs;\n        HealthCheckDecision = 0;\n        InheritanceDecision = 0;\n        LastKnownEncryptionState = Encrypted;\n        RESULT = 0;\n        ReferenceLocalSnapshotDate = \"2024-09-22 18:21:53 +0000\";\n        SnapshotDates =         (\n            \"2024-09-22 18:21:01 +0000\",\n            \"2024-09-22 18:21:32 +0000\",\n            \"2024-09-22 18:21:57 +0000\"\n        );\n    }\n)",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable Time Machine automatic backup:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nSelect Options...\nSet Back up frequency to Automatically <every hour/every day/every week>\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.MCX.TimeMachine\nThe key to include is AutoBackup\nThe key must be set to <true/>\n\nNote: In previous versions of the benchmark, the plist could be set in Terminal. In macOS 15 Sequoia that plist is now protected and cannot be written to, so the command line remediation has been removed. Both the profile method and graphical method still configure Time Machine to the required state.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 11.3 Protect Recovery Data (Version 8)",
    "section_id": 2841863,
    "recommendation_id": 4596661,
    "view_level": "2.3.4.2",
    "title": "Ensure Time Machine Volumes Are Encrypted If Time Machine Is Enabled",
    "pivot_control_id": 457,
    "pivot_recommendation_id": 4596661,
    "url": "https://workbench.cisecurity.org/sections/2841863/recommendations/4596661",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "One of the most important security tools for data protection on macOS is FileVault. With encryption in place, it makes it difficult for an outside party to access your data if they get physical possession of the computer. One very large weakness in data protection with FileVault is the level of protection on backup volumes. If the internal drive is encrypted but the external backup volume that goes home in the same laptop bag is not, it is self-defeating. Apple tries to make this mistake easily avoided by providing a checkbox to enable encryption when setting up a Time Machine backup. Using this option does require some password management, particularly if a large drive is used with multiple computers. A unique, complex password to unlock the drive can be stored in keychains on multiple systems for ease of use.\nWhile some portable drives may contain non-sensitive data and encryption may make interoperability with other systems difficult, backup volumes should be protected just like boot volumes.\nNote: This recommendation needs to be set on devices where Time Machine is enabled. If Time Machine is disabled, the audit is passed by default.",
    "rationale_statement": "Backup volumes need to be encrypted.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the drive used for Time Machine is encrypted:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nVerify that every drive setup for Time Machine states Encrypted\n\nTerminal Method:\nRun the following command to verify if the Time Machine disk encryption is enabled:\n% /usr/bin/sudo /usr/bin/defaults read /Library/Preferences/com.apple.TimeMachine.plist | grep -c NotEncrypted\n\n0",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to enable encryption on the Time Machine drive:\n\nOpen System Settings\nSelect General\nSelect Time Machine\nSelect the unencrypted drive\nSelect - to forget that drive as a destination\nSelect + to add a different drive as the destination\nSelect Set Up Disk...\nSet Encrypt Backup to enabled\nEnter a password in the New Password and the same password in the Re-enter Password fields\nA password hint is required, but it is recommended that you do not use any identifying information for the password\n\nNote: In macOS 12.0 Monterey and previous, the existing Time Machine drive could have encryption added without formatting it. This is no longer possible in macOS 13.0 Ventura. If you wish to keep previous backups from the unencrypted volume, you will need to manually move those files over to the new encrypted drive.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 12.6 Use of Secure Network Management and Communication Protocols  (Version 8)",
    "section_id": 2841866,
    "recommendation_id": 4596664,
    "view_level": "2.4.1",
    "title": "Ensure Show Wi-Fi status in Menu Bar Is Enabled",
    "pivot_control_id": 466,
    "pivot_recommendation_id": 4596664,
    "url": "https://workbench.cisecurity.org/sections/2841866/recommendations/4596664",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "The Wi-Fi status in the menu bar indicates if the system's wireless internet capabilities are enabled. If so, the system will scan for available wireless networks in order to connect. At the time of this revision, all computers Apple builds have wireless network capability, which has not always been the case. This control only pertains to systems that have a wireless NIC available. Operating systems running in a virtual environment may not score as expected, either.",
    "rationale_statement": "Enabling \"Show Wi-Fi status in menu bar\" is a security awareness method that helps mitigate public area wireless exploits by making the user aware of their wireless connectivity status.",
    "impact_statement": "The user of the system should have a quick check on their wireless network status available.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify that the Wi-Fi status shows in the menu bar:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has WiFi set to 18\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables Wi-FI to be shown in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\\n.objectForKey('WiFi').js\nEOS\n\n18\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.controlcenter\nThe key to include is WiFi\nThe key must be set to <integer>18</integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 13.1 Centralize Security Event Alerting (Version 8)",
    "section_id": 2841855,
    "recommendation_id": 4596623,
    "view_level": "2.2.1",
    "title": "Ensure Firewall Is Enabled",
    "pivot_control_id": 470,
    "pivot_recommendation_id": 4596623,
    "url": "https://workbench.cisecurity.org/sections/2841855/recommendations/4596623",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "A firewall is a piece of software that blocks unwanted incoming connections to a system. The socketfilter Firewall is what is used when the Firewall is turned on in the Security & Privacy Preference Pane. Logging is required to appropriately monitor what access is allowed and denied. The logs can be viewed in the macOS Unified Logs.\nIn previous versions of macOS (prior to macOS 15 Sequoia) there was an additional step to turn on firewall logging after enabling the firewall. As of macOS 15 logging is turned on automatically without user interaction. The logging recommendation has been removed in the macOS 15 benchmark and will not be included going forward. If your organization is looking for more detailed information about network security, you will need a third-party solution.",
    "rationale_statement": "A firewall minimizes the threat of unauthorized users gaining access to your system while connected to a network or the Internet.",
    "impact_statement": "The firewall may block legitimate traffic. Applications that are unsigned will require special handling.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure the firewall is enabled:\n\nOpen System Settings\nSelect Network\nVerify that the Firewall is Active\n\nor\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Firewall set to Enabled\n\nTerminal Method:\nRun the following command to verify that the firewall is enabled:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.security.firewall')\\\n.objectForKey('EnableFirewall').js\nEOS\n\ntrue\n\nAlso, the status of the firewall can be checked with the binary. Run the following command to verify if the firewall is enabled with the binary:\n% /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate\n\nThe output will either be Firewall is enabled. (State = 1) or Firewall is enabled. (State = 2) if the firewall is enabled. If the firewall is disabled, the output will be Firewall is disabled. (State = 0)",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to turn the firewall on:\n\nOpen System Settings\nSelect Network\nSelect Firewall\nSet Firewall to enabled\n\nTerminal Method:\nRun the following command to enable the firewall:\n% /usr/libexec/ApplicationFirewall/socketfilterfw  --setglobalstate on \n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.security.firewall\nThe key to include is EnableFirewall\nThe key must be set to <true/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 13.9 Deploy Port-Level Access Control (Version 8)",
    "section_id": 2841866,
    "recommendation_id": 4596667,
    "view_level": "2.4.2",
    "title": "Ensure Show Bluetooth Status in Menu Bar Is Enabled",
    "pivot_control_id": 478,
    "pivot_recommendation_id": 4596667,
    "url": "https://workbench.cisecurity.org/sections/2841866/recommendations/4596667",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "By showing the Bluetooth status in the menu bar, a small Bluetooth icon is placed in the menu bar. This icon quickly shows the status of Bluetooth, and can allow the user to quickly turn Bluetooth on or off.",
    "rationale_statement": "Enabling \"Show Bluetooth status in menu bar\" is a security awareness method that helps understand the current state of Bluetooth, including whether it is enabled, discoverable, what paired devices exist, and what paired devices are currently active.",
    "impact_statement": "Bluetooth is a useful wireless tool that has been widely exploited when configured improperly. The user should have insight into the Bluetooth status.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to ensure that Bluetooth status shows in the menu bar:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Bluetooth set to 18\n\nTerminal Method:\nRun the following command to verify that a profile is installed that enables Bluetooth to be shown in the menu bar:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.controlcenter')\\\n.objectForKey('Bluetooth').js\nEOS\n\n18\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.controlcenter\nThe key to include is Bluetooth\nThe key must be set to <integer>18</integer>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596616,
    "view_level": "2.1.1.1",
    "title": "Audit iCloud Keychain",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596616,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596616",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts.\nIf passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage.",
    "rationale_statement": "Ensure that the iCloud keychain is used consistently with organizational requirements.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify a profile is installed for the iCloud keychain sync service:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Keychain Sync set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Keychain sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudKeychainSync').js\nEOS\n\nIf the output is false, iCloud Keychain Sync is disabled. If the output is true, iCloud Keychain sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudKeychainSync\nThe key should be set <true/>, to allow iCloud keychain syncing, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596617,
    "view_level": "2.1.1.2",
    "title": "Audit iCloud Drive",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596617,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596617",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.\nOne of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information.",
    "rationale_statement": "Organizations should review third party storage solutions pertaining to existing data confidentiality and integrity requirements.",
    "impact_statement": "Users will not be able to use continuity on macOS to resume the use of newly composed but unsaved files.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if a profile is installed to configure iCloud Drive:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Drive set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that a profile is installed that sets iCloud Drive sync to your organization's settings:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDocumentSync').js\nEOS             \n\nIf the output is false, iCloud Drive Sync is disabled. If the output is true, iCloud Drive sync is enabled.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDocumentSync\nThe key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596618,
    "view_level": "2.1.1.3",
    "title": "Ensure iCloud Drive Document and Desktop Sync Is Disabled",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596618,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596618",
    "assessment_status": "Automated",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.\nThe storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.\nEnterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.\nThe automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.\nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/",
    "rationale_statement": "Automated Document synchronization should be planned and controlled to approved storage.",
    "impact_statement": "Users will not be able to use iCloud for the automatic sync of the Desktop and Documents folders.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Desktop and Documents in iCloud Drive is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Desktop & Documents Sync set to True\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables iCloud Document and Desktop Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudDesktopAndDocuments').js\nEOS\n\nfalse\n\nNote: Since the profile method sets a system-wide setting, the individual user audit and/or remediation has been removed. To be compliant, a profile must be installed for this recommendation. We have included the individual user information in the additional information section for reference only.",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudDesktopAndDocuments\nThe key must be set to <false/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596620,
    "view_level": "2.1.1.5",
    "title": "Audit Freeform Sync to iCloud",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596620,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596620",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 13.1 (Ventura) Apple has made a collaboration tool (Freeform) available on macOS, iOS and iPadOS. This application allows for extensive whiteboard creation and sharing using iCloud. Organizations may want to audit the use of Freeform iCloud sharing of internally created boards.",
    "rationale_statement": "Internally created whiteboards may not be authorized to share to external contacts through iCloud.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if iCloud Freeform sync is enabled:\n\nOpen System Settings\nSelect General\nSelect Device Management\nVerify that an installed profile has Disallow iCloud Freeform Sync set to your organization's requirement\n\nTerminal Method:\nRun the following command to verify that a profile is installed that disables Freeform Sync:\n% /usr/bin/sudo /usr/bin/osascript -l JavaScript << EOS\n$.NSUserDefaults.alloc.initWithSuiteName('com.apple.applicationaccess')\\\n.objectForKey('allowCloudFreeform').js\nEOS\n\nThe output should match your organization's requirement",
    "remediation_procedure": "Profile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\nThe key to include is allowCloudFreeform\nThe key must be set to <<true/false>/>",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841854,
    "recommendation_id": 4596621,
    "view_level": "2.1.1.6",
    "title": "Audit Find My Mac",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596621,
    "url": "https://workbench.cisecurity.org/sections/2841854/recommendations/4596621",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Find My is Apple's consumer solution for device tracking of your devices. This allows a user to track the location of devices associated with their Apple Account. This is a great solution for consumer or user device management and tracking, but it is not meant to be an enterprise management solution to device tracking and information management on enterprise managed devices. There are multiple enterprise MDM solutions for managing organizational devices.",
    "rationale_statement": "An enterprise solution should be used for tracking and information management of all devices, including Apple devices. Apple's Find My solution only handles Apple devices. If no enterprise solution is available, Find My provides capabilities for a user to manage and track Apple devices. It is not designed as an enterprise solution, and should not be used as one. It is better to allow the user to track devices that use their Apple Account than to have no tracking at all.",
    "impact_statement": "There should be no impact on the user while using the device. If someone other than the user has access to tracking information, this can impact the user and needs to be researched. Users should audit to ensure that only authorized people have access to your location. Using multiple solutions for device tracking can add unnecessary complexity.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify if Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nVerify that Find My Mac is set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set Security Keys is set to your organization's requirements:\n\nOpen System Settings\nSelect Apple Account\nSelect iCloud\nSelect Show More Apps..\nSet Find My Mac is set to your organization's requirements",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 15.3 Classify Service Providers (Version 8)",
    "section_id": 2841889,
    "recommendation_id": 4596732,
    "view_level": "2.17.1",
    "title": "Audit Internet Accounts for Authorized Use",
    "pivot_control_id": 493,
    "pivot_recommendation_id": 4596732,
    "url": "https://workbench.cisecurity.org/sections/2841889/recommendations/4596732",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 1"
      }
    ],
    "description": "Apple provides a section in System Settings to create and display Internet Accounts. Setting up an Internet Account allows the user to configure access to pre-existing accounts that are Internet Accessible. The Internet Accounts section is not managing network access to firewall rules, it only provides a location to manage credentials and audit external accounts for applications that make use of the \"Internet Accounts.\" Some applications, like Thunderbird and Firefox, do not natively use Internet Accounts and store credentials with the application settings. Disabling the Internet Accounts section does not block access if network reachable, it just makes auditing and use more difficult. Depending on the maturity of network controls, auditing the providers listed in Internet Accounts is part of managing acceptable use.",
    "rationale_statement": "Internet provided services may be restricted in your organization and should be reviewed. Even with an advanced application firewall, the user may not always be using an internal trusted network subject to the organizational firewall. An audit will document which services a user has configured.",
    "impact_statement": "Risky services may be identified that are not authorized and will require a recess to work with the user to no longer connect from a managed Mac.",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what accounts have been added to Internet Accounts:\n\nOpen System Settings\nSelect Internet Accounts\nVerify that all accounts are set to your organization's requirements",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set accounts in Internet Accounts to your organization's requirements:\n\nOpen System Settings\nSelect Internet Accounts\nFor each account, select the account\nVerify that each sync option is set to your organization's requirements\n(Optional) Select Delete Account... to remove the account\n(Optional) Select Add Account... to add an account to the system",
    "default_value": ""
  },
  {
    "control_title": "CIS Control: 16.7 Use Standard Hardening Configuration Templates for Application Infrastructure (Version 8)",
    "section_id": 2841871,
    "recommendation_id": 4596679,
    "view_level": "2.6.2.1",
    "title": "Audit Full Disk Access for Applications",
    "pivot_control_id": 505,
    "pivot_recommendation_id": 4596679,
    "url": "https://workbench.cisecurity.org/sections/2841871/recommendations/4596679",
    "assessment_status": "Manual",
    "applicable_profiles": [
      {
        "title": "Level 2"
      }
    ],
    "description": "Starting with macOS 10.13, Apple enforces GUI access to the entire File System through System Preferences. Only Applications from known developers with mission requirements for Full Disk Access, such as security monitoring tools, should have Full Disk Access. Applications that have Full Disk Access can access restricted files and bypass macOS security controls. Any applications with that access should be organizationally authorized.",
    "rationale_statement": "Any applications with Full Disk Access can bypass MacOS security controls and must be reviewed as organizationally accepted risk.",
    "impact_statement": "",
    "audit_procedure": "Graphical Method:\nPerform the following steps to verify what applications have full disk access:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Full Disk Access\nVerify that the applications are set to your organization's requirements\n\nTerminal Method:\nRun the following command to verify that what applications have full disk access enabled:\n% /usr/bin/sudo /usr/bin/sqlite3 /Library/Application\\ Support/com.apple.TCC/TCC.db 'select client from access where auth_value and service = \"kTCCServiceSystemPolicyAllFiles\"'\n\nThe output will be what applications have full disk access enabled.",
    "remediation_procedure": "Graphical Method:\nPerform the following steps to set full disk access for applications that meet your organization's requirements:\n\nOpen System Settings\nSelect Privacy & Security\nSelect Full Disk Access\nSet any listed applications to your organization's requirements\n(Optional) Select the + to add applications to the list, or - to remove them",
    "default_value": ""
  }
]
